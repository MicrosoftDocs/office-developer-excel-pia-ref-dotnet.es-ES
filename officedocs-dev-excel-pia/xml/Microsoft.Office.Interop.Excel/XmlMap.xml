<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90e19f9871537de3824defd244b85c6255bb7e45" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999626" /></Metadata><TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="542b5-101">Representa una asignación XML que se ha agregado a un libro.</span><span class="sxs-lookup"><span data-stu-id="542b5-101">Represents an XML map that has been added to a workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="542b5-102">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-102">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
      <para><span data-ttu-id="542b5-103">Use el <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> método de la colección para agregar una <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> asignación XML a un libro.</span><span class="sxs-lookup"><span data-stu-id="542b5-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</span></span></para>
      <para><span data-ttu-id="542b5-104">Importar y exportar datos XML</span><span class="sxs-lookup"><span data-stu-id="542b5-104">Importing and exporting XML data</span></span></para>
      <para><span data-ttu-id="542b5-105">Utilice el método para importar datos XML de un archivo de datos XML en <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> celdas asignadas al <b>xmlmap especificado</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="542b5-106">El <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> método importa datos XML para una variable <b>String.</b></span><span class="sxs-lookup"><span data-stu-id="542b5-106">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</span></span></para>
      <para><span data-ttu-id="542b5-107">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> método para exportar datos de celdas asignadas al <b>xmlmap especificado.</b></span><span class="sxs-lookup"><span data-stu-id="542b5-107">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="542b5-108">El <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> método exporta datos XML a una variable <b>String.</b></span><span class="sxs-lookup"><span data-stu-id="542b5-108">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-109"><b>True</b> si los anchos de columna se ajustan automáticamente para el mejor ajuste cada vez que se actualiza la tabla de consulta especificada o la asignación XML.</span><span class="sxs-lookup"><span data-stu-id="542b5-109"><b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span></span> <span data-ttu-id="542b5-110">Es <b>False</b> si no se ajustan automáticamente los anchos de columna con cada actualización.</span><span class="sxs-lookup"><span data-stu-id="542b5-110"><b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span></span> <span data-ttu-id="542b5-111">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-111">The default value is <b>True</b>.</span></span> <span data-ttu-id="542b5-112">Lectura y escritura de <b>tipo Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-112">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-113">El ancho de columna máximo es dos tercios del ancho de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="542b5-113">The maximum column width is two-thirds the width of the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-114"><b>True</b> si desea anexar nuevas filas a listas XML enlazadas a la asignación de esquema especificada al importar nuevos datos o actualizar una conexión existente.</span><span class="sxs-lookup"><span data-stu-id="542b5-114"><b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span></span> <span data-ttu-id="542b5-115"><b>False</b> si desea sobrescribir el contenido de las celdas.</span><span class="sxs-lookup"><span data-stu-id="542b5-115"><b>False</b> if you want to overwrite the contents of cells.</span></span> <span data-ttu-id="542b5-116">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-116">The default value is <b>False</b>.</span></span> <span data-ttu-id="542b5-117">Lectura y escritura de <b>tipo Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-117">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-118">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-118">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-119">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="542b5-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="542b5-120">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-120">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-121">Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="542b5-121">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="542b5-122">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="542b5-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="542b5-123">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-124">La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="542b5-124">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="542b5-125">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="542b5-125">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-126">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> objeto que representa el enlace asociado a la asignación de esquema especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-126">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span></span> <span data-ttu-id="542b5-127">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-127">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-128">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-128">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="542b5-129">Quita la asignación XML especificada del libro.</span><span class="sxs-lookup"><span data-stu-id="542b5-129">Removes the specified XML map from the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="542b5-130"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="542b5-130">Required <b>String</b>.</span></span> <span data-ttu-id="542b5-131">Ruta de acceso y nombre de archivo del archivo de datos XML al que se exportará.</span><span class="sxs-lookup"><span data-stu-id="542b5-131">The path and filename of the XML data file to export to.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="542b5-132"><b>Boolean</b> obligatorio.</span><span class="sxs-lookup"><span data-stu-id="542b5-132">Required <b>Boolean</b>.</span></span> <span data-ttu-id="542b5-133">Se establece <b>en True</b> para sobrescribir el archivo especificado en el parámetro si el <paramref name="URL" /> archivo existe.</span><span class="sxs-lookup"><span data-stu-id="542b5-133">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span></span> <span data-ttu-id="542b5-134">El valor predeterminado si <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-134">The default value if <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="542b5-135">Exporta el contenido de las celdas asignadas al objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado a un archivo de datos XML.</span><span class="sxs-lookup"><span data-stu-id="542b5-135">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span></span> <span data-ttu-id="542b5-136">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> .</span><span class="sxs-lookup"><span data-stu-id="542b5-136">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="542b5-137">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> método para exportar el contenido de las celdas asignadas a una variable <b>String.</b></span><span class="sxs-lookup"><span data-stu-id="542b5-137">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="542b5-138"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="542b5-138">Required <b>String</b>.</span></span> <span data-ttu-id="542b5-139">Variable a la que se exportarán los datos.</span><span class="sxs-lookup"><span data-stu-id="542b5-139">The variable to export the data to.</span></span></param>
        <summary><span data-ttu-id="542b5-140">Exporta el contenido de las celdas asignadas al objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado a una variable <b>String.</b></span><span class="sxs-lookup"><span data-stu-id="542b5-140">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span></span> <span data-ttu-id="542b5-141">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> .</span><span class="sxs-lookup"><span data-stu-id="542b5-141">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="542b5-142">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-142">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="542b5-143">Para exportar el contenido de las celdas asignadas a un archivo de datos XML, utilice el <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="542b5-143">To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="542b5-144"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="542b5-144">Required <b>String</b>.</span></span> <span data-ttu-id="542b5-145">Ruta de acceso a los datos XML que se van a importar.</span><span class="sxs-lookup"><span data-stu-id="542b5-145">The path to the XML data to import.</span></span> <span data-ttu-id="542b5-146">La ruta de acceso se puede especificar con el formato UNC (Universal Naming convention, Convención de nomenclatura universal) o URL (Uniform Resource Locator, Localizador uniforme de recursos).</span><span class="sxs-lookup"><span data-stu-id="542b5-146">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span></span> <span data-ttu-id="542b5-147">El archivo puede ser un archivo de datos XML o un archivo de conexión de origen de datos XML de Office (.uxdc) válido.</span><span class="sxs-lookup"><span data-stu-id="542b5-147">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="542b5-148">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="542b5-149">Establezca su valor en <b>True</b> para sobrescribir los datos existentes.</span><span class="sxs-lookup"><span data-stu-id="542b5-149">Set to <b>True</b> to overwrite existing data.</span></span> <span data-ttu-id="542b5-150">Establezca su valor en <b>False</b> para anexar a los datos existentes.</span><span class="sxs-lookup"><span data-stu-id="542b5-150">Set to <b>False</b> to append to existing data.</span></span> <span data-ttu-id="542b5-151">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-151">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="542b5-152">Importa datos del archivo de datos XML especificado en celdas asignadas al objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="542b5-152">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="542b5-153">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> .</span><span class="sxs-lookup"><span data-stu-id="542b5-153">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData"><span data-ttu-id="542b5-154"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="542b5-154">Required <b>String</b>.</span></span> <span data-ttu-id="542b5-155">Cadena que contiene los datos XML que se van a importar.</span><span class="sxs-lookup"><span data-stu-id="542b5-155">The string that contains the XML data to import.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="542b5-156">Valor <b>booleano</b> opcional.</span><span class="sxs-lookup"><span data-stu-id="542b5-156">Optional <b>Boolean</b> value.</span></span> <span data-ttu-id="542b5-157">Especifica si se debe sobrescribir el contenido de las celdas actualmente asignadas a la asignación XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-157">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span></span> <span data-ttu-id="542b5-158">Si es <b>True</b>, se sobrescribirán las celdas; si es <b>False</b>, se anexarán los datos al rango existente.</span><span class="sxs-lookup"><span data-stu-id="542b5-158">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span></span> <span data-ttu-id="542b5-159">Si no se especifica este parámetro, el valor actual de la propiedad de la asignación XML determina si el contenido de las celdas se <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> sobrescribe o no.</span><span class="sxs-lookup"><span data-stu-id="542b5-159">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span></span></param>
        <summary><span data-ttu-id="542b5-160">Importa datos XML de una variable <b>String</b> en celdas asignadas al objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="542b5-160">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="542b5-161">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constante.</span><span class="sxs-lookup"><span data-stu-id="542b5-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="542b5-162">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-162">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="542b5-163">Para importar el contenido de un archivo de datos XML en celdas asignadas a una asignación de esquema específica, utilice el método <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> del <b>objeto XmlMap</b> .</span><span class="sxs-lookup"><span data-stu-id="542b5-163">To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-164">Devuelve <b>True</b> si Microsoft Excel puede usar los objetos de la asignación de esquema especificada para exportar datos XML y si se pueden exportar todas las listas XML asignadas a la asignación de <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> esquema especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-164">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span></span> <span data-ttu-id="542b5-165"><b>Booleano</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-165">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-166">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-166">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-167">Devuelve o establece el nombre descriptivo usado para identificar de forma única una asignación en el libro.</span><span class="sxs-lookup"><span data-stu-id="542b5-167">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span></span> <span data-ttu-id="542b5-168"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="542b5-168">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-169">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="542b5-169">Returns the parent object for the specified object.</span></span> <span data-ttu-id="542b5-170">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-171">Devuelve o establece si se mantiene el filtro cuando se actualiza la asignación XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-171">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span></span> <span data-ttu-id="542b5-172"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="542b5-172">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-173">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-173">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-174"><b>True</b> si se conserva el formato de número en las celdas asignadas a la asignación de esquema XML especificada cuando se actualiza la asignación de esquema.</span><span class="sxs-lookup"><span data-stu-id="542b5-174"><b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span></span> <span data-ttu-id="542b5-175">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-175">The default value is <b>False</b>.</span></span> <span data-ttu-id="542b5-176">Lectura y escritura de <b>tipo Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-176">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-177">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-177">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-178">Devuelve un valor de tipo <b>String</b> que representa el nombre del elemento raíz correspondiente a la asignación de esquema XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-178">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map.</span></span> <span data-ttu-id="542b5-179">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-179">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-180">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-180">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-181">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> objeto que representa el elemento raíz de la asignación de esquema XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span></span> <span data-ttu-id="542b5-182">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-182">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-183">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-183">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-184"><b>True</b> si la definición de origen de datos correspondiente a la asignación de esquema XML especificada se guarda con el libro.</span><span class="sxs-lookup"><span data-stu-id="542b5-184"><b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span></span> <span data-ttu-id="542b5-185">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-185">The default value is <b>True</b>.</span></span> <span data-ttu-id="542b5-186">Lectura y escritura de <b>tipo Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-186">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-187">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-187">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-188">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> colección que representa los esquemas que contiene el objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="542b5-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span></span> <span data-ttu-id="542b5-189">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-190">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-190">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="542b5-191">El primer elemento devuelto de la colección <b>XmlSchemas</b> es el esquema usado como elemento raíz de la asignación de esquema XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-191">The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-192">Devuelve o establece si se debe mostrar un cuadro de diálogo que recoja los errores de validación de esquema cuando se importen o exporten datos a través de la asignación de esquema XML especificada.</span><span class="sxs-lookup"><span data-stu-id="542b5-192">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map.</span></span> <span data-ttu-id="542b5-193">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-193">The default value is <b>False</b>.</span></span> <span data-ttu-id="542b5-194">Lectura y escritura de <b>tipo Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="542b5-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="542b5-195">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="542b5-195">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="542b5-196">Vuelve a conectar una nueva conexión para el objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="542b5-196">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="542b5-197">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="542b5-197">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>