<Type Name="Workbook" FullName="Microsoft.Office.Interop.Excel.Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92ffce8b5e62ce88e392a62537bf1cc2d3a58d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbook : Microsoft.Office.Interop.Excel._Workbook, Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbook implements class Microsoft.Office.Interop.Excel._Workbook, class Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbook&#xA;Implements _Workbook, WorkbookEvents_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbook : Microsoft::Office::Interop::Excel::_Workbook, Microsoft::Office::Interop::Excel::WorkbookEvents_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel._Workbook</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel.WorkbookEvents_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Excel.WorkbookClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fe93e-101">Representa un libro de Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe93e-101">Represents a Microsoft Excel workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="fe93e-102">
        <para>Ésta es una interfaz de .NET que se deriva de una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente. Use esta interfaz derivada para tener acceso a todos los miembros de método, evento y propiedad del objeto COM. Sin embargo, si un método o evento que va a usar comparte el mismo nombre en el mismo objeto COM, se convierte en la interfaz primaria correspondiente para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento. Hacer referencia a este tema para obtener información sobre el objeto COM. Para obtener información acerca de los miembros de métodos y propiedades del objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
        <para>La <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto es un miembro de la <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> colección. La colección <b>Workbooks</b> contiene todos los objetos <b>Workbook</b> abiertos actualmente en Microsoft Excel.</para>
        <para>Las siguientes propiedades para devolver un objeto de <b>libro</b> se describen en esta sección:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> (propiedad)</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> (propiedad)</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> (propiedad)</description>
          </item>
        </list>
        <para>Workbooks (propiedad)</para>
        <para>Usar <b>libros</b>(<paramref name="index" />), donde <paramref name="index" /> es el nombre del libro o número de índice, para devolver un solo objeto <b>Workbook</b> .</para>
        <para>El número de índice representa el orden en el que se abre o se crearon los libros. Workbooks (1) es el primer libro que se creó y Workbooks (Workbooks.Count) es la última. Al activar un libro no cambia su número de índice. Todos los libros se incluyen en el recuento de índice, incluso si están ocultos.</para>
        <para>El <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> (propiedad) devuelve el nombre del libro. No se puede establecer el nombre mediante el uso de esta propiedad; Si necesita cambiar el nombre, use la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para guardar el libro con un nombre diferente.</para>
        <para>ActiveWorkbook (propiedad)</para>
        <para>La propiedad <b>ActiveWorkbook</b> devuelve el libro que está activo actualmente.</para>
        <para>ThisWorkbook (propiedad)</para> Propiedad 
      <para>el <b>ThisWorkbook</b> devuelve el libro donde se ejecuta el código de Visual Basic. En la mayoría de los casos, es el mismo que el libro activo. Sin embargo, si el código de Visual Basic forma parte de un complemento, la propiedad <b>ThisWorkbook</b> no devolverá el libro activo. En este caso, el libro activo es el libro que llama el complemento, por lo que la propiedad <b>ThisWorkbook</b> devuelve el libro del complemento. </para><para>Si desea crear un complemento de código de Visual Basic, debe usar la propiedad <b>ThisWorkbook</b> para calificar cualquier instrucción que debe ejecutarse en el libro que se compile en el complemento.</para><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="fe93e-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
          <para>The <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. The <b>Workbooks</b> collection contains all the <b>Workbook</b> objects currently open in Microsoft Excel.</para>
          <para>The following properties for returning a <b>Workbook</b> object are described in this section:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> property</description>
            </item>
          </list>
          <para>Workbooks Property</para>
          <para>Use <b>Workbooks</b>(<paramref name="index" />), where <paramref name="index" /> is the workbook name or index number, to return a single <b>Workbook</b> object.</para>
          <para>The index number denotes the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created, and Workbooks(Workbooks.Count) is the last one created. Activating a workbook doesn’t change its index number. All workbooks are included in the index count, even if they’re hidden.</para>
          <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property returns the workbook name. You cannot set the name by using this property; if you need to change the name, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to save the workbook under a different name.</para>
          <para>ActiveWorkbook Property</para>
          <para>The <b>ActiveWorkbook</b> property returns the workbook that’s currently active.</para>
          <para>ThisWorkbook Property</para>
          <para>The <b>ThisWorkbook</b> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <b>ThisWorkbook</b> property won’t return the active workbook. In this case, the active workbook is the workbook calling the add-in, so the <b>ThisWorkbook</b> property returns the add-in workbook. </para>
          <para>If you’ll be creating an add-in from your Visual Basic code, you should use the <b>ThisWorkbook</b> property to qualify any statement that must be run on the workbook you compile into the add-in.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>