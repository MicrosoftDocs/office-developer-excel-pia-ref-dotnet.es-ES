<Type Name="DataFeedConnection" FullName="Microsoft.Office.Interop.Excel.DataFeedConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e9ab9b71f15cad689d5836c7164a39d28a7e6fb" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50005701" /></Metadata><TypeSignature Language="C#" Value="public interface DataFeedConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DataFeedConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DataFeedConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface DataFeedConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class DataFeedConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244D4-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d0c58-101">Contiene los datos y la funcionalidad necesarios para conectarse a fuentes de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-101">Contains the data and functionality needed to connect to data feeds.</span></span> <span data-ttu-id="d0c58-102">Se usa el mismo objeto para todos los tipos de fuente de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-102">The same object is used for all Data Feed types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlwaysUseConnectionFile">
      <MemberSignature Language="C#" Value="public bool AlwaysUseConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.AlwaysUseConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseConnectionFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseConnectionFile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-103"><b>True </b> si siempre se usa el archivo de conexión para establecer conexión con el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-103"><b>True</b> if the connection file is always used to establish connection to the data source.</span></span> <span data-ttu-id="d0c58-104"><b>Booleano</b> (<b>bool</b> en C#).</span><span class="sxs-lookup"><span data-stu-id="d0c58-104"><b>Boolean</b> (<b>bool</b> in C#).</span></span> <span data-ttu-id="d0c58-105">Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-105">Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-106">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación excel.</span><span class="sxs-lookup"><span data-stu-id="d0c58-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span></span> <span data-ttu-id="d0c58-107">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d0c58-107">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRefresh">
      <MemberSignature Language="C#" Value="public void CancelRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelRefresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataFeedConnection.CancelRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRefresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0c58-108">Cancela una operación de actualización en una conexión de fuente de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-108">Cancels a refresh operation on a data feed connection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public object CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-109">Devuelve o establece la cadena de comandos del origen de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="d0c58-109">Returns or sets the command string for the specified data source.</span></span> <span data-ttu-id="d0c58-110"><b>Objeto</b> (<b>objeto</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-110"><b>Object</b> (<b>object</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCmdType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCmdType CommandType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As XlCmdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCmdType CommandType { Microsoft::Office::Interop::Excel::XlCmdType get(); void set(Microsoft::Office::Interop::Excel::XlCmdType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCmdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-111">Devuelve o establece la cadena de comandos del origen de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="d0c58-111">Returns or sets the command string for the specified data source.</span></span> <span data-ttu-id="d0c58-112"><b>Objeto</b> (<b>objeto</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-112"><b>Object</b> (<b>object</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-113">Devuelve o establece una cadena que contiene la configuración del contrato de servicio que permite a Excel conectarse a un origen de datos de fuente de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-113">Returns or sets a string that contains Service Contract settings that enable Excel to connect to a Data Feed data source.</span></span> <span data-ttu-id="d0c58-114"><b>Objeto</b> (<b>objeto</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-114"><b>Object</b> (<b>object</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-115">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="d0c58-115">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span> <span data-ttu-id="d0c58-116"><b>Integer</b> (<b>int</b> en C#) Solo lectura</span><span class="sxs-lookup"><span data-stu-id="d0c58-116"><b>Integer</b> (<b>int</b> in C#) Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d0c58-117">Dado que el objeto se creó en Excel, esta propiedad devuelve el valor hexadecimal, 5843454C, que representa la cadena "XCEL".</span><span class="sxs-lookup"><span data-stu-id="d0c58-117">Because the object was created in Excel, this property returns the hexadecimal value, 5843454C, which represents the string "XCEL".</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRefresh">
      <MemberSignature Language="C#" Value="public bool EnableRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.EnableRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-118">Es <b>True</b> si el usuario puede actualizar la conexión.</span><span class="sxs-lookup"><span data-stu-id="d0c58-118"><b>True</b> if the connection can be refreshed by the user.</span></span> <span data-ttu-id="d0c58-119">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="d0c58-119">The default value is <b>True</b>.</span></span> <span data-ttu-id="d0c58-120"><b>Booleano</b> (<b>bool</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-120"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-121">Devuelve un <b>objeto Object</b> (<b>objeto</b> en C#) que representa el objeto primario del objeto <b>DataFeedConnection</b> especificado.</span><span class="sxs-lookup"><span data-stu-id="d0c58-121">Returns an <b>Object</b> (<b>object</b> in C#) that represents the parent object of the specified <b>DataFeedConnection</b> object.</span></span> <span data-ttu-id="d0c58-122">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d0c58-122">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataFeedConnection.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0c58-123">Actualiza la conexión de fuente de datos.</span><span class="sxs-lookup"><span data-stu-id="d0c58-123">Refreshes the data feed connection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDate">
      <MemberSignature Language="C#" Value="public DateTime RefreshDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime RefreshDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.RefreshDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime RefreshDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-124">Devuelve la fecha de la última actualización de la conexión OLE DB.</span><span class="sxs-lookup"><span data-stu-id="d0c58-124">Returns the date on which the OLE DB connection was last refreshed.</span></span> <span data-ttu-id="d0c58-125"><b>DateTime</b>.</span><span class="sxs-lookup"><span data-stu-id="d0c58-125"><b>DateTime</b>.</span></span> <span data-ttu-id="d0c58-126">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="d0c58-126">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refreshing">
      <MemberSignature Language="C#" Value="public bool Refreshing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Refreshing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.Refreshing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Refreshing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Refreshing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-127"><b>True</b> si hay una consulta OLE DB en curso para la conexión de origen de datos especificada.</span><span class="sxs-lookup"><span data-stu-id="d0c58-127"><b>True</b> if an OLE DB query is in progress for the specified data source connection.</span></span> <span data-ttu-id="d0c58-128"><b>Booleano</b> (<b>bool</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-128"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshOnFileOpen">
      <MemberSignature Language="C#" Value="public bool RefreshOnFileOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshOnFileOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.RefreshOnFileOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshOnFileOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshOnFileOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-129">Es <b>True</b> si se actualiza automáticamente la conexión cada vez que se abre el libro.</span><span class="sxs-lookup"><span data-stu-id="d0c58-129"><b>True</b> if the connection is automatically updated each time the workbook is opened.</span></span> <span data-ttu-id="d0c58-130">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="d0c58-130">The default value is <b>False</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshPeriod">
      <MemberSignature Language="C#" Value="public int RefreshPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RefreshPeriod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.RefreshPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshPeriod As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RefreshPeriod { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-131">Devuelve o establece el número de minutos entre actualizaciones.</span><span class="sxs-lookup"><span data-stu-id="d0c58-131">Returns or sets the number of minutes between refreshes.</span></span> <span data-ttu-id="d0c58-132"><b>Integer</b> (<b>int</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-132"><b>Integer</b> (<b>int</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsODC">
      <MemberSignature Language="C#" Value="public void SaveAsODC (string ODCFileName, object Description, object Keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsODC([in]string ODCFileName, [in]object Description, [in]object Keywords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DataFeedConnection.SaveAsODC(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsODC (ODCFileName As String, Optional Description As Object, Optional Keywords As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2082)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ODCFileName" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="Keywords" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ODCFileName"><span data-ttu-id="d0c58-133">Ubicación donde guardar el archivo.</span><span class="sxs-lookup"><span data-stu-id="d0c58-133">Location to save the file.</span></span></param>
        <param name="Description"><span data-ttu-id="d0c58-134">Descripción que se guardará en el archivo.</span><span class="sxs-lookup"><span data-stu-id="d0c58-134">Description that will be saved in the file.</span></span></param>
        <param name="Keywords"><span data-ttu-id="d0c58-135">Palabras clave separadas por espacios que se pueden utilizar para buscar este archivo.</span><span class="sxs-lookup"><span data-stu-id="d0c58-135">Space-separated keywords that can be used to search for this file.</span></span></param>
        <summary><span data-ttu-id="d0c58-136">Guarda la conexión de fuente de datos como un archivo de conexión de datos de Office.</span><span class="sxs-lookup"><span data-stu-id="d0c58-136">Saves the data feed connection as an Office Data Connection file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public bool SavePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SavePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.SavePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property SavePassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SavePassword { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-137"><b>True</b> si la información de contraseña en una cadena de conexión de fuente de datos se guarda en la cadena de conexión.</span><span class="sxs-lookup"><span data-stu-id="d0c58-137"><b>True</b> if password information in a data feed connection string is saved in the connection string.</span></span> <span data-ttu-id="d0c58-138">Es <b>False</b> si la contraseña se elimina.</span><span class="sxs-lookup"><span data-stu-id="d0c58-138"><b>False</b> if the password is removed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCredentialsMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCredentialsMethod ServerCredentialsMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.ServerCredentialsMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCredentialsMethod As XlCredentialsMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCredentialsMethod ServerCredentialsMethod { Microsoft::Office::Interop::Excel::XlCredentialsMethod get(); void set(Microsoft::Office::Interop::Excel::XlCredentialsMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCredentialsMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-139">Devuelve o establece el tipo de credenciales que se deben usar para la autenticación en el servidor.</span><span class="sxs-lookup"><span data-stu-id="d0c58-139">Returns or sets the type of credentials that should be used for server authentication.</span></span> <span data-ttu-id="d0c58-140"><see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /> Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-140"><see cref="T:Microsoft.Office.Interop.Excel.XlCredentialsMethod" /> Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d0c58-141">A continuación se enumeran los tipos de credenciales que se pueden usar:</span><span class="sxs-lookup"><span data-stu-id="d0c58-141">Following are the types of credentials that may be used:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="d0c58-142">
                <b>xlCredentialsMethodIntegrated</b>
              </span><span class="sxs-lookup"><span data-stu-id="d0c58-142">
                <b>xlCredentialsMethodIntegrated</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="d0c58-143">
                <b>xlCredentialsMethodNone</b>
              </span><span class="sxs-lookup"><span data-stu-id="d0c58-143">
                <b>xlCredentialsMethodNone</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="d0c58-144">
                <b>xlCredentialsMethodStored</b>
              </span><span class="sxs-lookup"><span data-stu-id="d0c58-144">
                <b>xlCredentialsMethodStored</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceConnectionFile">
      <MemberSignature Language="C#" Value="public string SourceConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.SourceConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceConnectionFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceConnectionFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-145">Devuelve o establece una cadena (<b>cadena</b> en C#) que indica el archivo de conexión de datos de Office o un archivo similar que se usó para crear la conexión.</span><span class="sxs-lookup"><span data-stu-id="d0c58-145">Returns or sets a String (<b>string</b> in C#) indicating the Office Data Connection file or similar file that was used to create the connection.</span></span> <span data-ttu-id="d0c58-146">Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="d0c58-146">Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceDataFile">
      <MemberSignature Language="C#" Value="public string SourceDataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceDataFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DataFeedConnection.SourceDataFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceDataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceDataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0c58-147">Ruta de acceso al archivo original que se usa para crear la conexión.</span><span class="sxs-lookup"><span data-stu-id="d0c58-147">A path to the original file used to create the connection.</span></span> <span data-ttu-id="d0c58-148">En el caso de una conexión OData, esta es la ubicación del archivo \*.atom o \*.atomsvc usado para crear la conexión.</span><span class="sxs-lookup"><span data-stu-id="d0c58-148">In the case of an OData connection, this is the location of the \*.atom or \*.atomsvc file used to create the connection.</span></span> <span data-ttu-id="d0c58-149"><b>String</b> (<b>string</b> in C#) Read/Write</span><span class="sxs-lookup"><span data-stu-id="d0c58-149"><b>String</b> (<b>string</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>