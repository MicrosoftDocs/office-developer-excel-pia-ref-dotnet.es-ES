<Type Name="CubeFields" FullName="Microsoft.Office.Interop.Excel.CubeFields">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b43cd9331b37889c562364401c8dc346d0d623b2" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20572754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CubeFields : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CubeFields implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CubeFields" />
  <TypeSignature Language="VB.NET" Value="Public Interface CubeFields&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class CubeFields : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002444D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50cf2-101">Una colección de todos los <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> objetos en un informe de tabla dinámica que se basa en un cubo OLAP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50cf2-101">A collection of all <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> objects in a PivotTable report that is based on an OLAP cube.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="50cf2-102">Cada objeto <b>CubeField</b> representa un campo de jerarquía o de medida del cubo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="50cf2-102">Each <b>CubeField</b> object represents a hierarchy or measure field from the cube.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="50cf2-103">Usar el <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CubeFields" /> (propiedad) para devolver la colección <b>CubeFields</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="50cf2-103">Use the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CubeFields" /> property to return the <b>CubeFields</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="50cf2-104">Use <b>CubeFields</b>(<paramref name="index" />), donde <paramref name="index" /> es el número de índice del campo de cubo, para devolver un solo objeto <b>CubeField</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="50cf2-104">Use <b>CubeFields</b>(<paramref name="index" />), where <paramref name="index" /> is the cube field’s index number, to return a single <b>CubeField</b> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeField this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CubeField _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As CubeField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CubeField ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::CubeField ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="50cf2-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeField AddSet (string Name, string Caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CubeField AddSet([in]string Name, [in]string Caption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSet (Name As String, Caption As String) As CubeField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::CubeField ^ AddSet(System::String ^ Name, System::String ^ Caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2186)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="50cf2-106">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-106">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="50cf2-107">Nombre válido en el conjunto de filas SETS del esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-107">A valid name in the SETS schema rowset.</span>
          </span>
        </param>
        <param name="Caption">
          <span data-ttu-id="50cf2-108">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-108">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="50cf2-109">Cadena que representa el campo que aparecerá en la vista de tabla dinámica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-109">A string representing the field that will be displayed in the PivotTable view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50cf2-110">Agrega un nuevo <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> objeto a la <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-110">Adds a new <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> object to the <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="50cf2-111">El objeto <b>CubeField</b> corresponde a un conjunto definido en el procesamiento OLAP (Online Analytical) un proveedor para el cubo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-111">The <b>CubeField</b> object corresponds to a set defined on the Online Analytical Processing (OLAP) a provider for the cube.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="50cf2-112">Si un conjunto con el nombre indicado en el argumento <paramref name="Name" /> no existe, el método <b>AddSet</b> devolverá un error en tiempo de ejecución.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-112">If a set with the name given in the argument <paramref name="Name" /> does not exist, the <b>AddSet</b> method will return a run-time error.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50cf2-113">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-113">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50cf2-114">Devuelve el número de objetos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-114">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50cf2-115">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-115">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="50cf2-116">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="50cf2-117">La propiedad <b>Creator</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-117">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="50cf2-118">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-118">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CubeFields.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMeasure">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeField GetMeasure (object AttributeHierarchy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object Caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CubeField GetMeasure([in]object AttributeHierarchy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object Caption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CubeFields.GetMeasure(System.Object,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMeasure (AttributeHierarchy As Object, Function As XlConsolidationFunction, Optional Caption As Object) As CubeField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AttributeHierarchy" Type="System.Object" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="Caption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="AttributeHierarchy">
          <span data-ttu-id="50cf2-119">El campo de cubo único que es una jerarquía de atributo (XlCubeFieldType = xlHierarchy y XlCubeFieldSubType = xlCubeAttribute).</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-119">The unique cube field that is an attribute hierarchy (XlCubeFieldType = xlHierarchy and XlCubeFieldSubType = xlCubeAttribute).</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="50cf2-120">Función que se ejecuta en el campo de datos agregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-120">The function performed in the added data field.</span>
          </span>
        </param>
        <param name="Caption">
          <span data-ttu-id="50cf2-121">La etiqueta que se usa en el informe de tabla dinámica para identificar esta medida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-121">The label used in the PivotTable report to identify this measure.</span>
          </span>
          <span data-ttu-id="50cf2-122">Si ya existe la medida, título sobrescribirá la etiqueta existente de esta medida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-122">If the measure already exists, caption will overwrite the existing label of this measure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50cf2-123">Dado un atributo jerarquía, devuelve una medida implícita para la función determinada que corresponde a este atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-123">Given an attribute hierarchy, returns an implicit measure for the given function that corresponds to this attribute.</span>
          </span>
          <span data-ttu-id="50cf2-124">Si no existe una "medida implícita", se crea y se agrega a una nueva medida implícita el <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-124">If an “implicit measure” does not exist, a new implicit measure is created and added to the <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="50cf2-125">
              <b>Importante</b>: obtener una medida mediante la función <b>GetMeasure</b> funcionará para estas funciones sólo: <b>Count</b>, <b>suma</b>, <b>promedio</b>, <b>Max</b> y <b>Min</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-125">
                <b>Important</b>: Getting a measure by using the <b>GetMeasure</b> function will work for these functions only: <b>Count</b>, <b>Sum</b>, <b>Average</b>, <b>Max</b> and <b>Min</b>.</span>
            </span>
            <span data-ttu-id="50cf2-126">Por ejemplo: estos será workGet CubeField0 = modelPivotTable.CubeFields.GetMeasure ("[clientes]. [ num_cars_owned] ", xlCount,"NumCarsOwnedCount") establecer CubeField1 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlSum,"NumCarsOwnedSum") establecer CubeField2 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlAverage,"NumCarsOwnedAverage") establecer CubeField4 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlMax,"NumCarsOwnedMax") establecer CubeField5 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlMin,"NumCarsOwnedMin") estos será el conjunto de trabajo no CubeField3 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlCountNums,"NumCarsOwnedCountNums") establecer CubeField6 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlProduct,"NumCarsOwnedProduct") establecer CubeField7 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlStDev,"NumCarsOwnedStDev") establecer CubeField8 = modelPivotTable.CubeFields.GetMeasure (" [clientes]. [[ num_cars_owned] ", xlStDevP,"NumCarsOwnedStDevP")</span>
            <span class="sxs-lookup">
              <span data-stu-id="50cf2-126">For example:These will workGet CubeField0 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlCount, "NumCarsOwnedCount")Set CubeField1 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlSum, "NumCarsOwnedSum")Set CubeField2 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlAverage, "NumCarsOwnedAverage")Set CubeField4 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlMax, "NumCarsOwnedMax")Set CubeField5 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlMin, "NumCarsOwnedMin")These will not workSet CubeField3 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlCountNums, "NumCarsOwnedCountNums")Set CubeField6 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlProduct, "NumCarsOwnedProduct")Set CubeField7 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlStDev, "NumCarsOwnedStDev")Set CubeField8 = modelPivotTable.CubeFields.GetMeasure("[customer].[num_cars_owned]", xlStDevP, "NumCarsOwnedStDevP")</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeField Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CubeField Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As CubeField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CubeField ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::CubeField ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="50cf2-127">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-127">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="50cf2-128">Nombre o número de índice del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-128">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50cf2-129">Devuelve un solo objeto de una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-129">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CubeFields.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50cf2-130">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50cf2-130">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>