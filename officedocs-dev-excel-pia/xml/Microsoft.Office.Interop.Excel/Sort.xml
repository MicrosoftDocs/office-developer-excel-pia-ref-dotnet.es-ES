<Type Name="Sort" FullName="Microsoft.Office.Interop.Excel.Sort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de93568167346f288fb7536946cca4f98f1c34cd" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010041" /></Metadata><TypeSignature Language="C#" Value="public interface Sort" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Sort" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Sort" />
  <TypeSignature Language="VB.NET" Value="Public Interface Sort" />
  <TypeSignature Language="C++ CLI" Value="public interface class Sort" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244AB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f098d-101">Representa la ordenación de un rango de datos.</span><span class="sxs-lookup"><span data-stu-id="f098d-101">Represents a sort of a range of data.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-102">Cuando se usa sin un calificador de objeto, esta propiedad devuelve un  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objeto que representa el Microsoft Office de Excel.</span><span class="sxs-lookup"><span data-stu-id="f098d-102">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="f098d-103">Cuando se usa con un calificador de objeto, esta propiedad devuelve un objeto que representa <see cref="T:Microsoft.Office.Interop.Excel._Application" /> al creador del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="f098d-103">When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object.</span></span> <span data-ttu-id="f098d-104">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f098d-104">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel._Application" /></value>
        <remarks><para><span data-ttu-id="f098d-105">Puede utilizar esta propiedad con un objeto de automatización OLE para devolver la aplicación de dicho objeto.</span><span class="sxs-lookup"><span data-stu-id="f098d-105">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sort.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f098d-106">Ordena el rango basándose en los estados de ordenación aplicados en ese momento.</span><span class="sxs-lookup"><span data-stu-id="f098d-106">Sorts the range based on the currently applied sort states.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-107">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="f098d-107">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="f098d-108">Es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f098d-108">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="f098d-109">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="f098d-109">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="f098d-110">La propiedad está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro <see cref="P:Microsoft.Office.Interop.Excel.Sort.Creator" /> caracteres.</span><span class="sxs-lookup"><span data-stu-id="f098d-110">The <see cref="P:Microsoft.Office.Interop.Excel.Sort.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="f098d-111">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="f098d-111">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlYesNoGuess Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Header" />
      <MemberSignature Language="VB.NET" Value="Public Property Header As XlYesNoGuess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlYesNoGuess Header { Microsoft::Office::Interop::Excel::XlYesNoGuess get(); void set(Microsoft::Office::Interop::Excel::XlYesNoGuess value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(895)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(895)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(895)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlYesNoGuess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-112">Especifica si la primera fila contiene información de encabezado.</span><span class="sxs-lookup"><span data-stu-id="f098d-112">Specifies whether the first row contains header information.</span></span> <span data-ttu-id="f098d-113">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f098d-113">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /></value>
        <remarks><para><span data-ttu-id="f098d-114">
            <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="f098d-114">
            <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value.</span></span> <span data-ttu-id="f098d-115">Puede especificar si <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> desea que Excel intente determinar el encabezado.</span><span class="sxs-lookup"><span data-stu-id="f098d-115">You can specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCase">
      <MemberSignature Language="C#" Value="public bool MatchCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchCase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.MatchCase" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchCase { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-116">Se debe establecer en <b>True</b> para realizar una ordenación que distinga entre mayúsculas y minúsculas, o en <b>False</b> para no tener en cuenta las mayúsculas y minúsculas al llevar a cabo la ordenación; no se puede utilizar con tablas dinámicas.</span><span class="sxs-lookup"><span data-stu-id="f098d-116">Set to <b>True</b> to perform a case-sensitive sort or set to <b>False</b> to perform non-case sensitive sort.</span></span> <span data-ttu-id="f098d-117">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f098d-117">Read/write.</span></span></summary>
        <value><span data-ttu-id="f098d-118"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="f098d-118"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSortOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlSortOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSortOrientation Orientation { Microsoft::Office::Interop::Excel::XlSortOrientation get(); void set(Microsoft::Office::Interop::Excel::XlSortOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSortOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-119">Especifica la orientación de la ordenación.</span><span class="sxs-lookup"><span data-stu-id="f098d-119">Specifies the orientation for the sort.</span></span> <span data-ttu-id="f098d-120">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f098d-120">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-121">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="f098d-121">Returns the parent object for the specified object.</span></span> <span data-ttu-id="f098d-122">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f098d-122">Read-only.</span></span></summary>
        <value><span data-ttu-id="f098d-123"><b>Objeto</b></span><span class="sxs-lookup"><span data-stu-id="f098d-123"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rng">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rng { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rng" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.Rng" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rng As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rng { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2748)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2748)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-124">Devuelve el rango de valores en función de los cuales se realiza la ordenación.</span><span class="sxs-lookup"><span data-stu-id="f098d-124">Return the range of values on which the sort is performed.</span></span> <span data-ttu-id="f098d-125">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f098d-125">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (Microsoft.Office.Interop.Excel.Range Rng);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange([in]class Microsoft.Office.Interop.Excel.Range Rng) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sort.SetRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRange (Rng As Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRange(Microsoft::Office::Interop::Excel::Range ^ Rng);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rng" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Rng"><span data-ttu-id="f098d-126">Especifica el intervalo de la <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> colección.</span><span class="sxs-lookup"><span data-stu-id="f098d-126">Specifies the range for the <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> collection.</span></span></param>
        <summary><span data-ttu-id="f098d-127">Establece las posiciones de carácter inicial y final del <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f098d-127">Sets the starting and ending character positions for the <see cref="T:Microsoft.Office.Interop.Excel.Sort" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SortFields SortFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SortFields SortFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.SortFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortFields As SortFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SortFields ^ SortFields { Microsoft::Office::Interop::Excel::SortFields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2749)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2749)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SortFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-128">Almacena el estado de ordenación de libros, listas y autofiltros.</span><span class="sxs-lookup"><span data-stu-id="f098d-128">Stores the sort state for workbooks, lists, and autofilters.</span></span>  <span data-ttu-id="f098d-129">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f098d-129">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.SortFields" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSortMethod SortMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sort.SortMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SortMethod As XlSortMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSortMethod SortMethod { Microsoft::Office::Interop::Excel::XlSortMethod get(); void set(Microsoft::Office::Interop::Excel::XlSortMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(897)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(897)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(897)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSortMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f098d-130">Especifica el método de ordenación para los idiomas chinos.</span><span class="sxs-lookup"><span data-stu-id="f098d-130">Specifies the sort method for Chinese languages.</span></span> <span data-ttu-id="f098d-131">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f098d-131">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>