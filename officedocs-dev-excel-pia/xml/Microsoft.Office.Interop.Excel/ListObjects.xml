<Type Name="ListObjects" FullName="Microsoft.Office.Interop.Excel.ListObjects">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c26d759231e55f2d7cd0214bee3fb3636fe79db1" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20580944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ListObjects : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListObjects implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ListObjects" />
  <TypeSignature Language="VB.NET" Value="Public Interface ListObjects&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ListObjects : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024470-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="42d51-101">Una colección de todos los <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objetos en una hoja de cálculo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42d51-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects on a worksheet.</span>
      </span>
      <span data-ttu-id="42d51-102">Cada <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objeto representa una lista en la hoja de cálculo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42d51-102">Each <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object represents a list in the worksheet.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="42d51-103">
        <para>Usar el <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto para devolver la colección <b>ListObjects</b> .</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="42d51-103">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return the <b>ListObjects</b> collection.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="42d51-104">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Add (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject Add([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="42d51-105">Opcional <b>XlListObjectSourceType</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-105">Optional <b>XlListObjectSourceType</b>.</span>
          </span>
          <span data-ttu-id="42d51-106">Indica el tipo de origen de la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-106">Indicates the kind of source for the query.</span>
          </span>
          <span data-ttu-id="42d51-107">Puede ser una de las siguientes constantes <b>XlListObjectSourceType</b> : <b>xlSrcExternal</b> o <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-107">Can be one of the following <b>XlListObjectSourceType</b> constants: <b>xlSrcExternal</b> or <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="42d51-108">Si se omite, el <paramref name="SourceType" /> será <b>xlSrcRange</b>tienen como valor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-108">If omitted, the <paramref name="SourceType" /> will default to <b>xlSrcRange</b>.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="42d51-109">Opcional cuando <paramref name="SourceType" /> es <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-109">Optional when <paramref name="SourceType" /> is <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="42d51-110">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-110">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the data source.</span>
          </span>
          <span data-ttu-id="42d51-111">Si se omite, el <paramref name="Source" /> va a establecer como predeterminado el intervalo devuelto por el código de detección de rangos de lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-111">If omitted, the <paramref name="Source" /> will default to the range returned by list range detection code.</span>
          </span>
          <span data-ttu-id="42d51-112">Es requerido cuando <paramref name="SourceType" /> es <b>xlSrcExternal</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-112">Required when <paramref name="SourceType" /> is <b>xlSrcExternal</b>.</span>
          </span>
          <span data-ttu-id="42d51-113">Una matriz de valores de <b>cadena</b> que especifica una conexión con el origen. Elemento #Contents0URL a 2ViewGUID de 1ListName de sitio de SharePoint</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-113">An array of <b>String</b> values specifying a connection to the source.Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</span>
          </span>
        </param>
        <param name="LinkSource">
          <span data-ttu-id="42d51-114">
            <b>Boolean</b> opcional. </span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-114">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="42d51-115">Indica si un origen de datos externo está vinculado al objeto <b>ListObject</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-115">Indicates whether an external data source is to be linked to the <b>ListObject</b> object.</span>
          </span>
          <span data-ttu-id="42d51-116">Si <paramref name="SourceType" /> es <b>xlSrcExternal</b>, valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-116">If <paramref name="SourceType" /> is <b>xlSrcExternal</b>, default is <b>True</b>.</span>
          </span>
          <span data-ttu-id="42d51-117">Válida si <paramref name="SourceType" /> es <b>xlSrcRange</b>y devolverá un error si no se omite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-117">Invalid if <paramref name="SourceType" /> is <b>xlSrcRange</b>, and will return an error if not omitted.</span>
          </span>
        </param>
        <param name="XlListObjectHasHeaders">
          <span data-ttu-id="42d51-118">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="42d51-119">Un <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constante que indica si los datos que se están importados tienen rótulos de columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-119">An <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constant that indicates whether the data being imported has column labels.</span>
          </span>
          <span data-ttu-id="42d51-120">Si el origen no contiene encabezados, Excel los creará automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-120">If the Source does not contain headers, Excel will automatically generate headers.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="42d51-121">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-121">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="42d51-122">Un objeto <b>Range</b> que especifica una referencia de celda de un solo como el destino de la esquina superior izquierda del nuevo objeto de lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-122">A <b>Range</b> object specifying a single-cell reference as the destination for the top-left corner of the new list object.</span>
          </span>
          <span data-ttu-id="42d51-123">Si el objeto <b>Range</b> hace referencia a más de una celda, se genera un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-123">If the <b>Range</b> object refers to more than one cell, an error is generated.</span>
          </span>
          <span data-ttu-id="42d51-124">El <paramref name="Destination" /> el argumento debe ser especificado durante <paramref name="SourceType" /> está establecido en <b>xlSrcExternal</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-124">The <paramref name="Destination" /> argument must be specified when <paramref name="SourceType" /> is set to <b>xlSrcExternal</b>.</span>
          </span>
          <span data-ttu-id="42d51-125">El <paramref name="Destination" /> argumento se omite si <paramref name="SourceType" /> está establecido en <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-125">The <paramref name="Destination" /> argument is ignored if <paramref name="SourceType" /> is set to <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="42d51-126">El rango de destino debe estar en la hoja de cálculo que contiene el texto especificado <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-126">The destination range must be on the worksheet that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection.</span>
          </span>
          <span data-ttu-id="42d51-127">Las nuevas columnas se insertan en el <paramref name="Destination" /> para que se ajuste a la nueva lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-127">New columns will be inserted at the <paramref name="Destination" /> to fit the new list.</span>
          </span>
          <span data-ttu-id="42d51-128">Por lo tanto, no se sobrescribe los datos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-128">Therefore, existing data will not be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42d51-129">Crea un nuevo objeto de lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-129">Creates a new list object.</span>
          </span>
          <span data-ttu-id="42d51-130">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="42d51-131">
            <para>Cuando la lista tiene encabezados, la primera fila de celdas se convierten en <b>texto</b>, si aún no ha establecido en texto. La conversión se basará en el texto visible de la celda. Esto significa que si hay un valor de fecha con un formato de <b>fecha</b> que cambia con la configuración regional, la conversión a una lista puede generar resultados diferentes según la configuración regional actual del sistema. Además, si hay dos celdas en la fila de encabezado que tienen el mismo texto visible, se anexará un <b>número entero</b> de incremental para que cada encabezado de columna único.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-131">
              <para>When the list has headers, the first row of cells will be converted to <b>Text</b>, if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a <b>Date</b> format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental <b>Integer</b> will be appended to make each column header unique.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEx">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject AddEx (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination, object TableStyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject AddEx([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination, [in]object TableStyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEx (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object, Optional TableStyleName As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="TableStyleName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="Source">To be added.</param>
        <param name="LinkSource">To be added.</param>
        <param name="XlListObjectHasHeaders">To be added.</param>
        <param name="Destination">To be added.</param>
        <param name="TableStyleName">To be added.</param>
        <summary>
          <span data-ttu-id="42d51-132">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-132">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42d51-133">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-133">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="42d51-134">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-134">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42d51-135">Devuelve el número de objetos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-135">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="42d51-136">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-136">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42d51-137">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-137">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="42d51-138">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-138">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="42d51-139">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-139">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="42d51-140">Propiedad de <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-140">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="42d51-141">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-141">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="42d51-142">Nombre o número de índice del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-142">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42d51-143">Devuelve un solo objeto de una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-143">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42d51-p112">Devuelve el objeto primario del objeto especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42d51-p112">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>