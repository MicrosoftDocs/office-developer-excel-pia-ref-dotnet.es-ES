<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20583135" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0cae5-101">Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cae5-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="0cae5-102">Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cae5-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="0cae5-103">De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cae5-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="0cae5-104">Para obtener más información sobre el objeto COM, vea <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cae5-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-107">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-108">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-110">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-111">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-112">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-112">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-113">Convierte la hoja actual en la hoja activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-113">Makes the current sheet the active sheet.</span>
          </span>
          <span data-ttu-id="0cae5-114">Equivalente a hacer clic en la ficha de la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-114">Equivalent to clicking the sheet's tab.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-115">Cuando se usa sin un calificador de objeto, esta propiedad devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="0cae5-116">Cuando se usa con un calificador de objeto, esta propiedad devuelve un objeto <b>Application</b> que representa el creador del objeto especificado (puede usar esta propiedad con un objeto de automatización OLE para devolver la aplicación de ese objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="0cae5-117">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-118">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-118">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-119">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> objeto si filtrado está activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span>
          </span>
          <span data-ttu-id="0cae5-120">Devuelve <b>Nothing</b> si el filtrado está desactivado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-120">Returns <b>Nothing</b> if filtering is off.</span>
          </span>
          <span data-ttu-id="0cae5-121">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-122">
            <para>Para crear un objeto <b>AutoFilter</b> para una hoja de cálculo, debe activar el autofiltrado para un rango de la hoja de cálculo, bien manualmente o mediante el <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> (método) de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-122">
              <para>To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-123">
            <b>True</b> si las flechas de lista desplegable Autofiltro se muestran actualmente en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-123">
              <b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-124">Esta propiedad es independiente de la <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span>
          </span>
          <span data-ttu-id="0cae5-125">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-125">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-126">
            <para>Esta propiedad devuelve <b>True</b> si las flechas de lista desplegable se muestra actualmente. Puede establecer esta propiedad en <b>False</b> para quitar las flechas, pero no puede establecer en <b>True</b>. Usar el <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> método para filtrar una lista y mostrar las flechas de lista desplegable.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-126">
              <para>This property returns <b>True</b> if the drop-down arrows are currently displayed. You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>. Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-127">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-127">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-128">Calcula todos los libros abiertos, una hoja de cálculo específica de un libro o un rango determinado de celdas de una hoja, como se muestra en la tabla siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-128">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-129">
            <list type="table">
              <item>
                <term>Todos los abiertos los libros</term>
                <description>Application.Calculate</description>
              </item>
              <item>
                <term>Una hoja de cálculo específica</term>
                <description>Worksheets (1). Calcular</description>
              </item>
              <item>
                <term>un intervalo especificado</term>
                <description>Worksheets (1). Rows(2). Calcular</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-129">
              <list type="table">
                <item>
                  <term>All open workbooks</term>
                  <description>Application.Calculate</description>
                </item>
                <item>
                  <term>A specific worksheet</term>
                  <description>Worksheets(1).Calculate</description>
                </item>
                <item>
                  <term>A specified range</term>
                  <description>Worksheets(1).Rows(2).Calculate</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-130">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa todas las celdas de la hoja de cálculo (no sólo las celdas que están actualmente en uso).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
          <span data-ttu-id="0cae5-131">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-132">
            <para>Debido a que el <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> (propiedad) es la propiedad predeterminada del objeto <b>Range</b> , puede especificar el índice de fila y columna inmediatamente después de la palabra clave <b>Cells</b> . Para obtener más información, vea la propiedad <b>Item</b> .</para>
            <para>Uso de esta propiedad sin un calificador de objeto devuelve un objeto <b>Range</b> que representa todas las celdas de la hoja de cálculo activa.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-132">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <b>Item</b> property.</para>
              <para>Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0cae5-133">Optional <b>Variant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-133">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="0cae5-134">El nombre o número del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-134">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="0cae5-135">Este argumento puede ser una matriz si desea especificar más de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-135">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-136">Devuelve un objeto object que representa un único gráfico incrustado (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> objeto) o una colección de todos los gráficos incrustados (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> objeto) en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-136">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0cae5-137">
            <para>Este método no es equivalente a la <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> (propiedad). Este método devuelve gráficos incrustados; la propiedad <b>Charts</b> devuelve hojas de gráficos. Usar el <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> propiedad para devolver el <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto de un gráfico incrustado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-137">
              <para>This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property. This method returns embedded charts; the <b>Charts</b> property returns chart sheets. Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-138">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-138">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="0cae5-139">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-140">Una cadena que indica el nombre de archivo del diccionario personalizado que se va a examinar si la palabra no se encuentra en el diccionario principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-140">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="0cae5-141">Si se omite este argumento, se usa el diccionario especificado actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-141">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="0cae5-142">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-143">
            <b>True</b> para que Microsoft Excel omita las palabras que están en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-143">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="0cae5-144">
            <b>False</b> para que Microsoft Excel compruebe las palabras que están en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-144">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="0cae5-145">Si se omite este argumento, se usará la configuración actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-145">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="0cae5-146">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-147">
            <b>True</b> para que Microsoft Excel muestre una lista de palabras alternativas sugeridas cuando se encuentra un error ortográfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-147">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="0cae5-148">
            <b>False</b> para que Microsoft Excel espere a que el usuario introduzca la ortografía correcta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-148">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="0cae5-149">Si se omite este argumento, se usará la configuración actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-149">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="0cae5-150">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-151">El idioma del diccionario utilizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-151">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="0cae5-152">Puede ser uno de los valores <b>MsoLanguageID</b> utilizados por el <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-152">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-153">Comprueba la ortografía de un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-153">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="0cae5-154">Este formulario no tiene ningún valor devuelto; Microsoft Excel muestra el cuadro de diálogo Ortografía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-154">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-155">
            <para>Utilice este método para comprobar los encabezados, pies de página y objetos en una hoja de cálculo.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-155">
              <para>Use this method to check headers, footers, and objects on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-156">Rodea con un círculo los elementos no válidos de la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-156">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-157">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa el rango que contiene la primera referencia circular de la hoja, o devuelve <b>Nothing</b> si no hay ninguna referencia circular en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-158">La referencia circular debe quitarse antes de que puede continuar con el cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-158">The circular reference must be removed before calculation can proceed.</span>
          </span>
          <span data-ttu-id="0cae5-159">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-159">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p114">Borra las flechas de rastreo de la hoja de cálculo. La característica auditoría agrega las flechas de rastreo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p114">Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-162">Borra los círculos de los elementos no válidos de la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-162">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-163">
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> método a círculo las celdas que contengan datos no válidos.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-163">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p115">Devuelve el nombre de código del objeto. <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p115">Returns the code name for the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-166">
            <para>El valor que se ve en la celda a la derecha de <b>(nombre)</b> en la ventana Propiedades es el nombre de código del objeto seleccionado. En tiempo de diseño, puede cambiar el nombre de código de un objeto cambiando este valor. No se puede cambiar mediante programación esta propiedad en tiempo de ejecución.</para>
            <para>Se puede usar el nombre de código para un objeto en lugar de una expresión que devuelve el objeto.</para>
            <para>Es posible que el nombre de la hoja que sea distinto del nombre de código. Cuando se crea una hoja, el nombre de la hoja y el nombre de código son los mismos, pero al cambiar el nombre de hoja no cambia el nombre de código, y cambiar el nombre de código (utilizando la ventana Propiedades en el Editor de Visual Basic) no cambia el nombre de la hoja.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-166">
              <para>The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</para>
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-167">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa todas las columnas en la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-167">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-168">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-168">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-169">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> colección que representa todos los comentarios de la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-170">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-170">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-171">Devuelve el código de función utilizado para la consolidación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-171">Returns the function code used for the current consolidation.</span>
          </span>
          <span data-ttu-id="0cae5-172">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-172">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span>
          </span>
          <span data-ttu-id="0cae5-173">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-173">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-174">Devuelve una matriz de tres elementos de opciones de consolidación, tal como se muestra en la siguiente tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-174">Returns a three-element array of consolidation options, as shown in the following table.</span>
          </span>
          <span data-ttu-id="0cae5-175">Si el elemento es <b>True</b>, se establecerá la opción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-175">If the element is <b>True</b>, that option is set.</span>
          </span>
          <span data-ttu-id="0cae5-176">Read-only <b>objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-176">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-177">
            <list type="table">
              <item>
                <term>1</term>
                <description>Usar rótulos en la fila superior.</description>
              </item>
              <item>
                <term>2</term>
                <description>Usar rótulos en la columna izquierda.</description>
              </item>
              <item>
                <term>3</term>
                <description>crear vínculos con los datos de origen.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-177">
              <list type="table">
                <item>
                  <term>1</term>
                  <description>Use labels in top row.</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use labels in left column.</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Create links to source data.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-178">Devuelve una matriz de valores de cadena que el nombre de las hojas de origen para la consolidación de la hoja de cálculo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-178">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span>
          </span>
          <span data-ttu-id="0cae5-179">Devuelve <b>Empty</b> si no hay ninguna consolidación en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-179">Returns <b>Empty</b> if there's no consolidation on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-180">Read-only <b>objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-180">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="0cae5-181">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-182">La hoja antes de la cual se colocará la hoja copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-182">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="0cae5-183">No puede especificar <paramref name="Before" /> si especifica <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-183">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0cae5-184">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-185">La hoja después de la cual se colocará la hoja copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-185">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="0cae5-186">No puede especificar <paramref name="After" /> si especifica <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-186">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-187">Copia la hoja en otro lugar del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-187">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-188">
            <para>Si no se especifica cualquiera <paramref name="Before" /> o <paramref name="After" />, Microsoft Excel crea un nuevo libro que contiene la hoja copiada.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-188">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-189">Devuelve una constante en el <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> (enumeración) que indica la aplicación en la que se creó este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-189">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="0cae5-190">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-190">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="0cae5-191">De sólo lectura <b>xlCreatorCode</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-191">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="0cae5-192">
            <para>La propiedad <b>Creator</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-192">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-193">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> objeto que representa la información de identificación asociada con una hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-193">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-194">
            <para>Para la propiedad <b>CustomProperties</b> , la información de identificador para una hoja de cálculo puede representar metadatos para XML.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-194">
              <para>For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-195">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-195">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-196">
            <para>Cuando se elimina un <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, este método muestra un cuadro de diálogo que solicita al usuario que confirme la eliminación. Este cuadro de diálogo se muestra de manera predeterminada. El método <b>Delete</b> devuelve un valor <b>Boolean</b> que es <b>False</b> si el usuario hizo clic en Cancelar en el cuadro de diálogo o <b>es True</b> si el usuario hizo clic en eliminar.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-196">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-197">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-197">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p124">
            <b>True</b> si en la hoja de cálculo especificada se muestran los saltos de página (automáticos y manuales). <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p124">
              <b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-200">
            <para>No se puede establecer esta propiedad si no dispone de una impresora instalada.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-200">
              <para>You can't set this property if you don't have a printer installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-201">
            <b>True</b> si la ventana especificada, la hoja de cálculo o el <b>objeto ListObject</b> se muestra de derecha a izquierda en lugar de hacerlo de izquierda a derecha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-201">
              <b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="0cae5-202">
            <b>False</b> si el objeto se muestra de izquierda a derecha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-202">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
          <span data-ttu-id="0cae5-203">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-203">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-204">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-204">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-205">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-205">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-206">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-206">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p126">
            <b>True</b> si están habilitadas las flechas de filtro automático cuando se activa la protección de solo interfaz de usuario. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p126">
              <b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-209">
            <para>Esta propiedad se aplica a cada hoja de cálculo y no se guarda con la hoja de cálculo o la sesión.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-209">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p127">
            <b>True</b> si Microsoft Excel actualiza automáticamente la hoja de cálculo cuando sea necesario. <b>False</b> si Excel no actualiza la hoja. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p127">
              <b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary. <b>False</b> if Excel doesn't recalculate the sheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-213">
            <para>Cuando el valor de esta propiedad es <b>False</b>, no podrá solicitar una actualización. Cuando cambie el valor de <b>False</b> a <b>True</b>, Excel vuelve a calcular la hoja de cálculo.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-213">
              <para>When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-214">Devuelve o establece si los formatos condicionales se producirán automáticamente según sea necesario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-214">Returns or sets if conditional formats will occur automatically as needed.</span>
          </span>
          <span data-ttu-id="0cae5-215">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-215">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cae5-216">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-216">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="0cae5-217">
            <para>Cuando se establece en <b>True</b> (valor predeterminado), evaluación de formatos condicionales se producirá automáticamente según sea necesario.  Cuando se establece en <b>False</b>, los formatos condicionales no se vuelva a evaluados.  Cualquier formato condicional previamente aplicado seguirá estando visible, pero no se actualizarán como valores de celda o <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> los rangos.  </para>
            <para>El propósito de esta marca es permitir que los programadores configurar una regla completamente antes de la evaluación.  Esto es especialmente útil cuando la condición se aplica a través de un intervalo de gran tamaño, como rendimiento puede ser lento en estos casos.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-217">
              <para>When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.  When set to <b>False</b>, conditional formats will not be re-evaluated.  Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.  </para>
              <para>The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.  This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p129">
            <b>True</b> si los símbolos de esquema están habilitados cuando se activa la protección de solo interfaz de usuario. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p129">
              <b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-220">
            <para>Esta propiedad se aplica a cada hoja de cálculo y no se guarda con la hoja de cálculo o la sesión.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-220">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p130">
            <b>True</b> si los controles y acciones de tabla dinámica están habilitados cuando se activa la protección de solo interfaz de usuario. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p130">
              <b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-223">
            <para>Esta propiedad se aplica a cada hoja de cálculo y no se guarda con la hoja de cálculo o sesión.</para>
            <para>Debe haber un número suficiente de celdas desbloqueadas que aparece a continuación y a la derecha del informe de tabla dinámica para que Microsoft Excel actualice y muestre el informe de tabla dinámica.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-223">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para>There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-224">Devuelve o establece lo que se pueden seleccionar en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-224">Returns or sets what can be selected on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-225">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-225">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-226">
            <para>Esta propiedad sólo tiene efecto si la hoja de cálculo está protegida: <b>xlNoSelection</b> impide realizar una selección en la hoja, <b>xlUnlockedCells</b> sólo permite esas celdas cuya propiedad <b>Locked</b> es <b>False</b> , que se seleccionen y <b> xlNoRestrictions</b> permite seleccionar cualquier celda que se seleccionen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-226">
              <para>This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0cae5-227">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-227">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0cae5-228">Nombre del objeto, en el que se usan las convenciones de nomenclatura de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-228">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-229">Convierte un nombre de Microsoft Excel en un objeto o un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-229">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0cae5-230">
            <para>Los siguientes tipos de nombres en Microsoft Excel se pueden usar con este método:</para> Nombres de 
          <list type="bullet"><item><description>definidas. Puede especificar cualquier nombre.</description></item><item><description>Las referencias externas. Puede usar la! Para hacer referencia a una hoja de cálculo definida en otro libro.</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-230">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>Defined names. You can specify any name.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a worksheet defined in another workbook.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0cae5-231">Tipo del formato de archivo al que exportar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-231">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="0cae5-232">El nombre de archivo del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-232">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0cae5-233">Puede incluir una ruta de acceso completa o short_Excel2007 guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-233">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="0cae5-234">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-234">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="0cae5-235">Especifica la calidad del archivo publicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-235">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="0cae5-236">
            <b>True</b> para que se incluyan las propiedades del documento; de lo contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-236">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="0cae5-237">
            <b>True</b> para omitir las áreas de impresión establecidas al realizar la publicación; de lo contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-237">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="0cae5-p135">Número de la página en la que comienza la publicación. Si no se especifica este argumento, la publicación empieza por el principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p135">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0cae5-p136">Número de la última página que se va a publicar. Si no se especifica este argumento, la publicación finaliza en la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p136">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="0cae5-242">
            <b>True</b> para mostrar el archivo en el visor una vez publicado; en caso contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-242">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="0cae5-243">Puntero a la clase <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-243">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-244">Exporta a un archivo con el formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-244">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-245">
            <para>Este método también admite la inicialización de un complemento para exportar un archivo a un archivo de formato fijo. Por ejemplo, Excel realizará la conversión de formato de archivo si están presentes los convertidores. La conversión generalmente es iniciada por el usuario.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-245">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-246">
            <b>True</b> si la hoja de cálculo está en modo de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-246">
              <b>True</b> if the worksheet is in filter mode.</span>
          </span>
          <span data-ttu-id="0cae5-247">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-247">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-248">
            <para>Esta propiedad es <b>True</b> si la hoja de cálculo contiene una lista filtrada donde hay filas ocultas.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-248">
              <para>This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-249">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-249">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-250">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-250">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-251">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> saltos de colección que representa la página horizontal en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-251">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-252">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-252">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-253">
            <para>Hay un límite de saltos de página horizontales 1.026 por hoja.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-253">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-254">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> colección que representa los hipervínculos del rango u hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-254">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-255">Devuelve el número de índice del objeto contenido en el conjunto de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-255">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="0cae5-256">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-256">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-257">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-257">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-258">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-258">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-259">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-259">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-260">Devuelve una colección de <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objetos en la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-260">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-261">Colección <b>ListObjects</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-261">Read-only <b>ListObjects</b> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-262">Representa un encabezado de correo electrónico de un documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-262">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="0cae5-263">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-263">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-264">La hoja antes de la cual se colocará la hoja que se ha movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-264">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="0cae5-265">No puede especificar <paramref name="Before" /> si especifica <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-265">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0cae5-266">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-266">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-267">La hoja después de la cual se colocará la hoja que se ha movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-267">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="0cae5-268">No puede especificar <paramref name="After" /> si especifica <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-268">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-269">Mueve la hoja a otra ubicación en el libro</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-269">Moves the sheet to another location in the workbook</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-270">
            <para>Si no se especifica cualquiera <paramref name="Before" /> o <paramref name="After" />, Microsoft Excel crea un nuevo libro que contiene la hoja que se ha movido.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-270">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p143">Devuelve o establece el nombre del objeto. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p143">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-273">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> colección que representa todos los nombres específicos de hoja de cálculo (nombres definidos con el "prefijo"!</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="0cae5-274">prefijo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-274">prefix).</span>
          </span>
          <span data-ttu-id="0cae5-275">Objeto <b>Names</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-275">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-276">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, o <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object que representa la hoja o celda siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span>
          </span>
          <span data-ttu-id="0cae5-277">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-277">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-278">
            <para>Si el objeto es un rango, esta propiedad emula la tecla TAB, aunque la propiedad devuelve la celda siguiente sin seleccionar it.</para>
            <para>En una hoja protegida, esta propiedad devuelve la siguiente celda desbloqueada. En una hoja desprotegida, esta propiedad siempre devuelve la celda inmediatamente a la derecha de la celda especificada.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-278">
              <para>If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0cae5-279">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-279">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-280">Nombre o número del objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-280">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-281">Devuelve un objeto object que representa un único objeto OLE (un <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) o una colección de todos los objetos OLE (un <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> colección) en el gráfico o la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-281">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
          <span data-ttu-id="0cae5-282">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-282">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-283">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-283">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-284">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-284">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-285">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-285">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-286">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-286">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-287">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-287">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-288">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-288">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-289">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-289">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-290">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object que representa el esquema de la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-290">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-291">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-291">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-292">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-292">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-293">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object que contiene todos los ajustes de configuración de página para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-293">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
          <span data-ttu-id="0cae5-294">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-294">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p150">Devuelve el objeto primario correspondiente al objeto especificado. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="0cae5-297">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-297">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que especifica dónde se debe pegar el contenido del Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="0cae5-299">Si se omite este argumento, se usa la selección actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-299">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="0cae5-300">Este argumento puede ser sólo especifica si se puede pegar el contenido del Portapapeles en un rango.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-300">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="0cae5-301">Si se especifica este argumento, el <paramref name="Link" /> no se puede utilizar el argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-301">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="0cae5-302">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-303">
            <b>True</b> para establecer un vínculo con el origen de los datos pegados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-303">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="0cae5-304">Si se especifica este argumento, el <paramref name="Destination" /> no se puede utilizar el argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-304">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span>
          </span>
          <span data-ttu-id="0cae5-305">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-305">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-306">Pega el contenido del Portapapeles en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-306">Pastes the contents of the Clipboard onto the sheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-307">
            <para>Si no se especifica la <paramref name="Destination" /> argumento, debe seleccionar el rango de destino antes de utilizar este método.</para>
            <para>Es posible que este método modifique la selección de la hoja, según el contenido del Portapapeles.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-307">
              <para>If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="0cae5-308">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-308">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-309">Cadena que especifica el formato de los datos del Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-309">A string that specifies the Clipboard format of the data.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="0cae5-310">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-311">
            <b>True</b> para establecer un vínculo con el origen de los datos pegados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-311">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="0cae5-312">Si los datos de origen no son adecuados para la vinculación o la aplicación de origen no admite la vinculación, se omite este parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-312">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="0cae5-313">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-313">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="0cae5-314">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-314">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-315">
            <b>True</b> para mostrar los datos pegados como un icono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-315">
              <b>True</b> to display the pasted data as an icon.</span>
          </span>
          <span data-ttu-id="0cae5-316">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-316">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="0cae5-317">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-317">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-318">El nombre del archivo que contiene el icono que se usará si <paramref name="DisplayAsIcon" /> es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-318">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="0cae5-319">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-319">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-320">Número de índice del icono para el archivo de iconos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-320">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="0cae5-321">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-322">Rótulo de texto del icono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-322">The text label of the icon.</span>
          </span>
        </param>
        <param name="NoHTMLFormatting">
          <span data-ttu-id="0cae5-323">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-323">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-324">
            <b>True</b> para quitar todos los formato, los hipervínculos y las imágenes de HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-324">
              <b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span>
          </span>
          <span data-ttu-id="0cae5-325">
            <b>False</b> para pegar HTML tal y como está.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-325">
              <b>False</b> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="0cae5-326">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-326">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-327">Pega el contenido del Portapapeles en la hoja con un formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-327">Pastes the contents of the Clipboard onto the sheet using a specified format.</span>
          </span>
          <span data-ttu-id="0cae5-328">Use este método para pegar datos desde otras aplicaciones o para pegar datos en un formato específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-328">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-329">
            <para>
              <paramref name="NoHTMLFormatting" />será sólo cuestión cuando <paramref name="Format" /> = "HTML". En todos los demás casos, <paramref name="NoHTMLFormatting" /> se omitirá.</para>
            <para>Debe seleccionar el rango de destino antes de utilizar este método.</para>
            <para>Es posible que este método modifique la selección de la hoja, según el contenido del Portapapeles.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-329">
              <para>
                <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”. In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</para>
              <para>You must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-330">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-330">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0cae5-331">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-331">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-332">Nombre o número del informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-332">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-333">Devuelve un objeto object que representa un único informe de tabla dinámica (un <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objeto) o una colección de todos los informes de tabla dinámica (un <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> objeto) en una hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-333">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-334">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-334">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="0cae5-335">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-335">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-336">El origen de los datos del informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-336">The source of the report data.</span>
          </span>
          <span data-ttu-id="0cae5-337">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-337">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          </span>
        </param>
        <param name="SourceData">
          <span data-ttu-id="0cae5-338">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-338">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-339">Los datos para el nuevo informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-339">The data for the new report.</span>
          </span>
          <span data-ttu-id="0cae5-340">Puede ser un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto, una matriz de rangos o una constante de texto que representa el nombre de otro informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-340">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="0cae5-341">Para una base de datos externa, <paramref name="SourceData" /> es una matriz de cadenas que contiene la cadena de consulta SQL, donde cada elemento es un máximo de 255 caracteres de longitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-341">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="0cae5-342">Debe utilizar el <paramref name="Connection" /> argumento para especificar la cadena de conexión ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-342">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="0cae5-343">Para la compatibilidad con versiones anteriores de Excel, <paramref name="SourceData" /> puede ser una matriz de dos elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-343">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span>
          </span>
          <span data-ttu-id="0cae5-344">El primer elemento es la cadena de conexión especifica el origen ODBC de los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-344">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="0cae5-345">El segundo elemento es la cadena de consulta SQL utilizada para obtener los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-345">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="0cae5-346">Si especifica <paramref name="SourceData" />, también debe especificar <paramref name="SourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-346">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span>
          </span>
          <span data-ttu-id="0cae5-347">Si la celda activa está dentro de la <paramref name="SourceData" /> rango, debe especificar <paramref name="TableDestination" /> así como.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-347">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span>
          </span>
        </param>
        <param name="TableDestination">
          <span data-ttu-id="0cae5-348">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-348">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-349">Un objeto <b>Range</b> que especifica dónde se debe colocar el informe en la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-349">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-350">Si se omite este argumento, el informe se coloca en la celda activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-350">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="TableName">
          <span data-ttu-id="0cae5-351">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-351">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-352">Cadena que especifica el nombre del nuevo informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-352">A string that specifies the name of the new report.</span>
          </span>
        </param>
        <param name="RowGrand">
          <span data-ttu-id="0cae5-353">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-354">						Si es <b>True</b>, se muestran los totales generales de las filas en el informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-354">
              <b>True</b> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="ColumnGrand">
          <span data-ttu-id="0cae5-355">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-355">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-356">						Si es <b>True</b>, se muestran los totales generales de las columnas en el informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-356">
              <b>True</b> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="SaveData">
          <span data-ttu-id="0cae5-357">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-358">
            <b>True</b> para guardar datos con el informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-358">
              <b>True</b> to save data with the report.</span>
          </span>
          <span data-ttu-id="0cae5-359">
            <b>False</b> para guardar sólo la definición de informe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-359">
              <b>False</b> to save only the report definition.</span>
          </span>
        </param>
        <param name="HasAutoFormat">
          <span data-ttu-id="0cae5-360">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-361">						Si es <b>True</b>, Microsoft Excel da formato automáticamente al informe cuando éste se actualiza o cuando los campos se desplazan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-361">
              <b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="AutoPage">
          <span data-ttu-id="0cae5-362">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-362">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-363">Sólo es válido si <paramref name="SourceType" /> tiene el <b>valor xlConsolidation</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-363">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span>
          </span>
          <span data-ttu-id="0cae5-364">
            <b>True</b> para que Microsoft Excel cree un campo de página para la consolidación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-364">
              <b>True</b> to have Microsoft Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="0cae5-365">Si <paramref name="AutoPage" /> es <b>False</b>, debe crear el campo de página o los campos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-365">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="Reserved">
          <span data-ttu-id="0cae5-366">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-367">No se usa en Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-367">Not used by Microsoft Excel.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="0cae5-368">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-368">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-369">
            <b>True</b> para que Excel realice consultas para el informe de forma asíncrona (en segundo plano).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-369">
              <b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="0cae5-370">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-370">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OptimizeCache">
          <span data-ttu-id="0cae5-371">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-371">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-372">
            <b>True</b> para optimizar la memoria caché de tabla dinámica cuando se construye.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-372">
              <b>True</b> to optimize the PivotTable cache when it's constructed.</span>
          </span>
          <span data-ttu-id="0cae5-373">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-373">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageFieldOrder">
          <span data-ttu-id="0cae5-374">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-375">El orden en qué página campos se agregan al diseño del informe de tabla dinámica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-375">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="0cae5-376">Puede ser una de las siguientes constantes de <b>XlOrder</b> : <b>xlDownThenOver</b> o <b>xlOverThenDown</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-376">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span>
          </span>
          <span data-ttu-id="0cae5-377">El valor predeterminado es <b>xlDownThenOver</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-377">The default value is <b>xlDownThenOver</b>.</span>
          </span>
        </param>
        <param name="PageFieldWrapCount">
          <span data-ttu-id="0cae5-378">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-379">El número de campos de página en cada columna o fila en el informe de tabla dinámica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-379">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="0cae5-380">El valor predeterminado es 0 (cero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-380">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="ReadData">
          <span data-ttu-id="0cae5-381">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-381">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-382">
            <b>True</b> para crear una memoria caché de tabla dinámica que contiene todos los registros de la base de datos externa; Esta caché puede ser muy grande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-382">
              <b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="0cae5-383">Si <paramref name="ReadData" /> es <b>False</b>, puede establecer algunos de los campos como campos de página de servidor antes de leen los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-383">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="Connection">
          <span data-ttu-id="0cae5-384">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-384">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-385">Una cadena que contiene la configuración ODBC que permite a Microsoft Excel conectarse a un origen de datos ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-385">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="0cae5-386">La cadena de conexión tiene la forma "ODBC; &lt;cadena de conexión&gt;".</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-386">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="0cae5-387">Este argumento anula la configuración anterior para el <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> del objeto <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-387">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-388">Crea un <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-388">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
          <span data-ttu-id="0cae5-389">Este método no muestra al Asistente para la tabla dinámica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-389">This method doesn’t display the PivotTable Wizard.</span>
          </span>
          <span data-ttu-id="0cae5-390">Este método no está disponible para orígenes de datos OLE DB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-390">This method isn’t available for OLE DB data sources.</span>
          </span>
          <span data-ttu-id="0cae5-391">Usar el <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> método para agregar una caché de tabla dinámica y, a continuación, crear un informe de tabla dinámica basada en la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-391">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span>
          </span>
          <span data-ttu-id="0cae5-392">Objeto de <b>tabla dinámica</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-392">
              <b>PivotTable</b> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-393">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, o <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object que representa la hoja o celda anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-393">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span>
          </span>
          <span data-ttu-id="0cae5-394">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-394">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-395">
            <para>Si el objeto es un rango, esta propiedad emula la acción de presionar la tecla MAYÚS + TAB; sin embargo, a diferencia de la combinación de teclas, la propiedad devuelve la celda anterior sin seleccionar it.</para>
            <para>En una hoja protegida, esta propiedad devuelve la celda desbloqueada anterior. En una hoja desprotegida, esta propiedad siempre devuelve la celda inmediatamente a la izquierda de la celda especificada.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-395">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-396">Obtiene el número de páginas de comentarios que se imprimirán para la hoja de cálculo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-396">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cae5-397">El número de páginas de comentarios que se imprimirán para la hoja de cálculo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-397">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="0cae5-398">
            <para>De sólo lectura.</para>
            <para>El <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> (propiedad) sólo devolverá un número mayor que cero si los comentarios en la ficha de hoja de la configuración de página se establece cuadro de diálogo en al final de la hoja. Esta propiedad devolverá cero si la hoja es una hoja de gráfico o una hoja de diálogo de MS Excel 5.0.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-398">
              <para>Read-only.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet. This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="0cae5-399">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-399">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-400">El número de la página en la que se va a iniciar la impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-400">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="0cae5-401">Si se omite este argumento, la impresión comienza al principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-401">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0cae5-402">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-403">El número de la última página a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-403">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="0cae5-404">Si se omite este argumento, la impresión finaliza con la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-404">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="0cae5-405">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-406">El número de copias que se va a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-406">The number of copies to print.</span>
          </span>
          <span data-ttu-id="0cae5-407">Si se omite este argumento, se imprime una copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-407">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="0cae5-408">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-409">
            <b>True</b> para que Microsoft Excel invoque la vista preliminar antes de imprimir el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-409">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="0cae5-410">
            <b>False</b> (o se omite) para imprimir el objeto inmediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-410">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="0cae5-411">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-411">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-412">Establece el nombre de la impresora activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-412">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="0cae5-413">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-413">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-414">
            <b>True</b> para imprimir en un archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-414">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="0cae5-415">Si <paramref name="PrToFileName" /> no se especifica, Microsoft Excel solicita al usuario que escriba el nombre del archivo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-415">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="0cae5-416">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-416">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-417">
            <b>True</b> para intercalar múltiples copias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-417">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="0cae5-418">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-418">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-419">Si <paramref name="PrintToFile" /> está establecida en <b>True</b>, este argumento especifica el nombre del archivo que desea imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-419">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-420">Imprime el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-420">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-421">
            <para>"Páginas" en las descripciones de <paramref name="From" /> y <paramref name="To" /> hace referencia a las páginas impresas, no general de páginas de la hoja o libro.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-421">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-422">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-422">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="0cae5-423">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-423">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-424">
            <b>True</b> para habilitar los cambios realizados en la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-424">
              <b>True</b> to enable changes to the specified worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-425">Muestra una vista preliminar del objeto tal como aparecería impreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-425">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="0cae5-426">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-426">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-427">Una cadena que especifica una contraseña entre mayúsculas y minúsculas para la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-427">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0cae5-428">Si se omite este argumento, puede desproteger la hoja de cálculo o el libro sin utilizar una contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-428">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="0cae5-429">De lo contrario, debe especificar la contraseña para desproteger la hoja de cálculo o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-429">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0cae5-430">Si olvida la contraseña, no puede desproteger la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-430">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0cae5-431">Es una buena idea para mantener una lista de las contraseñas y sus nombres de documento correspondientes en un lugar seguro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-431">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="0cae5-432">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-432">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-433">
            <b>True</b> para proteger las formas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-433">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="0cae5-434">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-434">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="0cae5-435">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-436">
            <b>True</b> para proteger el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-436">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="0cae5-437">Para obtener un gráfico, esto protege todo el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-437">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="0cae5-438">Para una hoja de cálculo, protege las celdas bloqueadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-438">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="0cae5-439">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-439">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="0cae5-440">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-440">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-441">
            <b>True</b> para proteger los escenarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-441">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="0cae5-442">Este argumento sólo es válido para las hojas de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-442">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="0cae5-443">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-443">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="0cae5-444">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-444">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-445">
            <b>True</b> para proteger la interfaz de usuario pero no las macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-445">
              <b>True</b> to protect the user interface but not macros.</span>
          </span>
          <span data-ttu-id="0cae5-446">Si se omite este argumento, la protección se aplica tanto a las macros como a la interfaz de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-446">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="AllowFormattingCells">
          <span data-ttu-id="0cae5-447">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-447">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-448">
            <b>True</b> permite al usuario aplicar formato a cualquier celda en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-448">
              <b>True</b> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-449">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-449">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingColumns">
          <span data-ttu-id="0cae5-450">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-450">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-451">
            <b>True</b> permite al usuario aplicar formato a cualquier columna de una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-451">
              <b>True</b> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-452">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-452">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingRows">
          <span data-ttu-id="0cae5-453">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-453">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-454">
            <b>True</b> permite al usuario aplicar formato a cualquier fila de una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-454">
              <b>True</b> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-455">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-455">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingColumns">
          <span data-ttu-id="0cae5-456">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-456">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-457">
            <b>True</b> permite al usuario insertar columnas en la hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-457">
              <b>True</b> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-458">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-458">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingRows">
          <span data-ttu-id="0cae5-459">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-459">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-460">
            <b>True</b> permite al usuario insertar filas en la hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-460">
              <b>True</b> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-461">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-461">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingHyperlinks">
          <span data-ttu-id="0cae5-462">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-462">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-463">
            <b>True</b> permite al usuario insertar hipervínculos en la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-463">
              <b>True</b> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-464">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-464">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingColumns">
          <span data-ttu-id="0cae5-465">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-465">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-466">
            <b>True</b> permite al usuario eliminar columnas en la hoja de cálculo protegida, donde cada celda de la columna que se va a eliminar está desbloqueada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-466">
              <b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="0cae5-467">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-467">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingRows">
          <span data-ttu-id="0cae5-468">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-469">
            <b>True</b> permite al usuario eliminar filas en la hoja de cálculo protegida donde cada celda de la fila que se va a eliminar está desbloqueada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-469">
              <b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="0cae5-470">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-470">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowSorting">
          <span data-ttu-id="0cae5-471">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-471">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-472">
            <b>True</b> permite al usuario ordenar la hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-472">
              <b>True</b> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-473">Todas las celdas del rango de ordenación deben ser desbloqueadas o desprotegidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-473">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="0cae5-474">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-474">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFiltering">
          <span data-ttu-id="0cae5-475">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-476">
            <b>True</b> permite al usuario establecer filtros en la hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-476">
              <b>True</b> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-477">Los usuarios pueden cambiar los criterios de filtro, pero no puede habilitar o deshabilitar un filtro automático.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-477">Users can change filter criteria but can not enable or disable an auto filter.</span>
          </span>
          <span data-ttu-id="0cae5-478">Los usuarios pueden establecer filtros en un filtro automático existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-478">Users can set filters on an existing auto filter.</span>
          </span>
          <span data-ttu-id="0cae5-479">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-479">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowUsingPivotTables">
          <span data-ttu-id="0cae5-480">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-480">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-481">
            <b>True</b> permite al usuario usar informes de tabla dinámica en la hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-481">
              <b>True</b> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-482">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-482">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-483">Protege una hoja de cálculo para que no se pueda modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-483">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-484">
            <para>Si se aplica el método <b>Protect</b> con el <paramref name="UserInterfaceOnly" /> argumento se establece en <b>True</b> para una hoja de cálculo y, a continuación, guarda el libro, la hoja de cálculo completa (no sólo la interfaz) estará completamente protegida cuando vuelva a abrir el libro. Para volver a habilitar la protección de la interfaz de usuario después de abrir el libro, debe aplicar de nuevo el método <b>Protect</b> con <paramref name="UserInterfaceOnly" /> establecido en <b>True</b>.</para>
            <para>Si desea realizar un cambio en una hoja de cálculo protegida, es posible utilizar el método <b>Protect</b> en una hoja de cálculo protegida si se proporciona la contraseña. Otro método sería desproteger la hoja de cálculo, realice los cambios necesarios y, a continuación, vuelva a proteger la hoja de cálculo.</para>
            <para>
              <b>Nota</b>: 'Sin protección' significa que la celda puede estar bloqueada (cuadro de diálogo Formato de celdas) pero se incluye en un rango definido en el permitir a los usuarios modifiquen rangos de cuadro de diálogo, y el usuario ha desprotegido el rango con una contraseña o haya sido validado gracias a los permisos de NT.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-484">
              <para>If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook. To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</para>
              <para>If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied. Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</para>
              <para>
                <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-485">
            <b>True</b> si el contenido de la hoja está protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-485">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="0cae5-486">Para obtener un gráfico, esto protege todo el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-486">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="0cae5-487">Para una hoja de cálculo, protege las celdas individuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-487">For a worksheet, this protects the individual cells.</span>
          </span>
          <span data-ttu-id="0cae5-488">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-488">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-489">
            <b>True</b> si las formas están protegidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-489">
              <b>True</b> if shapes are protected.</span>
          </span>
          <span data-ttu-id="0cae5-490">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-490">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-491">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object que representa las opciones de protección de la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-491">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-492">
            <b>True</b> si se activa la protección de sólo interfaz de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-492">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="0cae5-493">Para activar la protección de la interfaz de usuario, use la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método con el <paramref name="UserInterfaceOnly" /> argumento se establece en <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-493">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
          <span data-ttu-id="0cae5-494">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-494">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p209">
            <b>True</b> si los escenarios de la hoja de cálculo están protegidos. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p209">
              <b>True</b> if the worksheet scenarios are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-497">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> colección que representa todas las tablas de consulta de la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-497">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-498">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-498">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="0cae5-499">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-499">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-500">El nombre del rango.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-500">The name of the range.</span>
          </span>
          <span data-ttu-id="0cae5-501">Esto debe ser una referencia de estilo A1 en el lenguaje de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-501">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="0cae5-502">Puede incluir el operador de rango (dos puntos), el operador de intersección (un espacio) o el operador de unión (una coma).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-502">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="0cae5-503">También puede incluir signos de dólar, pero se tendrán en cuenta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-503">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="0cae5-504">Puede usar un nombre definido local en cualquier parte del rango.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-504">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="0cae5-505">Si utiliza un nombre, se asume que el nombre está en el lenguaje de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-505">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="0cae5-506">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-507">La celda en la esquina superior izquierda e inferior derecha del rango.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-507">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="0cae5-508">Puede ser un objeto <b>Range</b> que contiene una sola celda, una columna completa o una fila completa o puede ser una cadena que da nombre a una sola celda en el lenguaje de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-508">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-509">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa una celda o un rango de celdas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-509">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-510">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-510">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-511">Restablece todos los saltos de página en la hoja especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-511">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-512">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa todas las filas de la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-513">Objeto <b>Range</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-513">Read-only <b>Range</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0cae5-514">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-514">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-515">Una cadena que indica el nombre del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-515">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0cae5-516">Puede incluir una ruta de acceso completa; Si no lo hace, Microsoft Excel guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-516">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="0cae5-517">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-517">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-518">El formato de archivo que se utilizará al guardar el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-518">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="0cae5-519">Para obtener una lista de opciones válidas, vea el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-519">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="0cae5-520">Para un archivo existente, el formato predeterminado es el último formato de archivo especificado; para un nuevo archivo, el valor predeterminado es el formato de la versión de Excel que se utiliza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-520">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="0cae5-521">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-522">Cadena que distingue entre mayúsculas y minúsculas (no más de 15 caracteres) y que indica que se aplicará la protección con contraseña al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-522">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="0cae5-523">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-523">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-524">Una cadena que indica la contraseña contra escritura de este archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-524">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="0cae5-525">Si se guarda un archivo con la contraseña y la contraseña no se proporciona cuando se abre el archivo, se abre el archivo como de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-525">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="0cae5-526">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-527">
            <b>True</b> para mostrar un mensaje cuando se abre el archivo, recomendando que se abra el archivo como de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-527">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="0cae5-528">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-529">
            <b>True</b> para crear un archivo de copia de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-529">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="0cae5-530">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-530">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-531">
            <b>True</b> para agregar este libro a la lista de archivos utilizados recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-531">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="0cae5-532">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-532">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="0cae5-533">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-533">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-534">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-534">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="0cae5-535">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-535">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-536">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-536">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="0cae5-537">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-537">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-538">
            <b>True</b> guarda los archivos en el idioma de Microsoft Excel (incluyendo la configuración del panel de control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-538">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="0cae5-539">
            <b>False</b> (valor predeterminado) guarda los archivos en el lenguaje de Visual Basic para aplicaciones (VBA) (que normalmente es inglés de Estados Unidos, a menos que el proyecto VBA donde se ejecuta Workbooks.Open desde un proyecto de VBA XL5/95 internacionalizado anterior).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-539">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-540">Guarda los cambios del gráfico o de la hoja de cálculo en un archivo diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-540">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0cae5-541">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-541">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-542">El nombre o número del escenario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-542">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="0cae5-543">Utilice una matriz para especificar más de un escenario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-543">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-544">Devuelve un objeto object que representa un solo escenario (un <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> objeto) o una colección de escenarios (un <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> objeto) en la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-544">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-545">Devuelve el <see cref="T:Microsoft.Office.Core.Scripts" /> colección, que contiene <see cref="T:Microsoft.Office.Core.Script" /> objetos que representan bloques de secuencia de comandos o código en el documento especificado cuando se guarda como una página Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-545">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-546">Devuelve o establece el rango donde se permite el desplazamiento como una referencia de rango de estilo A1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-546">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span>
          </span>
          <span data-ttu-id="0cae5-547">No se pueden seleccionar celdas fuera del área de desplazamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-547">Cells outside the scroll area cannot be selected.</span>
          </span>
          <span data-ttu-id="0cae5-548">
            <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-548">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-549">
            <para>Establecer esta propiedad en una cadena vacía ("") para habilitar la selección de celda para toda la hoja.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-549">
              <para>Set this property to the empty string ("") to enable cell selection for the entire sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-550">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-550">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="0cae5-551">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-552">Objeto que se va a reemplazar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-552">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-553">Selecciona el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-553">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-554">
            <para>Para seleccionar una celda o un rango de celdas, use el método <b>Select</b> . Para hacer que la celda activa de una sola celda, use la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> (método).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-554">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0cae5-555">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-555">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0cae5-556">Nombre del archivo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-556">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-557">Establece el gráfico de fondo para una hoja de cálculo o un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-557">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-558">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object que representa todas las formas de la hoja de cálculo u hoja de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-558">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="0cae5-559">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-559">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p229">Hace visibles todas las filas de la lista filtrada actual. Si se está usando Autofiltro, este método cambiará las flechas a "Todas".</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p229">Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-562">Muestra el formulario de datos correspondiente a la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-562">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-563">
            <para>La ejecución se detiene mientras está usando el formulario de datos. Cuando se cierra el formulario de datos, la ejecución se reanuda en la línea siguiente al método <b>ShowDataForm</b> .</para>
            <para>Este método ejecuta el formulario de datos personalizado, si lo hay.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-563">
              <para>Execution pauses while you’re using the data form. When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</para>
              <para>This method runs the custom data form, if one exists.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-564">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> objeto que representa el identificador de la celda especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-564">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p230">Devuelve los valores ordenados de la hoja actual. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p230">Returns the sorted values in the current worksheet. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-567">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-567">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-568">Devuelve el alto estándar (valor predeterminado) de todas las filas en la hoja de cálculo en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-568">Returns the standard (default) height of all the rows in the worksheet in points.</span>
          </span>
          <span data-ttu-id="0cae5-569">De sólo lectura <b>doble</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-569">Read-only <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p232">Devuelve o establece el ancho estándar (predeterminado) de todas las columnas de la hoja de cálculo. <b>Double</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p232">Returns or sets the standard (default) width of all the columns in the worksheet. Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-572">
            <para>Una unidad de ancho de columna es igual al ancho de un carácter en el estilo Normal. Para fuentes proporcionales, se utiliza el ancho del carácter 0 (cero).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-572">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-573">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> objeto para un gráfico o una hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-573">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0cae5-574">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-574">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p233">
            <b>True</b> si Microsoft Excel usa las reglas de evaluación de expresiones de Lotus 1-2-3 en la hoja de cálculo. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p233">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-p234">
            <b>True</b> si Microsoft Excel usa las reglas de inserción de fórmulas de Lotus 1-2-3 en la hoja de cálculo. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p234">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-579">Devuelve o establece el tipo de hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-579">Returns or sets the worksheet type.</span>
          </span>
          <span data-ttu-id="0cae5-580">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-580">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="0cae5-581">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-581">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-582">Una cadena que representa la contraseña distingue mayúsculas de minúsculas a utilizar para desproteger la hoja o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-582">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="0cae5-583">Si la hoja o el libro no está protegido con una contraseña, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-583">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="0cae5-584">Si se omite este argumento en una hoja que está protegida con una contraseña, se le pedirá la contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-584">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="0cae5-585">Si se omite este argumento para un libro que está protegido con una contraseña, se produce un error en el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-585">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-p237">Elimina la protección de una hoja o de un libro. Este método no tiene efecto si la hoja o el libro no están protegidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-p237">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0cae5-588">
            <para>Si olvida la contraseña, no se puede desproteger la hoja o el libro. Es una buena idea para mantener una lista de las contraseñas y sus nombres de documento correspondientes en un lugar seguro.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-588">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-589">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa el rango utilizado en la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-589">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span>
          </span>
          <span data-ttu-id="0cae5-590">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-590">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-591">Determina si el objeto es visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-591">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="0cae5-592">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-592">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0cae5-593">
            <para>La propiedad <b>Visible</b> de un elemento de tabla dinámica es <b>True</b> si el elemento actualmente está visible en la tabla.</para>
            <para>Si se establece la propiedad <b>Visible</b> de un nombre en <b>False</b>, el nombre no aparecerá en el cuadro de diálogo Definir nombre.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-593">
              <para>The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</para>
              <para>If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cae5-594">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> saltos de colección que representa la página vertical de la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="0cae5-595">Es de solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-595">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="0cae5-596">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-596">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-597">Ruta XPath en la que realizar la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-597">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="0cae5-598">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-598">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-599">Delimitado por el espacio de <b>cadena</b> que contiene los espacios de nombres al que hace referencia en el parámetro XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-599">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="0cae5-600">Si uno de los espacios de nombres especificado no se puede resolver, se generará un error en tiempo de ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-600">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="0cae5-601">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-601">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="0cae5-602">Especifique una asignación XML si desea buscar XPath dentro de una asignación específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-602">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-603">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa las celdas asignadas a un elemento XPath determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-603">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="0cae5-604">Devuelve <b>Nothing</b> si la expresión XPath especificada no se ha asignado a la hoja de cálculo o si el rango asignado está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-604">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0cae5-605">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para>Si XPath existe en una columna de una lista XML, el objeto <b>Range</b> devuelto no incluye la fila de encabezado ni la fila de inserción.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-605">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="0cae5-606">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-607">Ruta XPath en la que realizar la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-607">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="0cae5-608">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0cae5-609">Delimitado por el espacio de <b>cadena</b> que contiene los espacios de nombres al que hace referencia en el parámetro XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-609">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="0cae5-610">Si uno de los espacios de nombres especificado no se puede resolver, se generará un error en tiempo de ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-610">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="0cae5-611">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-611">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="0cae5-612">Especifique una asignación XML si desea buscar XPath dentro de una asignación específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-612">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cae5-613">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa las celdas asignadas a un elemento XPath determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-613">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="0cae5-614">Devuelve <b>Nothing</b> si la expresión XPath especificada no se ha asignado a la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-614">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0cae5-615">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para>a diferencia de la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> (método), el método <b>XmlMapQuery</b> devuelve la columna entera de una lista XML, incluidas la fila de encabezado y la fila de inserción.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cae5-615">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>