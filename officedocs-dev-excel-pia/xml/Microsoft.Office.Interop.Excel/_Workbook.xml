<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20575050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4f9e5-101">Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f9e5-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="4f9e5-102">Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f9e5-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="4f9e5-103">De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f9e5-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="4f9e5-104">Para obtener más información sobre el objeto COM, vea <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f9e5-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-107">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-108">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="4f9e5-110">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-111">Especifica cuándo se aceptan todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-111">Specifies when all the changes are accepted.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="4f9e5-112">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-113">Especifica quién acepta todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-113">Specifies by whom all the changes are accepted.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="4f9e5-114">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-115">Especifica dónde se aceptan todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-115">Specifies where all the changes are accepted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-116">Acepta todos los cambios del libro compartido especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-116">Accepts all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-117">
            <b>True</b> si las etiquetas se pueden usar en las fórmulas de la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-117">
              <b>True</b> if labels can be used in worksheet formulas.</span>
          </span>
          <span data-ttu-id="4f9e5-118">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-118">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-119">Lectura y escritura de <b>tipo Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-119">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-120">Obtiene o establece si determinadas funciones de hoja de cálculo usan los últimos algoritmos de precisión para calcular sus resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-121">Especifica qué versión de algoritmos que se utilizan para ciertas funciones de hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-121">Specifies which version of algorithms to use for certain worksheet functions.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-122">
            <para>Lectura y escritura</para>
            <para>De forma predeterminada, algunas de las funciones de hoja de cálculo de Microsoft Office Excel 2007 y versiones anteriores de Microsoft Excel usan nuevos algoritmos que aumentan su exactitud. Sin embargo, en algunos casos, los nuevos algoritmos disminuyen el rendimiento de estas funciones en relación con su rendimiento en Microsoft Office Excel 2007 y versiones anteriores de Excel. Para especificar que estas funciones de hoja de cálculo usan los algoritmos más antiguos para aumentar su rendimiento, establezca el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> (propiedad) en 1. En la siguiente tabla se describe los valores posibles para la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> (propiedad).</para>
            <item>
              <term>1</term>
              <description>utilizar Microsoft Office Excel 2007 o algoritmos de versiones anteriores</description>
            </item>de 
            <item><term>0</term>,
              <description>use la más recientes, algoritmos más precisos (valor predeterminado)</description></item><list type="table"><item><term>2</term><description>algoritmos de uso de Microsoft Excel 2010</description></item></list><para><b>Precaución</b>: configuración de la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> (propiedad) en un valor distinto de 0, 1 o 2, se producirá un comportamiento indefinido.</para><para>La siguiente tabla resume qué funciones se ven afectadas por la configuración de la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> (propiedad) en 1. Las funciones que se enumeran en la columna "Funciones no afectadas" usarán siempre los últimos algoritmos de precisión o no se han cambiado en Excel 2010. Para los nombres de funciones que incluyen un punto (.) en sus nombres determinar el nombre de la función correspondiente de implementada en VBA como un método de la <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> de objetos, sustituya el carácter de subrayado (_) para el período. Por ejemplo, el método VBA que corresponde a la versión BETA. Función de distribuciones es el <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> método.</para><list type="table"><item><term>BETADIST</term><description>AGREGADO</description></item><item><term>BETAINV</term><description>BETA. Distribuciones</description></item><item><term>BINOMDIST</term><description>BETA. INV</description></item><item><term>CHIDIST</term><description>BINOM. Distribuciones</description></item><item><term>CHIINV</term><description>BINOM. INV</description></item><item><term>CHITEST</term><description>CEILING</description></item><item><term>confianza</term><description>CEILING. PRECISO</description></item><item><term>CRITBINOM</term><description>CHISQ. Distribuciones</description></item><item><term>CUMIPMT</term><description>CHISQ. DISTRIBUCIÓN DE RT</description></item><item><term>CUMPRINC</term><description>CHISQ. INV</description></item><item><term>ERF</term><description>CHISQ. FACTURA RT</description></item><item><term>ERFC</term><description>CHISQ. PRUEBA</description></item><item><term>EXPONDIST</term><description>con nivel de confianza. NORM</description></item><item><term>FDIST</term><description>con nivel de confianza. T</description></item><item><term>FINV</term><description>COVAR</description></item><item><term>FTEST</term><description>COVARIANZA. P</description></item><item><term>GAMMADIST</term><description>COVARIANZA. S</description></item><item><term>GAMMALN</term><description>ERF. PRECISO</description></item><item><term>GAMMINV</term><description>ERFC. PRECISO</description></item><item><term>HYPGEOMDIST</term><description>EXPON. Distribuciones</description></item><item><term>IPMT</term><description>DISTR</description></item><item><term>IRR</term><description>DISTR. RT</description></item><item><term>LOGINV</term><description>F.INV</description></item><item><term>LOGNORMDIST</term><description>F.INV. RT</description></item><item><term>NEGBINOMDIST</term><description>F.TEST</description></item><item><term>NORMDIST</term><description>FLOOR</description></item><item><term>NORMINV</term><description>FLOOR. PRECISO</description></item><item><term>NORMSDIST</term><description>GAMMA. Distribuciones</description></item><item><term>NORMSINV</term><description>GAMMA. INV</description></item><item><term>PMT</term><description>GAMMALN. PRECISO</description></item><item><term>POISSON</term><description>HYPGEOM. Distribuciones</description></item><item><term>PPMT</term><description>ISO. Límite máximo</description></item><item><term>STDEV</term><description>LOGNORM. Distribuciones</description></item><item><term>STDEVP</term><description>LOGNORM. INV</description></item><item><term>TDIST</term><description>MOD</description></item><item><term>TINV</term><description>modo</description></item><item><term>TTEST</term><description>modo. SOLA</description></item><item><term>VAR</term><description>modo. SNGL</description></item><item><term>VARA</term><description>NEGBINOM. Distribuciones</description></item><item><term>VARP</term><description>NETWORKDAYS. Internacional</description></item><item><term>VARPA</term><description>NORM. Distribuciones</description></item><item><term>WEIBULL</term><description>NORM. INV</description></item><item><term>XIRR</term><description>NORM. S.DIST</description></item><item><term>ZTEST</term><description>NORM. S.INV</description></item><item><term />percentil
            </item><item><term />percentil. EXC
            </item><item><term />percentil. Inc.
            </item><item><term />PERCENTRANK
            </item><item><term />PERCENTRANK. EXC
            </item><item><term />PERCENTRANK. Inc.
            </item><item><term />POISSON. Distribuciones
            </item><item><term />cuartil
            </item><item><term />cuartil. EXC
            </item><item><term />cuartil. Inc.
            </item><item><term />clasificación
            </item><item><term />clasificación. AVG
            </item><item><term />clasificación. EQ
            </item><item><term />STDEV. P
            </item><item><term />STDEV. S
            </item><item><term />T.DIST
            </item><item><term />T.DIST.2T
            </item><item><term />T.DIST. RT
            </item><item><term />T.DIST. RT
            </item><item><term />T.INV
            </item><item><term />T.INV.2T
            </item><item><term />T.INV. RT
            </item><item><term />T.TEST
            </item><item><term />VAR. P
            </item><item><term />VAR. S
            </item><item><term />WEEKDAY
            </item><item><term />WEEKNUM
            </item><item><term />WEIBULL. Distribuciones
            </item><item><term />día LABORABLE. Internacional
            </item><item><term />Z.TEST
            </item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-122">
              <para>Read/write</para>
              <para>By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy. However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel. To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</para>
              <list type="table">
                <item>
                  <term>0</term>
                  <description>Use the latest, most accurate algorithms (default)</description>
                </item>
                <item>
                  <term>1</term>
                  <description>Use Microsoft Office Excel 2007 or earlier version algorithms</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use Microsoft Excel 2010 algorithms</description>
                </item>
              </list>
              <para>
                <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</para>
              <para>The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010. For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period. For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</para>
              <list type="table">
                <item>
                  <term>BETADIST</term>
                  <description>AGGREGATE</description>
                </item>
                <item>
                  <term>BETAINV</term>
                  <description>BETA.DIST</description>
                </item>
                <item>
                  <term>BINOMDIST</term>
                  <description>BETA.INV</description>
                </item>
                <item>
                  <term>CHIDIST</term>
                  <description>BINOM.DIST</description>
                </item>
                <item>
                  <term>CHIINV</term>
                  <description>BINOM.INV</description>
                </item>
                <item>
                  <term>CHITEST</term>
                  <description>CEILING</description>
                </item>
                <item>
                  <term>CONFIDENCE</term>
                  <description>CEILING.PRECISE</description>
                </item>
                <item>
                  <term>CRITBINOM</term>
                  <description>CHISQ.DIST</description>
                </item>
                <item>
                  <term>CUMIPMT</term>
                  <description>CHISQ.DIST.RT</description>
                </item>
                <item>
                  <term>CUMPRINC</term>
                  <description>CHISQ.INV</description>
                </item>
                <item>
                  <term>ERF</term>
                  <description>CHISQ.INV.RT</description>
                </item>
                <item>
                  <term>ERFC</term>
                  <description>CHISQ.TEST</description>
                </item>
                <item>
                  <term>EXPONDIST</term>
                  <description>CONFIDENCE.NORM</description>
                </item>
                <item>
                  <term>FDIST</term>
                  <description>CONFIDENCE.T</description>
                </item>
                <item>
                  <term>FINV</term>
                  <description>COVAR</description>
                </item>
                <item>
                  <term>FTEST</term>
                  <description>COVARIANCE.P</description>
                </item>
                <item>
                  <term>GAMMADIST</term>
                  <description>COVARIANCE.S</description>
                </item>
                <item>
                  <term>GAMMALN</term>
                  <description>ERF.PRECISE</description>
                </item>
                <item>
                  <term>GAMMINV</term>
                  <description>ERFC.PRECISE</description>
                </item>
                <item>
                  <term>HYPGEOMDIST</term>
                  <description>EXPON.DIST</description>
                </item>
                <item>
                  <term>IPMT</term>
                  <description>F.DIST</description>
                </item>
                <item>
                  <term>IRR</term>
                  <description>F.DIST.RT</description>
                </item>
                <item>
                  <term>LOGINV</term>
                  <description>F.INV</description>
                </item>
                <item>
                  <term>LOGNORMDIST</term>
                  <description>F.INV.RT</description>
                </item>
                <item>
                  <term>NEGBINOMDIST</term>
                  <description>F.TEST</description>
                </item>
                <item>
                  <term>NORMDIST</term>
                  <description>FLOOR</description>
                </item>
                <item>
                  <term>NORMINV</term>
                  <description>FLOOR.PRECISE</description>
                </item>
                <item>
                  <term>NORMSDIST</term>
                  <description>GAMMA.DIST</description>
                </item>
                <item>
                  <term>NORMSINV</term>
                  <description>GAMMA.INV</description>
                </item>
                <item>
                  <term>PMT</term>
                  <description>GAMMALN.PRECISE</description>
                </item>
                <item>
                  <term>POISSON</term>
                  <description>HYPGEOM.DIST</description>
                </item>
                <item>
                  <term>PPMT</term>
                  <description>ISO.CEILING</description>
                </item>
                <item>
                  <term>STDEV</term>
                  <description>LOGNORM.DIST</description>
                </item>
                <item>
                  <term>STDEVP</term>
                  <description>LOGNORM.INV</description>
                </item>
                <item>
                  <term>TDIST</term>
                  <description>MOD</description>
                </item>
                <item>
                  <term>TINV</term>
                  <description>MODE</description>
                </item>
                <item>
                  <term>TTEST</term>
                  <description>MODE.MULT</description>
                </item>
                <item>
                  <term>VAR</term>
                  <description>MODE.SNGL</description>
                </item>
                <item>
                  <term>VARA</term>
                  <description>NEGBINOM.DIST</description>
                </item>
                <item>
                  <term>VARP</term>
                  <description>NETWORKDAYS.INTL</description>
                </item>
                <item>
                  <term>VARPA</term>
                  <description>NORM.DIST</description>
                </item>
                <item>
                  <term>WEIBULL</term>
                  <description>NORM.INV</description>
                </item>
                <item>
                  <term>XIRR</term>
                  <description>NORM.S.DIST</description>
                </item>
                <item>
                  <term>ZTEST</term>
                  <description>NORM.S.INV</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.INC</description>
                </item>
                <item>
                  <term />
                  <description>POISSON.DIST</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>RANK</description>
                </item>
                <item>
                  <term />
                  <description>RANK.AVG</description>
                </item>
                <item>
                  <term />
                  <description>RANK.EQ</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.P</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.S</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.INV</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.TEST</description>
                </item>
                <item>
                  <term />
                  <description>VAR.P</description>
                </item>
                <item>
                  <term />
                  <description>VAR.S</description>
                </item>
                <item>
                  <term />
                  <description>WEEKDAY</description>
                </item>
                <item>
                  <term />
                  <description>WEEKNUM</description>
                </item>
                <item>
                  <term />
                  <description>WEIBULL.DIST</description>
                </item>
                <item>
                  <term />
                  <description>WORKDAY.INTL</description>
                </item>
                <item>
                  <term />
                  <description>Z.TEST</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-123">Activa la primera ventana asociada al libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-123">Activates the first window associated with the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-124">No ejecuta ninguna macro Auto_activar o Auto_desactivar que esté adjunta al libro (use el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> (método) para ejecutar macros).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-124">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-125">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa el gráfico activo (un gráfico incrustado o una hoja de gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-125">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="4f9e5-126">Un gráfico incrustado se considera activo cuando está seleccionado o activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-126">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="4f9e5-127">Cuando no hay ningún gráfico está activo, esta propiedad devuelve <b>Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-127">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-128">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-129">
            <para>Si no se especifica un calificador de objeto, esta propiedad devuelve el gráfico activo del libro activo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-129">
              <para>If you don't specify an object qualifier, this property returns the active chart in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-130">Devuelve un objeto object que representa la hoja activa (la hoja en la parte superior) en el libro activo o en la ventana especificada o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-131">Devuelve <b>Nothing</b> si no está hoja activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
          <span data-ttu-id="4f9e5-132">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-132">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-133">
            <para>Si no se especifica un calificador de objeto, esta propiedad devuelve la hoja activa del libro activo.</para>
            <para>Si un libro aparece en más de una ventana, el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> propiedad puede ser diferente en ventanas diferentes.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-133">
              <para>If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</para>
              <para>If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-134">Obtiene un objeto object que representa al segmentador activo en el libro activo o en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-134">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-135">Un objeto object que representa al segmentador activo en el libro activo o en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-135">An object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-136">
            <para>Devuelve una referencia nula (Nothing en Visual Basic) si no hay segmentación de datos está activa.</para>
            <para>De sólo lectura.</para>
            <para>Si no se especifica un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> de objeto, esta propiedad devuelve la segmentación de datos activo del libro activo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-136">
              <para>Returns a null reference (Nothing in Visual Basic) if no slicer is active.</para>
              <para>Read-only.</para>
              <para>If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-137">Agrega un acceso directo en el libro o un hipervínculo a la carpeta Favoritos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-137">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-138">Cuando se usa sin un calificador de objeto, esta propiedad devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-138">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="4f9e5-139">Cuando se usa con un calificador de objeto, esta propiedad devuelve un objeto <b>Application</b> que representa el creador del objeto especificado (puede usar esta propiedad con un objeto de automatización OLE para devolver la aplicación de ese objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-139">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="4f9e5-140">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-140">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-141">Nombre del tema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-141">Name of the theme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-142">Aplica el tema especificado al libro actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-142">Applies the specified theme to the current workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p110">Devuelve o establece el autor del comentario. Valor <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p110">Returns or sets the author of the comment. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-145">Devuelve <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-145">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="4f9e5-146">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-146">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="4f9e5-147">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-147">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="4f9e5-148">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-148">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-149">Devuelve o establece el número de minutos entre actualizaciones automáticas del libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-149">Returns or sets the number of minutes between automatic updates to the shared workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-150">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-150">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-151">
            <para>La propiedad <b>AutoUpdateFrequency</b> debe establecerse en un valor de 5 a 1.440 para esta propiedad surta efecto.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-151">
              <para>The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p112">
            <b>True</b> si los cambios actuales del libro compartido se envían a otros usuarios cada vez que el libro se actualiza automáticamente. <b>False</b> si los cambios no se exponen (el libro seguirá sincronizado con los cambios que efectúen otros usuarios). El valor predeterminado es <b>True</b>. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p112">
              <b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-156">
            <para>El <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> (propiedad) se debe establecer en un valor de 5 a 1.440 para esta propiedad surta efecto.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-156">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-157">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-157">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-158">Nombre del vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-158">The name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="4f9e5-159">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-159">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="4f9e5-160">Tipo de vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-160">The type of link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-161">Convierte en valores las fórmulas vinculadas a otros orígenes de Microsoft Excel u orígenes OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-161">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-162">Devuelve un <see cref="T:Microsoft.Office.Core.DocumentProperties" /> colección que representa todas las propiedades integradas del documento para el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-162">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-163">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-163">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-164">
            <para>Esta propiedad devuelve la colección completa de propiedades de documento integradas. Usar el <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> método para devolver un solo miembro de la colección (un <see cref="T:Microsoft.Office.Core.DocumentProperty" /> objeto) especificando el nombre de la propiedad o el índice de la colección (como un número).</para>
            <para>Puede hacer referencia a las propiedades de documento por su valor de índice o por nombre. En la siguiente lista muestra el documento integrado disponible los nombres de propiedad:</para>
            <para>plantilla</para>
            <para>título </para>
            <para>asunto</para>
            <para>autor</para>
            <para>palabras clave</para>
            <para>comentarios</para>
            <para>Último autor</para>
            <para>Número de revisión</para>
            <para> Nombre de la aplicación</para>
            <para>última fecha de impresión</para>
            <para>fecha de creación </para>
            <para>se guardó por última vez</para>
            <para>Total de tiempo de edición</para>
            <para>el número de páginas de</para>
            <para>número de palabras</para>
            <para>número de caracteres</para>
            <para>seguridad</para>
            <para> Categoría</para>
            <para>formato</para>
            <para>Administrador de</para>
            <para>empresa</para>
            <para>número de Bytes</para>
            <para>número de líneas de</para>
            <para>número de párrafos</para>
            <para>número de diapositivas</para>
            <para>número de notas de</para>
            <para>número de diapositivas ocultas</para>
            <para>Los Clips de número de Multimedia</para>
            <para>Base de hipervínculo</para>
            <para>Número de caracteres (con espacios)</para> Las aplicaciones contenedoras 
          <para>no es necesario que define los valores para cada propiedad de documento integrada. Si Microsoft Excel no define un valor para una de las propiedades de documento integradas, leer el <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> propiedad de ese documento produce un error.</para><para>El método <b>Item</b> es el método predeterminado para la colección <b>DocumentProperties</b> .</para><para>Usar el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> (propiedad) para devolver la colección de propiedades de documento personalizadas.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-164">
              <para>This property returns the entire collection of built-in document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>You can refer to document properties either by index value or by name. The following list shows the available built-in document property names:</para>
              <para>Title </para>
              <para>Subject</para>
              <para>Author</para>
              <para>Keywords</para>
              <para>Comments</para>
              <para>Template</para>
              <para>Last Author</para>
              <para>Revision Number</para>
              <para>Application Name</para>
              <para>Last Print Date</para>
              <para>Creation Date </para>
              <para>Last Save Time</para>
              <para>Total Editing Time</para>
              <para>Number of Pages</para>
              <para>Number of Words</para>
              <para>Number of Characters</para>
              <para>Security</para>
              <para>Category</para>
              <para>Format</para>
              <para>Manager</para>
              <para>Company</para>
              <para>Number of Bytes</para>
              <para>Number of Lines</para>
              <para>Number of Paragraphs</para>
              <para>Number of Slides</para>
              <para>Number of Notes</para>
              <para>Number of Hidden Slides</para>
              <para>Number of Multimedia Clips</para>
              <para>Hyperlink Base</para>
              <para>Number of Characters (with spaces)</para>
              <para>Container applications aren’t required to define values for every built-in document property. If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-165">Devuelve un número cuyos últimos cuatro dígitos son el número de versión del motor de cálculo secundario y los demás dígitos (a la izquierda) son la versión principal de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-165">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
          <span data-ttu-id="4f9e5-166">Para una <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> de objeto, esta propiedad devuelve la información acerca de la versión de Excel que se actualizó totalmente y por última vez el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-166">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span>
          </span>
          <span data-ttu-id="4f9e5-167">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-167">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-168">
            <para>Si el libro se guardó en una versión anterior de Excel y, si el libro no se ha actualizado totalmente, esta propiedad devuelve 0.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-168">
              <para>If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-169">
            <b>True</b> si Microsoft Excel puede proteger un libro especificado a un servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-169">
              <b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-170">
            <b>True</b> si el libro se distingue entre mayúsculas y minúsculas al comparar el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-170">
              <b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span>
          </span>
          <span data-ttu-id="4f9e5-171">Sólo lectura <b>Boolean</b> (<b>bool</b> en C#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-171">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">
          <span data-ttu-id="4f9e5-172">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-172">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          </span>
          <span data-ttu-id="4f9e5-173">Especifica el nuevo modo de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-173">Specifies the new access mode.</span>
          </span>
        </param>
        <param name="WritePassword">
          <span data-ttu-id="4f9e5-174">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-175">Especifica la contraseña contra escritura si el archivo está protegido contra escritura y <paramref name="Mode" /> tiene el <b>valor xlReadWrite</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-175">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-176">Se omite si no hay ninguna contraseña para el archivo o si <paramref name="Mode" /> tiene el <b>valor xlReadOnly</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-176">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="4f9e5-177">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-177">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-178">
            <b>True</b> (o se omite) para notificar al usuario si el acceso inmediato al archivo no es posible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-178">
              <b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-p121">Cambia los permisos de acceso al libro. Esto puede requerir que se cargue una versión actualizada desde el disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p121">Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-181">
            <para>Si tiene un archivo abierto en modo de sólo lectura, no tiene acceso exclusivo al archivo. Si cambia un archivo de sólo lectura a lectura y escritura, Microsoft Excel debe cargar una nueva copia del archivo para asegurarse de que no se realizaron cambios mientras el archivo estaba abierto como de sólo lectura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-181">
              <para>If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-182">Devuelve o establece el número de días que se muestran en el historial de cambios del libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-182">Returns or sets the number of days shown in the shared workbook's change history.</span>
          </span>
          <span data-ttu-id="4f9e5-183">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-183">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-184">
            <para>Los cambios del historial anteriores al valor de esta propiedad se quitan cuando se cierra el libro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-184">
              <para>Any changes in the change history older than the setting for this property are removed when the workbook is closed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-185">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-185">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-186">El nombre del vínculo de Microsoft Excel o DDE/OLE que debe cambiar, tal como lo devuelve el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> (método).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-186">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="NewName">
          <span data-ttu-id="4f9e5-187">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-187">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-188">Nuevo nombre del vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-188">The new name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="4f9e5-189">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-189">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="4f9e5-190">Tipo de vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-190">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-191">Cambia un vínculo de un documento a otro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-191">Changes a link from one document to another.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-192">
            <b>True</b> hará que todos los gráficos en el documento actual para realizar un seguimiento de los datos reales de punto de datos al que está asociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-192">
              <b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span>
          </span>
          <span data-ttu-id="4f9e5-193">
            <b>False</b> se restablecerá el índice del punto de datos de seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-193">
              <b>False</b> will revert back to tracking the index of the data point.</span>
          </span>
          <span data-ttu-id="4f9e5-194">
            <b>Boolean</b> (<b>bool</b> en C#) Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-194">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-195">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de gráficos del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-195">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-196">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-196">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-197">
            <para>Usa esta propiedad sin un calificador de objeto devuelve todas las hojas del libro activo de gráfico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-197">
              <para>Using this property without an object qualifier returns all chart sheets in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-198">Controla si el Comprobador de compatibilidad se ejecuta automáticamente cuando se guarda el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-198">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span>
          </span>
          <span data-ttu-id="4f9e5-199">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-199">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-200">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-200">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="4f9e5-201">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-202">
            <b>True</b> guarda los cambios y protege el documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-202">
              <b>True</b> saves changes and checks in the document.</span>
          </span>
          <span data-ttu-id="4f9e5-203">
            <b>False</b> devuelve el documento a un estado de protección sin guardar la revisión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-203">
              <b>False</b> returns the document to a checked-in status without saving revision.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="4f9e5-204">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-204">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-205">Permite al usuario incluir comentarios de protección para la revisión del libro que se está protegiendo (sólo se aplica si <paramref name="SaveChanges" /> es igual a <b>True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-205">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="4f9e5-206">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-207">
            <b>True</b> permite al usuario publicar el libro después de haberlo protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-207">
              <b>True</b> allows the user to publish the workbook after it has been checked in.</span>
          </span>
          <span data-ttu-id="4f9e5-208">Esto envía el libro al proceso de aprobación, que puede acabar en una versión del libro se publique para usuarios con derechos de sólo lectura en el libro (sólo se aplica si <paramref name="SaveChanges" /> es igual a <b>True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-208">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-209">Devuelve un libro desde un equipo local a un servidor y establece el libro local como de solo lectura para que no pueda modificarse localmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-209">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
          <span data-ttu-id="4f9e5-210">Llamar a este método, también se cerrará el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-210">Calling this method will also close the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="4f9e5-211">
            <b>true</b> para guardar el libro en la ubicación del servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-211">
              <b>true</b> to save the workbook to the server location.</span>
          </span>
          <span data-ttu-id="4f9e5-212">El valor predeterminado es <b>true</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-212">The default is <b>true</b>.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="4f9e5-213">Comentarios para la revisión del libro que se está protegiendo (sólo se aplica si <paramref name="SaveChanges" /> está establecida en <b>true</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-213">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="4f9e5-214">
            <b>true</b> para permitir que el usuario publique el libro después de haberlo protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-214">
              <b>true</b> to allow the user to publish the workbook after it is checked in.</span>
          </span>
        </param>
        <param name="VersionType">
          <span data-ttu-id="4f9e5-215">Especifica información sobre versiones para el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-215">Specifies versioning information for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-216">Guarda un libro de un equipo local a un servidor y establece el libro local como de solo lectura para que no pueda modificarse localmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-216">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-217">
            <para>Configuración de la <paramref name="MakePublic" /> parámetro en <b>true</b> envía el libro al proceso de aprobación, que puede acabar en una versión del libro se publique para usuarios con derechos de sólo lectura en el libro (sólo se aplica si <paramref name="SaveChanges" /> está establecida en true <b></b>). </para>
            <para>Para aprovechar las características de colaboración integradas en Microsoft Excel, los documentos deben almacenarse en Microsoft SharePoint Server.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-217">
              <para>Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>). </para>
              <para>To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="4f9e5-218">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-218">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-219">Si no hay ningún cambio en el libro, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-219">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="4f9e5-220">Si hay cambios en el libro y el libro aparece en otras ventanas abiertas, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-220">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="4f9e5-221">Si hay cambios en el libro, pero el libro no aparece en todas las ventanas abiertas, este argumento especifica si se deben guardar los cambios, tal como se muestra en la siguiente tabla. ValueAction<b>True</b>guarda los cambios en el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-221">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-222">Si aún no tiene un nombre de archivo asociado con el libro y, a continuación, <paramref name="FileName" /> se usa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-222">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="4f9e5-223">Si <paramref name="FileName" /> es se omite, el usuario se le pide que proporcione un nombre de archivo. <b>False</b> No guardar los cambios a este archivo. OmittedDisplays un cuadro de diálogo que le pregunta al usuario si desea guardar los cambios o no.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-223">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="4f9e5-224">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-225">Guarda los cambios bajo este nombre de archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-225">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="4f9e5-226">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-227">Si el libro no necesita redirigirse al siguiente destinatario (si no tiene ninguna lista de distribución o ya se ha distribuido), se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-227">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="4f9e5-228">De lo contrario, Microsoft Excel distribuye el libro como se muestra en la siguiente tabla. ValueMeaning<b>True</b>envía el libro al siguiente destinatario. <b>False</b> No envía el libro. OmittedDisplays un cuadro de diálogo que pregunta al usuario si se debe enviar el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-228">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-229">Cierra el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-229">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-230">
            <para>Cerrar un libro mediante el método <b>Close</b> no ejecuta ninguna macro Auto_Close en el libro. Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> método para ejecutar la macro Auto_Close.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-230">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-231">Devuelve el nombre de código para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-231">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="4f9e5-232">
            <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-232">Read-only <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-233">El valor que se ve en la celda a la derecha de <b>(nombre)</b> en la ventana Propiedades es el nombre de código del objeto seleccionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-233">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
          </span>
          <span data-ttu-id="4f9e5-234">En tiempo de diseño, puede cambiar el nombre de código de un objeto cambiando este valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-234">At design time, you can change the code name of an object by changing this value.</span>
          </span>
          <span data-ttu-id="4f9e5-235">No se puede cambiar mediante programación esta propiedad en tiempo de ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-235">You cannot programmatically change this property at run time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-236">
            <para>Se puede usar el nombre de código para un objeto en lugar de una expresión que devuelve el objeto.</para>
            <para>Es posible que el nombre de la hoja que sea distinto del nombre de código. Cuando se crea una hoja, el nombre de la hoja y el nombre de código son los mismos, pero al cambiar el nombre de hoja no cambia el nombre de código, y cambiar el nombre de código (utilizando la ventana Propiedades en el Editor de Visual Basic) no cambia el nombre de la hoja.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-236">
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4f9e5-237">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-238">El número de color (de 1 a 56).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-238">The color number (from 1 to 56).</span>
          </span>
          <span data-ttu-id="4f9e5-239">Si no se especifica este argumento, este método devuelve una matriz que contiene todos los 56 colores de la paleta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-239">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-240">Devuelve o establece los colores de la paleta del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-240">Returns or sets colors in the palette for the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-241">La paleta tiene 56 entradas, cada uno de ellos representado por un valor RGB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-241">The palette has 56 entries, each represented by an RGB value.</span>
          </span>
          <span data-ttu-id="4f9e5-242">Lectura/Escritura <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-242">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-243">Devuelve un <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object que representa las barras de comandos de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-243">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span>
          </span>
          <span data-ttu-id="4f9e5-244">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-244">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-245">
            <para>Cuando un libro está incrustado en otra aplicación y activado por el usuario haciendo doble clic en el libro, el uso de esta propiedad con un objeto <b>Workbook</b> devuelve el conjunto de barras de comandos de Microsoft Excel disponibles en la otra aplicación. En todos los otros momentos, el uso de esta propiedad con un objeto <b>Workbook</b> devuelve <b>Nothing</b>.</para>
            <para>No hay ninguna forma programática para devolver el conjunto de barras de comandos asociado a un libro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-245">
              <para>When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application. At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</para>
              <para>There is no programmatic way to return the set of command bars attached to a workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-246">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> colección que representa todos los comentarios de la hoja de cálculo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-246">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="4f9e5-247">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-247">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-248">Devuelve <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-248">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="4f9e5-249">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-249">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="4f9e5-250">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-250">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="4f9e5-251">
            <para>En este ejemplo se eliminan todos los comentarios agregados por Jean Selva en la hoja activa.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-251">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-252">Devuelve o establece los conflictos de forma deben estar resuelto siempre que se actualiza un libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-252">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span>
          </span>
          <span data-ttu-id="4f9e5-253">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-253">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-254">El <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> (propiedad) establece una conexión entre el libro y un ODBC o un origen de datos OLEDB y actualiza los datos sin preguntar al usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-254">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span>
          </span>
          <span data-ttu-id="4f9e5-255">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-255">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p144">Deshabilita las conexiones externas o los vínculos del libro. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p144">Disables the external connections or links in the workbook. Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-258">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-258">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p145">Devuelve el objeto que representa la aplicación contenedora del objeto OLE especificado. <b>Object</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p145">Returns the object that represents the container application for the specified OLE object. Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-261">
            <para>Esta propiedad proporciona una manera de tener acceso al modelo de objetos de la aplicación contenedora si un libro de Excel se abre dentro de una aplicación host como Microsoft Internet Explorer.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-261">
              <para>This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-262">Devuelve un <see cref="T:Microsoft.Office.Core.MetaProperties" /> colección que describe los metadatos almacenados en el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-262">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-263">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-263">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-264">
            <b>MetaProperties</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-264">
              <b>MetaProperties</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p147">
            <b>True</b> si se crea un archivo de copia de seguridad al guardar el archivo. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p147">
              <b>True</b> if a backup file is created when this file is saved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-267">Devuelve una constante en el <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> (enumeración) que indica la aplicación en la que se creó este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-267">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="4f9e5-268">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-268">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="4f9e5-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-270">Propiedad de <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-270">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-271">Devuelve o establece un <see cref="T:Microsoft.Office.Core.DocumentProperties" /> colección que representa todas las propiedades de documento personalizadas del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-271">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-272">
            <para>Esta propiedad devuelve la colección completa de propiedades de documento personalizadas. Usar el <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> método para devolver un solo miembro de la colección (un <see cref="T:Microsoft.Office.Core.DocumentProperty" /> objeto) especificando el nombre de la propiedad o el índice de la colección (como un número).</para>
            <para>El método <b>Item</b> es el método predeterminado para la colección <b>DocumentProperties</b> .</para>
            <para>Usar el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> (propiedad) para devolver la colección de propiedades de documento integradas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-272">
              <para>This property returns the entire collection of custom document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-273">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> colección que representa todas las vistas personalizadas para el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-274">Devuelve una.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-274">Returns a.</span>
          </span>
          <span data-ttu-id="4f9e5-275">
            <see cref="T:Microsoft.Office.Core.CustomXMLParts" />colección que representa el código XML personalizado en el almacén de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-275">
              <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span>
          </span>
          <span data-ttu-id="4f9e5-276">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-276">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-277">
            <b>CustomXMLParts</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-277">
              <b>CustomXMLParts</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p150">
            <b>True</b> si el libro usa el sistema de fechas 1904. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p150">
              <b>True</b> if the workbook uses the 1904 date system. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-280">Especifica el estilo de tabla de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> colección que se utiliza como el estilo predeterminado para las tablas dinámicas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-280">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span>
          </span>
          <span data-ttu-id="4f9e5-281">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-281">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-282">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-282">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-283">Obtiene o establece el estilo de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objeto que se utiliza como el estilo predeterminado para las segmentaciones de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-283">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-284">El estilo de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objeto que se utiliza como el estilo predeterminado para las segmentaciones de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-284">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-285">
            <para>Lectura y escritura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-285">
              <para>Read/write.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-286">Especifica el estilo de tabla de la <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> colección que se utiliza como TableStyle predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-286">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span>
          </span>
          <span data-ttu-id="4f9e5-287">Es de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-287">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-288">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-288">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-289">El nombre del estilo de segmentación de datos predeterminado del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-289">The name of the default slicer style of the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-290">
            <b>Objeto</b> (<b>objeto</b> en C#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-290">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="4f9e5-291">Lectura y escritura</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-291">Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">
          <span data-ttu-id="4f9e5-292">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-292">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-293">Asigna un nombre al formato numérico que se debe eliminar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-293">Names the number format to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-294">Elimina del libro un formato numérico personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-294">Deletes a custom number format from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-295">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-295">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-296">Devuelve o establece cómo se muestran las formas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-296">Returns or sets how shapes are displayed.</span>
          </span>
          <span data-ttu-id="4f9e5-297">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-297">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-298">
            <para>Puede ser una de las siguientes constantes XlDisplayDrawingObjects.</para>
            <list type="table">
              <item>
                <term>
                  <paramref name="xlDisplayShapes" />
                </term>Mostrar todas las formas.
            </item>
              <item>
                <term>
                  <paramref name="xlPlaceholders" />
                </term>Mostrar sólo los marcadores de posición.
            </item>
              <item>
                <term>
                  <paramref name="xlHide" />
                </term>Ocultar todas las formas.
            </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-298">
              <para>Can be one of the following XlDisplayDrawingObjects constants.</para>
              <list type="table">
                <item>
                  <term>
                    <paramref name="xlDisplayShapes" />
                  </term>
                  <description>Show all shapes.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlPlaceholders" />
                  </term>
                  <description>Show only placeholders.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlHide" />
                  </term>
                  <description>Hide all shapes.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p156">Valor de tipo <b>Boolean</b> que determina si se muestran comentarios manuscritos en el libro. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p156">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-301">Devuelve un <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> colección que representa los módulos de Inspector de documento para el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-301">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-302">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-302">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-303">
            <b>DocumentInspectors</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-303">
              <b>DocumentInspectors</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-304">Devuelve un <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> colección que representa la colección de versiones de un libro compartido que tiene habilitado el control de versiones y está almacenado en una biblioteca de documentos en un servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-304">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-305">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-305">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-306">Devuelve o establece si el usuario se debe pedir para convertir el libro si el libro contiene características que no son compatibles con versiones de Excel anteriores a short_Excel2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-306">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span>
          </span>
          <span data-ttu-id="4f9e5-307">Es de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-307">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-308">Booleano</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-308">Boolean</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-309">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-309">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-310">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-310">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p159">Guarda los archivos modificados (de cualquier formato) a intervalos regulares. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p159">Saves changed files, of all formats, on a timed interval. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-313">Se produce un error <para>si Microsoft Excel, se produce un error de sistema, o si el sistema se cierra incorrectamente (no permitir que Excel guarde los archivos cambiados), se abren los archivos de copia de seguridad y el usuario tiene una oportunidad para guardar los cambios que de lo contrario se habrían perdidos. Cuando el usuario reinicia Excel, se abre una ventana de recuperación de documentos, que ofrece al usuario una opción para recuperar los archivos que estaban trabajando. Al establecer esta propiedad en <b>True</b> (valor predeterminado) habilita esta característica.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-313">
              <para>If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost. When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on. Setting this property to <b>True</b> (default) enables this feature.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-314">El <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> (método) permite a los programadores habilitar conexiones de datos en el libro para el usuario mediante programación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-314">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-315">Devuelve una <b>cadena</b> que especifica el nombre del proveedor del algoritmo de cifrado que utiliza 1st_Excel12 para cifrar los documentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-315">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span>
          </span>
          <span data-ttu-id="4f9e5-316">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-316">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-317">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-317">
              <b>s</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-318">Termina una revisión de un archivo que se ha enviado para revisar usando el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> (método).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-318">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p161">
            <b>True</b> si tanto el encabezado de la composición de correo electrónico como la barra de herramientas de sobre están visibles. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p161">
              <b>True</b> if the e-mail composition header and the envelope toolbar are both visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-321">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de macros internacionales de Microsoft Excel 4.0 en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-321">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-322">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-322">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-323">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de macro de Microsoft Excel 4.0 en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-324">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-324">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-325">El <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> propiedad proporciona a los programadores una manera de comprobar si el libro está en modo de compatibilidad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-325">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span>
          </span>
          <span data-ttu-id="4f9e5-326">Solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-326">Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-327">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-327">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-328">
            <para>En modo de compatibilidad, ciertas funciones está deshabilitada o funciona de manera diferente.  Por ejemplo, en short_Excel2007 hay más filas y columnas disponibles con respecto a las versiones anteriores de Excel. También está disponible en short_Excel2007 el sistema de referencias estructuradas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-328">
              <para>In compatibility mode, certain functionality is disabled or functions differently.  For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel. Also structured referencing is available in short_Excel2007.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-329">Asigna al usuario actual acceso exclusivo al libro que está abierto como una lista compartida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-329">Assigns the current user exclusive access to the workbook that's open as a shared list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="4f9e5-330">
            <para>El método <b>ExclusiveAccess</b> guarda todos los cambios realizados en el libro y solicita a los otros usuarios que tienen el libro que guarden sus cambios en otro archivo.</para>
            <para>Si el libro especificado no está abierto como una lista compartida, este método se produce un error. Para determinar si un libro está abierto como una lista compartida, use la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> (propiedad).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-330">
              <para>The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</para>
              <para>If the specified workbook isn't open as a shared list, this method fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4f9e5-331">Puede ser cualquiera <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> o <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-331">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="4f9e5-332">Una <b>cadena</b> que indica el nombre del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-332">A <b>String</b> that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="4f9e5-333">Puede incluir una ruta de acceso completa o short.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-333">You can include a full path or short.</span>
          </span>
          <span data-ttu-id="4f9e5-334">Excel2007 guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-334">Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="4f9e5-335">Se puede establecer en <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> o <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-335">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="4f9e5-336">Establecer en <b>True</b> para indicar ese documento propiedades deben incluirse o se establece en <b>False</b> para indicar que se deben omitir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-336">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="4f9e5-337">Si establece en <b>True</b>, se pasa por alto las áreas de impresión establecidas al publicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-337">If set to <b>True</b>, ignores any print areas set when publishing.</span>
          </span>
          <span data-ttu-id="4f9e5-338">Si establece en <b>False</b>, se usarán las áreas de impresión establecidas al publicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-338">If set to <b>False</b>, will use the print areas set when publishing.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="4f9e5-p167">Número de la página en la que comienza la publicación. Si no se especifica este argumento, la publicación empieza por el principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p167">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="4f9e5-p168">Número de la última página que se va a publicar. Si no se especifica este argumento, la publicación finaliza en la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p168">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="4f9e5-343">Si se establece en <b>True</b> muestra el archivo en el Visor de después de que se publique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-343">If set to <b>True</b> displays file in viewer after it is published.</span>
          </span>
          <span data-ttu-id="4f9e5-344">Si se establece en <b>False</b> el archivo se publica pero no se muestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-344">If set to <b>False</b> the file is published but not displayed.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="4f9e5-345">Puntero a la clase <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-345">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-346">El <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método se utiliza para publicar un libro en formato PDF o XPS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-346">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="4f9e5-347">
            <para>En el ejemplo siguiente se crea el PDF con la calidad estándar en el directorio del archivo actual y muestra el archivo en el visor una vez que se publique.</para>
            <para>
              <b>Nota</b>: se producirá un error si el complemento PDF no está instalado actualmente.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-347">
              <para>The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</para>
              <para>
                <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-348">Devuelve el formato de archivo y el tipo del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-348">Returns the file format and/or type of the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-350">
            <para>Algunas de estas constantes no estén disponibles, según la compatibilidad con el idioma que haya seleccionado o instalado (por ejemplo, inglés, Estados Unidos).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-350">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-351">Devuelve o establece un <b>valor Boolean</b> que indica si un libro es final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-351">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span>
          </span>
          <span data-ttu-id="4f9e5-352">Es de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-352">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-353">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-353">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-354">
            <para>Estableciendo el valor en <b>True</b> se marca el libro como final, notifica a los destinatarios (si hay alguno) que el libro es final y establece el libro como de solo lectura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-354">
              <para>Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="4f9e5-355">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-355">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-356">Dirección del documento de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-356">The address of the target document.</span>
          </span>
        </param>
        <param name="SubAddress">
          <span data-ttu-id="4f9e5-357">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-358">Ubicación dentro del documento de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-358">The location within the target document.</span>
          </span>
          <span data-ttu-id="4f9e5-359">El valor predeterminado es una cadena vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-359">The default value is the empty string.</span>
          </span>
        </param>
        <param name="NewWindow">
          <span data-ttu-id="4f9e5-360">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-361">
            <b>True</b> para mostrar la aplicación de destino en una nueva ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-361">
              <b>True</b> to display the target application in a new window.</span>
          </span>
          <span data-ttu-id="4f9e5-362">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-362">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AddHistory">
          <span data-ttu-id="4f9e5-363">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-363">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-364">No se usa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-364">Not used.</span>
          </span>
          <span data-ttu-id="4f9e5-365">Reservado para uso posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-365">Reserved for future use.</span>
          </span>
        </param>
        <param name="ExtraInfo">
          <span data-ttu-id="4f9e5-366">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-367">Una cadena o matriz de bytes que especifica información adicional para HTTP va a utilizar para resolver el hipervínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-367">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span>
          </span>
          <span data-ttu-id="4f9e5-368">Por ejemplo, puede usar <paramref name="ExtraInfo" /> para especificar las coordenadas de un mapa de imagen, el contenido de un formulario o un nombre de archivo FAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-368">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span>
          </span>
        </param>
        <param name="Method">
          <span data-ttu-id="4f9e5-369">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-369">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-370">Especifica la forma en que <paramref name="ExtraInfo" /> está unido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-370">Specifies the way <paramref name="ExtraInfo" /> is attached.</span>
          </span>
          <span data-ttu-id="4f9e5-371">Puede ser una de las <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-371">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span>
          </span>
        </param>
        <param name="HeaderInfo">
          <span data-ttu-id="4f9e5-372">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-372">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-373">Cadena que especifica la información de encabezado de la solicitud HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-373">A string that specifies header information for the HTTP request.</span>
          </span>
          <span data-ttu-id="4f9e5-374">El valor predeterminado es una cadena vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-374">The default value is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-375">Muestra un documento almacenado en caché si ya se ha descargado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-375">Displays a cached document if it’s already been downloaded.</span>
          </span>
          <span data-ttu-id="4f9e5-376">De lo contrario, este método resuelve el hipervínculo, descarga el documento de destino y muestra el documento en la aplicación correspondiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-376">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-377">Fuerza un cálculo completo de un libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-377">Forces a full calculation of a workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-378">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-378">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-379">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-379">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p181">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p181">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p182">Devuelve el nombre del objeto, incluida su ruta de acceso en el disco, en forma de cadena. <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p182">Returns the name of the object, including its path on disk, as a string. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-384">
            <para>Esta propiedad es equivalente a la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> propiedad, seguida por el separador actual del sistema de archivos, seguido por el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> (propiedad).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-384">
              <para>This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p183">Devuelve un valor de tipo <b>String</b> que indica el nombre del objeto, incluida su ruta de acceso en el disco, en forma de cadena. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p183">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-387">Devuelve la colección de <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objetos para el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-387">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-388">Devuelve la colección de <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objetos para el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-388">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-389">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-389">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p184">
            <b>True</b> si el libro está protegido con una contraseña. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p184">
              <b>True</b> if the workbook has a protection password. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-392">
            <para>Puede asignar una contraseña de protección a un libro mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-392">
              <para>You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p185">
            <b>True</b> si el libro tiene una lista de distribución. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p185">
              <b>True</b> if the workbook has a routing slip. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-395">
            <para>Al establecer esta propiedad en <b>True</b> , crea una lista de distribución con valores predeterminados. Si se establece la propiedad en <b>False</b> elimina la lista de distribución.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-395">
              <para>Setting this property to <b>True</b> creates a routing slip with default values. Setting the property to <b>False</b> deletes the routing slip.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-396">Devuelve un <b>valor Boolean</b> que representa si un libro tiene un adjunto Microsoft proyecto Visual Basic para aplicaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-396">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span>
          </span>
          <span data-ttu-id="4f9e5-397">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-397">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-398">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-398">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-399">
            <para>Esta propiedad es más útil para determinar mediante programación si un libro debe guardarse en un formato de archivo habilitado para macros. Si se guarda en otro formato, se pueden perder las macros y proyectos de código contenidos en el documento.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-399">
              <para>This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p187">
            <b>True</b> si los cambios realizados en el libro compartido se resaltan en la pantalla. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p187">
              <b>True</b> if changes to the shared workbook are highlighted on-screen. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="4f9e5-402">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-403">Los cambios que se muestran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-403">The changes that are shown.</span>
          </span>
          <span data-ttu-id="4f9e5-404">Puede ser una de las siguientes constantes <b>XlHighlightChangesTime</b> : <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>o <b>xlNotYetReviewed</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-404">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="4f9e5-405">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-406">El usuario o usuarios cuyos cambios se muestran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-406">The user or users whose changes are shown.</span>
          </span>
          <span data-ttu-id="4f9e5-407">Puede ser "Todos", "Todos excepto yo" o el nombre de uno de los usuarios del libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-407">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="4f9e5-408">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-409">Una referencia a un rango, en estilo A1, que especifica el área cuyos cambios se tendrán en cuenta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-409">An A1-style range reference that specifies the area to check for changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-410">Controla cómo se muestran los cambios en un libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-410">Controls how changes are shown in a shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-411">Devuelve el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> objeto en el libro especificado, que representa una rama de proyecto de nivel superior, como se muestra en el Explorador de proyectos en el Editor de secuencias de comandos de Microsoft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-411">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span>
          </span>
          <span data-ttu-id="4f9e5-412">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-412">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-413">Esta propiedad se usa para filtrar los datos de un libro basándose en un icono de celda de la <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-413">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          </span>
          <span data-ttu-id="4f9e5-414">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-414">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-415">
            <b>IconSets</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-415">
              <b>IconSets</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p193">Valor <b>Boolean</b> que especifica si se muestran los bordes de lista cuando no está activa una lista. Devuelve <b>True</b> si se ven los bordes. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p193">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Returns <b>True</b> if the border is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-419">
            <para>Al establecer esta propiedad afectará a todas las listas que se encuentran en la hoja de cálculo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-419">
              <para>Setting this property will affect all the lists that are on the worksheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p194">
            <b>True</b> si el libro se está ejecutando como complemento. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p194">
              <b>True</b> if the workbook is running as an add-in. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-422">
            <para>Cuando se establece esta propiedad en <b>True</b>, el libro tiene las siguientes características:</para>
            <list type="bullet">
              <item>
                <description>no se le pida que guarde el libro si se realizan cambios mientras el libro está abierto.</description>
              </item>
              <item>
                <description>La ventana del libro no serán visible.</description>
              </item>
              <item>
                <description>Las macros del libro no serán visibles en el cuadro de diálogo Macro (que se muestra seleccionando Macro en el menú Herramientas y haciendo clic en Macros).</description>
              </item>
              <item>
                <description>Macros del libro pueden aún se pueden ejecutar desde el cuadro de diálogo Macro, aunque no estén visibles. Además, los nombres de macro no es necesario que calificarse con el nombre del libro.</description>
              </item>
              <item>
                <description>Manteniendo presionada la tecla MAYÚS al abrir el libro no tiene ningún efecto.</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-422">
              <para>When you set this property to <b>True</b>, the workbook has the following characteristics:</para>
              <list type="bullet">
                <item>
                  <description>You won’t be prompted to save the workbook if changes are made while the workbook is open.</description>
                </item>
                <item>
                  <description>The workbook window won’t be visible.</description>
                </item>
                <item>
                  <description>Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</description>
                </item>
                <item>
                  <description>Macros in the workbook can still be run from the Macro dialog box even though they’re not visible. In addition, macro names don’t need to be qualified with the workbook name.</description>
                </item>
                <item>
                  <description>Holding down the SHIFT key when you open the workbook has no effect.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p195">
            <b>True</b> si se está modificando el libro especificado en el sitio. <b>False</b> si el libro se ha abierto en Microsoft Excel para su modificación. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p195">
              <b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p196">
            <b>True</b> si el control de cambios está habilitado en el libro compartido. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p196">
              <b>True</b> if change tracking is enabled for the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-428">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-428">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-429">
            <b>String</b> opcional. </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-429">Optional <b>String</b>.</span>
          </span>
        </param>
        <param name="LinkInfo">
          <span data-ttu-id="4f9e5-430">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-430">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          </span>
          <span data-ttu-id="4f9e5-431">Tipo de información que se ha de devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-431">The type of information to be returned.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="4f9e5-432">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-432">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          </span>
          <span data-ttu-id="4f9e5-433">El tipo de vínculo para devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-433">The type of link to return.</span>
          </span>
        </param>
        <param name="EditionRef">
          <span data-ttu-id="4f9e5-434">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-434">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-435">Si el vínculo es una edición, este argumento especifica la referencia de edición como una cadena con el estilo F1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-435">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span>
          </span>
          <span data-ttu-id="4f9e5-436">Este argumento es obligatorio si hay más de un publicador o suscriptor con el mismo nombre en el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-436">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-437">Devuelve información acerca de la fecha y el estado de actualización del vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-437">Returns the link date and update status.</span>
          </span>
          <span data-ttu-id="4f9e5-438">
            <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-438">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4f9e5-439">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-439">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="4f9e5-440">El tipo de vínculo para devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-440">The type of link to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-441">Devuelve una matriz de vínculos en el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-441">Returns an array of links in the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-442">Los nombres de la matriz son los nombres de los documentos vinculados, ediciones o servidores DDE u OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-442">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span>
          </span>
          <span data-ttu-id="4f9e5-443">Devuelve <b>Empty</b> si no hay ningún vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-443">Returns <b>Empty</b> if there are no links.</span>
          </span>
          <span data-ttu-id="4f9e5-444">
            <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-444">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="4f9e5-445">
            <para>El formato de la matriz es una matriz unidimensional para todos los tipos de pero publicador y el suscriptor. Las cadenas devueltas contienen el nombre del origen del vínculo, en la notación apropiada para el tipo de vínculo. Por ejemplo, use los vínculos de DDE el "Server | ¡Documento! Elemento"sintaxis.</para>
            <para>Para los vínculos de publicador y el suscriptor, la matriz devuelta es bidimensional. La primera columna de la matriz contiene los nombres de la edición y la segunda columna contiene las referencias de las ediciones como texto.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-445">
              <para>The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</para>
              <para>For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p203">
            <b>True</b> si los cambios realizados en el libro compartido se muestran en una hoja de cálculo distinta. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p203">
              <b>True</b> if changes to the shared workbook are shown on a separate worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-448">Bloquea el libro en el servidor para impedir su modificación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-448">Locks the workbook on the server to prevent modification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p204">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p204">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-451">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-451">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-452">Nombre de archivo del libro que contiene los cambios que se combinarán en el libro abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-452">The file name of the workbook that contains the changes to be merged into the open workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-453">Combina los cambios de un libro en un libro abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-453">Merges changes from one workbook into an open workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-454">Devuelve el nivel superior <see cref="T:Microsoft.Office.Interop.Excel.Model" /> objeto que es el modelo de datos uno para el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-454">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-455">Solo lectura</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-455">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-456">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-456">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p207">
            <b>True</b> si el libro está abierto como una lista compartida. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p207">
              <b>True</b> if the workbook is open as a shared list. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-459">
            <para>Para guardar un libro como una lista compartida, use la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método). Para cambiar el libro del modo compartido al modo exclusivo, use la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> método.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-459">
              <para>To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method. To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p208">Devuelve el nombre del objeto. Sólo lectura de la <b>cadena</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p208">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-462">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Names" /> colección que representa todos los nombres del libro especificado (incluidos todos los nombres específicos de hoja de cálculo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-462">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span>
          </span>
          <span data-ttu-id="4f9e5-463">Objeto <b>Names</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-463">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-464">Crea una ventana nueva o una copia de la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-464">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-465">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-465">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-466">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-466">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-467">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-467">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-468">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-468">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-469">El nombre del vínculo de Microsoft Excel o DDE/OLE, tal como lo devuelve el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> (método).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-469">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="4f9e5-470">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-471">
            <b>True</b> para abrir documentos como de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-471">
              <b>True</b> to open documents as read-only.</span>
          </span>
          <span data-ttu-id="4f9e5-472">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-472">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="4f9e5-473">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-473">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="4f9e5-474">Tipo de vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-474">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-475">Abre los documentos auxiliares de uno o más vínculos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-475">Opens the supporting documents for a link or links.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p213">Devuelve el objeto primario correspondiente al objeto especificado. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p213">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p214">Devuelve o establece la contraseña que deberá escribirse para abrir el libro especificado. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p214">Returns or sets the password that must be supplied to open the specified workbook. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-480">Contraseñas de <para>uso seguro que combinan mayúsculas y minúsculas letras, números y símbolos. Las contraseñas no seguras no combinan estos elementos. Contraseña segura: Y6dh! et5. Contraseña débil: House27. Usar una contraseña segura que pueda recordar para no tener que apuntarla.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-480">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p215">Devuelve un valor de tipo <b>String</b> que indica el algoritmo que usa Microsoft Excel para cifrar las contraseñas del libro especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p215">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-483">
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> (método) para especificar si Excel cifrará las propiedades de archivo para los libros protegidos con contraseña.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-483">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p216">
            <b>True</b> si Microsoft Excel cifra las propiedades de archivo del libro especificado protegido con contraseña. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p216">
              <b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-486">
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> (método) para especificar si Excel cifrará las propiedades de archivo para el libro especificado protegido con contraseña.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-486">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-487">Devuelve un <b>entero</b> que indica la longitud de la clave del algoritmo que utiliza Microsoft Excel para cifrar las contraseñas del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-487">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-488">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-488">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-489">
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> (método) para especificar si Excel cifrará las propiedades de archivo para el libro especificado protegido con contraseña.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-489">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p218">Devuelve un valor de tipo <b>String</b> que especifica el nombre del proveedor del algoritmo de cifrado que usa Microsoft Excel para cifrar las contraseñas del libro especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p218">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-492">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-492">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-493">Devuelve la ruta de acceso completa a la aplicación, con excepción del separador final y nombre de la aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-493">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
          <span data-ttu-id="4f9e5-494">
            <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-494">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-495">Devuelve un <see cref="T:Microsoft.Office.Core.Permission" /> object que representa la configuración de permisos en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-495">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p220">
            <b>True</b> si se incluyen valores de filtro y ordenación en la vista personal del usuario del libro compartido. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p220">
              <b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p221">
            <b>True</b> si se incluyen parámetros de impresión en la vista personal del usuario del libro compartido. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p221">
              <b>True</b> if print settings are included in the user's personal view of the shared workbook. Read-write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-500">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> almacena en memoria caché en la colección que representa todos los de la tabla dinámica del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-500">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-501">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-501">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-502">Devuelve un objeto object que representa una colección de todos los de la tabla dinámica informes en una hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-502">Returns an object that represents a collection of all the PivotTable reports on a worksheet.</span>
          </span>
          <span data-ttu-id="4f9e5-503">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-503">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-504">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-504">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName">
          <span data-ttu-id="4f9e5-505">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-506">Este argumento se omite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-506">This argument is ignored.</span>
          </span>
          <span data-ttu-id="4f9e5-507">El método <b>Post</b> pide al usuario que especifique el destino para el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-507">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-p225">Envía el libro especificado a una carpeta pública. Este método sólo está disponible en un cliente de Microsoft Exchange que esté conectado con un servidor de Microsoft Exchange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p225">Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p226">
            <b>True</b> si los cálculos de este libro se llevan a cabo con la misma precisión con que se muestran los números. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p226">
              <b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="4f9e5-512">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-513">El número de la página en la que se va a iniciar la impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-513">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="4f9e5-514">Si se omite este argumento, la impresión comienza al principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-514">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="4f9e5-515">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-516">El número de la última página a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-516">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="4f9e5-517">Si se omite este argumento, la impresión finaliza con la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-517">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="4f9e5-518">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-519">El número de copias que se va a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-519">The number of copies to print.</span>
          </span>
          <span data-ttu-id="4f9e5-520">Si se omite este argumento, se imprime una copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-520">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="4f9e5-521">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-522">
            <b>True</b> para que Microsoft Excel invoque la vista preliminar antes de imprimir el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-522">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="4f9e5-523">
            <b>False</b> (o se omite) para imprimir el objeto inmediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-523">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="4f9e5-524">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-524">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-525">Establece el nombre de la impresora activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-525">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="4f9e5-526">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-527">
            <b>True</b> para imprimir en un archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-527">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="4f9e5-528">Si <paramref name="PrToFileName" /> no se especifica, Microsoft Excel solicita al usuario que escriba el nombre del archivo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-528">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="4f9e5-529">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-529">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-530">
            <b>True</b> para intercalar múltiples copias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-530">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="4f9e5-531">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-532">Si <paramref name="PrintToFile" /> está establecida en <b>True</b>, este argumento especifica el nombre del archivo que desea imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-532">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-533">Imprime el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-533">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-534">
            <para>"Páginas" en las descripciones de <paramref name="From" /> y <paramref name="To" /> hace referencia a las páginas impresas, no general de páginas de la hoja o libro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-534">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-535">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-535">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="4f9e5-536">Permite que los cambios realizados en el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-536">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-537">Muestra una vista preliminar del objeto tal como aparecería impreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-537">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="4f9e5-538">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-538">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-539">Una cadena que especifica una contraseña entre mayúsculas y minúsculas para la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-539">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-540">Si se omite este argumento, puede desproteger la hoja de cálculo o el libro sin utilizar una contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-540">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="4f9e5-541">De lo contrario, debe especificar la contraseña para desproteger la hoja de cálculo o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-541">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-542">Si olvida la contraseña, no puede desproteger la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-542">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-543">Es una buena idea para mantener una lista de las contraseñas y sus nombres de documento correspondientes en un lugar seguro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-543">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="Structure">
          <span data-ttu-id="4f9e5-544">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-544">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-545">
            <b>True</b> para proteger la estructura del libro (la posición relativa de las hojas).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-545">
              <b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span>
          </span>
          <span data-ttu-id="4f9e5-546">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-546">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Windows">
          <span data-ttu-id="4f9e5-547">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-547">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-548">
            <b>True</b> para proteger las ventanas del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-548">
              <b>True</b> to protect the workbook windows.</span>
          </span>
          <span data-ttu-id="4f9e5-549">Si se omite este argumento, no están protegidas las ventanas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-549">If this argument is omitted, the windows aren’t protected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-550">Protege un libro para que no se pueda modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-550">Protects a workbook so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-551">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-552">Una cadena que indica el nombre del archivo guardado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-552">A string indicating the name of the saved file.</span>
          </span>
          <span data-ttu-id="4f9e5-553">Puede incluir una ruta de acceso completa; Si no lo hace, Microsoft Excel guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-553">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="4f9e5-554">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-555">Una cadena entre mayúsculas y minúsculas, que indica la contraseña de protección que se proporcionará al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-555">A case-sensitive string indicating the protection password to be given to the file.</span>
          </span>
          <span data-ttu-id="4f9e5-556">Debe tener no más de 15 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-556">Should be no longer than 15 characters.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="4f9e5-557">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-558">Una cadena que indica la contraseña contra escritura de este archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-558">A string indicating the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="4f9e5-559">Si se guarda un archivo con la contraseña y la contraseña no se proporciona cuando se abre el archivo, se abre el archivo como de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-559">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="4f9e5-560">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-560">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-561">
            <b>True</b> para mostrar un mensaje cuando se abre el archivo, recomendando que se abra el archivo como de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-561">
              <b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="4f9e5-562">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-562">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-563">
            <b>True</b> para crear un archivo de copia de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-563">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="4f9e5-564">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-564">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-565">Cadena que indica la contraseña que impedirá que el archivo sea compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-565">A string indicating the password to be used to protect the file for sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-566">Guarda el libro y establece una contraseña que impide que sea compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-566">Saves the workbook and protects it for sharing.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-567">Contraseñas de <para>uso seguro que combinan mayúsculas y minúsculas letras, números y símbolos. Las contraseñas no seguras no combinan estos elementos. Contraseña segura: Y6dh! et5. Contraseña débil: House27. Usar una contraseña segura que pueda recordar para no tener que apuntarla.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-567">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-568">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-568">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p244">
            <b>True</b> si el orden de las hojas del libro está protegido. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p244">
              <b>True</b> if the order of the sheets in the workbook is protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p245">
            <b>True</b> si las ventanas del libro están protegidas. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p245">
              <b>True</b> if the windows of the workbook are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-573">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-573">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          </span>
          <span data-ttu-id="4f9e5-574">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-574">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">
          <span data-ttu-id="4f9e5-575">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-575">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-576">Número de días que se mantendrán los cambios en el registro de cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-576">The number of days that changes in the change log are to be retained.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="4f9e5-577">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-577">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-578">La contraseña que desprotege el libro para compartir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-578">The password that unprotects the workbook for sharing.</span>
          </span>
          <span data-ttu-id="4f9e5-579">Si el libro está protegido para compartir con una contraseña y se omite este argumento, se pide al usuario la contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-579">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-580">Quita las entradas del registro de cambios del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-580">Removes entries from the change log for the specified workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p249">Devuelve <b>True</b> si el objeto se ha abierto como de solo lectura. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p249">Returns <b>True</b> if the object has been opened as read-only. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-583">
            <para>Esta propiedad se utiliza únicamente para las listas vinculadas a un sitio de SharePoint.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-583">
              <para>This property is used only for lists that are linked to a SharePoint site.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p250">
            <b>True</b> si el libro se guardó como recomendado de solo lectura. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p250">
              <b>True</b> if the workbook was saved as read-only recommended. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-586">
            <para>Al abrir un libro que se ha guardado como de sólo lectura recomendado, Microsoft Excel muestra un mensaje que recomienda abrir el libro como de solo lectura.</para>
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para cambiar esta propiedad.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-586">
              <para>When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</para>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-587">Hace que se producen, una verificación de etiqueta inteligente de primer plano automáticamente las anotaciones realizadas en los datos que no se comentaron anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-587">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-588">Actualiza todos los rangos de datos externos y los informes de tabla dinámica del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-588">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-589">
            <para>Objetos que tengan la <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> propiedad establecida en <b>True</b> se actualizan en segundo plano.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-589">
              <para>Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="4f9e5-590">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-590">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-591">Especifica cuándo se rechazan todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-591">Specifies when all the changes are rejected.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="4f9e5-592">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-592">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-593">Especifica quién rechaza todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-593">Specifies by whom all the changes are rejected.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="4f9e5-594">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-594">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-595">Especifica dónde se rechazan todos los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-595">Specifies where all the changes are rejected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-596">Rechaza todos los cambios del libro compartido especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-596">Rejects all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">
          <span data-ttu-id="4f9e5-597">Requiere <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-597">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          </span>
          <span data-ttu-id="4f9e5-598">Codificación que se va a aplicar al libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-598">The encoding that is to be applied to the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-599">Vuelve a cargar un libro basado en un documento HTML utilizando la codificación de documentos especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-599">Reloads a workbook based on an HTML document, using the specified document encoding.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-600">
            <para>Sólo las constantes <b>msoEncoding</b> que son aplicables a HTML funcionan con el método <b>ReloadAs</b> .</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-600">
              <para>Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">
          <span data-ttu-id="4f9e5-601">Uno de los <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> valores que indica el tipo de información que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-601">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-602">Quita del libro toda la información del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-602">Removes all information of the specified type from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p255">
            <b>True</b> si es posible eliminar información personal del libro especificado. El valor predeterminado es <b>False</b>. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p255">
              <b>True</b> if personal information can be removed from the specified workbook. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4f9e5-606">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-606">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-607">El índice de usuarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-607">The user index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-608">Desconecta al usuario especificado del libro compartido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-608">Disconnects the specified user from the shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p257">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p257">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p258">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p258">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage">
          <span data-ttu-id="4f9e5-613">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-614">
            <b>False</b> no muestra el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-614">
              <b>False</b> does not display the message.</span>
          </span>
          <span data-ttu-id="4f9e5-615">
            <b>True</b> muestra el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-615">
              <b>True</b> displays the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-616">Envía un mensaje de correo electrónico al autor de un libro que se ha enviado para su revisión, en el que se le comunica que el revisor ha terminado de revisar el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-616">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-617">Uso de <para>el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> (método) para iniciar una revisión de colaboración de un libro. Si el método <b>ReplyWithChanges</b> se ejecuta en un libro que no forma parte de un ciclo de revisión en colaboración, el usuario recibirá un error.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-617">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook. If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-618">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object que representa el servicio de referencia de un libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-619">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-619">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-620">
            <b>Research</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-620">
              <b>Research</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-621">Restablece los colores predeterminados de la paleta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-621">Resets the color palette to the default colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-622">Devuelve el número de veces que se ha guardado el libro mientras está abierto como una lista compartida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-622">Returns the number of times the workbook has been saved while open as a shared list.</span>
          </span>
          <span data-ttu-id="4f9e5-623">Si el libro está abierto en modo exclusivo, esta propiedad devuelve 0 (cero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-623">If the workbook is open in exclusive mode, this property returns 0 (zero).</span>
          </span>
          <span data-ttu-id="4f9e5-624">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-624">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-625">
            <para>Se actualiza la propiedad <b>RevisionNumber</b> sólo cuando se guarda la copia local del libro, no cuando se guarden copias remotas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-625">
              <para>The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-626">Distribuye el libro usando la lista de distribución activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-626">Routes the workbook, using the workbook's current routing slip.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-627">
            <para>Enrutamiento un libro establece la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> propiedad en <b>True</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-627">
              <para>Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p262">
            <b>True</b> si el libro se ha distribuido al siguiente destinatario. <b>False</b> si se debe distribuir el libro. <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p262">
              <b>True</b> if the workbook has been routed to the next recipient. <b>False</b> if the workbook needs to be routed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-631">
            <para>Si el libro no se distribuyó al destinatario actual, esta propiedad es siempre <b>False</b> (por ejemplo, si el documento no tiene ninguna lista de distribución, o si el enrutamiento de una lista de distribución se acaba de crear).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-631">
              <para>If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-632">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object que representa la lista de distribución para el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-632">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-633">Lectura de esta propiedad si no hay ninguna lista de distribución, producirá un error (Compruebe el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> propiedad primera).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-633">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span>
          </span>
          <span data-ttu-id="4f9e5-634">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-634">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">
          <span data-ttu-id="4f9e5-635">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-635">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-636">Ejecuta la macro Auto_Open, Auto_Close, Auto_Activate o Auto_Deactivate adjunta al libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-636">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-637">Este método se incluye para la compatibilidad con versiones anteriores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-637">This method is included for backward compatibility.</span>
          </span>
          <span data-ttu-id="4f9e5-638">Debe usar el Open, Close, Activate y Deactivate (eventos) en lugar de estas macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-638">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-639">Guarda los cambios del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-639">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-640">
            <para>Para abrir un archivo de libro, use la <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método.</para>
            <para>Para marcar un libro como guardado sin escribirlo en un disco, defina su <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> propiedad en <b>True</b>.</para>
            <para>La primera vez que guarde un libro, use el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para especificar un nombre para el archivo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-640">
              <para>To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</para>
              <para>The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-641">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-642">Una cadena que indica el nombre del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-642">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="4f9e5-643">Puede incluir una ruta de acceso completa; Si no lo hace, Microsoft Excel guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-643">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="4f9e5-644">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-644">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-645">El formato de archivo que se utilizará al guardar el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-645">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="4f9e5-646">Para obtener una lista de opciones válidas, vea el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-646">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="4f9e5-647">Para un archivo existente, el formato predeterminado es el último formato de archivo especificado; para un nuevo archivo, el valor predeterminado es el formato de la versión de Excel que se utiliza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-647">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="4f9e5-648">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-648">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-649">Cadena que distingue entre mayúsculas y minúsculas (no más de 15 caracteres) y que indica que se aplicará la protección con contraseña al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-649">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="4f9e5-650">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-651">Una cadena que indica la contraseña contra escritura de este archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-651">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="4f9e5-652">Si se guarda un archivo con la contraseña y la contraseña no se proporciona cuando se abre el archivo, se abre el archivo como de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-652">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="4f9e5-653">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-653">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-654">
            <b>True</b> para mostrar un mensaje cuando se abre el archivo, recomendando que se abra el archivo como de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-654">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="4f9e5-655">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-655">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-656">
            <b>True</b> para crear un archivo de copia de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-656">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AccessMode">
          <span data-ttu-id="4f9e5-657">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-657">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          </span>
        </param>
        <param name="ConflictResolution">
          <span data-ttu-id="4f9e5-658">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="4f9e5-659">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-659">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-660">
            <b>True</b> para agregar este libro a la lista de archivos utilizados recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-660">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="4f9e5-661">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-661">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="4f9e5-662">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-662">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-663">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-663">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="4f9e5-664">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-665">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-665">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="4f9e5-666">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-666">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-667">
            <b>True</b> guarda los archivos en el idioma de Microsoft Excel (incluyendo la configuración del panel de control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-667">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="4f9e5-668">
            <b>False</b> (valor predeterminado) guarda los archivos en el lenguaje de Visual Basic para aplicaciones (VBA) (que normalmente es inglés de Estados Unidos, a menos que el proyecto VBA donde se ejecuta Workbooks.Open desde un proyecto de VBA XL5/95 internacionalizado anterior).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-668">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-669">Guarda los cambios del libro en un archivo diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-669">Saves changes to the workbook in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-670">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-670">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-671">Una cadena que indica el nombre del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-671">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="4f9e5-672">Puede incluir una ruta de acceso completa; Si no lo hace, Microsoft Excel guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-672">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="4f9e5-673">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-673">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="4f9e5-674">Asignación de esquema que se va a aplicar a los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-674">The schema map to apply to the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-675">Exporta a un archivo de datos XML los datos asignados a la asignación de esquema XML especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-675">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-676">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para>Este método se producirá un error en tiempo de ejecución si Excel no puede exportar los datos con la asignación de esquema especificada. Para comprobar si Excel puede usar la asignación de esquema especificada para exportar datos, use la <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> (propiedad).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-676">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>This method will result in a run-time error if Excel cannot export data with the specified schema map. To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4f9e5-677">Obligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-677">Required.</span>
          </span>
          <span data-ttu-id="4f9e5-678">Especifica el nombre de archivo de la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-678">Specifies the file name for the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-679">Guarda una copia del libro en un archivo pero no modifica el libro abierto en la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-679">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p278">
            <b>True</b> si no se han efectuado cambios en el libro especificado desde la última vez que se guardó. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p278">
              <b>True</b> if no changes have been made to the specified workbook since it was last saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-682">
            <para>Si un libro no se ha guardado nunca, su <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> propiedad devuelve una cadena vacía ("").</para>
            <para>Puede establecer esta propiedad en <b>True</b> si desea cerrar un libro modificado sin guardarlo o que se le pedirá que guarde it.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-682">
              <para>If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</para>
              <para>You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p279">
            <b>True</b> si Microsoft Excel guarda los valores de los vínculos externos junto con el libro. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p279">
              <b>True</b> if Microsoft Excel saves external link values with the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="4f9e5-685">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-685">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="4f9e5-686">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-686">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-687">Una cadena que representa los números de fax y direcciones de correo electrónico de las personas a quienes se van a enviar el fax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-687">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span>
          </span>
          <span data-ttu-id="4f9e5-688">Separe a varios destinatarios mediante un punto y coma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-688">Separate multiple recipients with a semicolon.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="4f9e5-689">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-690">Una cadena que representa la línea de asunto para el documento enviada por fax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-690">A string that represents the subject line for the faxed document.</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="4f9e5-691">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-691">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-692">
            <b>True</b> muestra el mensaje de fax antes de enviarlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-692">
              <b>True</b> displays the fax message before sending it.</span>
          </span>
          <span data-ttu-id="4f9e5-693">
            <b>False</b> envía el fax sin mostrar el mensaje de fax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-693">
              <b>False</b> sends the fax without displaying the fax message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-694">Envía una hoja de cálculo como fax a los destinatarios especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-694">Sends a worksheet as a fax to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-695">
            <para>El método <b>SendFaxOverInternet</b> requiere que el servicio de fax esté habilitado en el equipo del usuario.</para>
            <para>El formato utilizado para especificar números de fax en el <paramref name="Recipients" /> parámetro es <paramref name="recipientsfaxnumber@usersfaxprovider" /> o <paramref name="recipientsname@recipientsfaxnumber" />. Puede tener acceso a la información de proveedor de fax del usuario mediante la siguiente ruta del registro:</para>
            <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
            <para>Use el valor de la clave FaxAddress en esta ruta de acceso del registro para determinar la formato que se utilizará para un destinatario.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-695">
              <para>Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</para>
              <para>The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />. You can access the user's fax provider information using the following registry path:</para>
              <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
              <para>Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="4f9e5-696">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-697">Una cadena que muestra las personas a quienes se debe enviar el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-697">A string that lists the people to whom to send the message.</span>
          </span>
          <span data-ttu-id="4f9e5-698">Pueden ser nombres no resueltos y alias de una libreta de teléfonos de correo electrónico o direcciones de correo electrónico completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-698">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span>
          </span>
          <span data-ttu-id="4f9e5-699">Separe a varios destinatarios mediante un punto y coma (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-699">Separate multiple recipients with a semicolon (;).</span>
          </span>
          <span data-ttu-id="4f9e5-700">Si se deja en blanco y <paramref name="ShowMessage" /> es <b>False</b>, recibirá un mensaje de error y no se enviará el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-700">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="4f9e5-701">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-701">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-702">Cadena para el asunto del mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-702">A string for the subject of the message.</span>
          </span>
          <span data-ttu-id="4f9e5-703">Si se deja en blanco, el asunto será: Revise "<paramref name="filename" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-703">If left blank, the subject will be: Please review "<paramref name="filename" />".</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="4f9e5-704">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-704">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-705">Un valor <b>booleano</b> que indica si se debe mostrar el mensaje cuando se ejecuta el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-705">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span>
          </span>
          <span data-ttu-id="4f9e5-706">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-706">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-707">Si se establece en <b>False</b>, el mensaje se envía automáticamente a los destinatarios sin antes mostrar el mensaje al remitente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-707">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span>
          </span>
        </param>
        <param name="IncludeAttachment">
          <span data-ttu-id="4f9e5-708">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-708">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-709">Un valor <b>booleano</b> que indica si el mensaje debe incluir datos adjuntos o un vínculo a una ubicación de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-709">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span>
          </span>
          <span data-ttu-id="4f9e5-710">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-710">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-711">Si se establece en <b>False</b>, el documento debe guardarse en una ubicación compartida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-711">If set to <b>False</b>, the document must be stored at a shared location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-712">Envía un libro en un mensaje de correo electrónico para su revisión a los destinatarios especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-712">Sends a workbook in an e-mail message for review to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-713">
            <para>La <b>SendForReview</b> (método) inicia un ciclo de revisión en colaboración. Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> método para finalizar un ciclo de revisión.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-713">
              <para>The <b>SendForReview</b> method starts a collaborative review cycle. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="4f9e5-714">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-714">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-715">Especifica el nombre del destinatario como texto o como una matriz de cadenas de texto si hay varios destinatarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-715">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span>
          </span>
          <span data-ttu-id="4f9e5-716">Debe especificarse al menos un destinatario, y todos los destinatarios se agregan como destinatarios para.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-716">At least one recipient must be specified, and all recipients are added as To recipients.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="4f9e5-717">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-718">Especifica al asunto del mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-718">Specifies the subject of the message.</span>
          </span>
          <span data-ttu-id="4f9e5-719">Si se omite este argumento, se usa el nombre del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-719">If this argument is omitted, the document name is used.</span>
          </span>
        </param>
        <param name="ReturnReceipt">
          <span data-ttu-id="4f9e5-720">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-720">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-721">
            <b>True</b> para solicitar acuse de recibo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-721">
              <b>True</b> to request a return receipt.</span>
          </span>
          <span data-ttu-id="4f9e5-722">
            <b>False</b> para no solicitar acuse de recibo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-722">
              <b>False</b> not to request a return receipt.</span>
          </span>
          <span data-ttu-id="4f9e5-723">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-723">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-724">Envía el libro usando el sistema de correo que esté instalado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-724">Sends the workbook by using the installed mail system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">
          <span data-ttu-id="4f9e5-725">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-725">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Priority">
          <span data-ttu-id="4f9e5-726">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-726">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-p290">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p290">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-729">Devuelve un <see cref="T:Microsoft.Office.Core.ServerPolicy" /> objeto que representa una directiva especificada para un libro almacenado en un servidor que ejecuta 2nd_OSS_NoVersion 2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-729">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span>
          </span>
          <span data-ttu-id="4f9e5-730">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-730">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-731">
            <b>ServerPolicy</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-731">
              <b>ServerPolicy</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p292">Permite a los programadores interaccionar con la lista de objetos publicados del libro que se muestran en el servidor. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p292">Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-734">
            <para>Esta propiedad devuelve una colección de los elementos que se pueden publicar en servicios de Excel.  Puede incluir tablas, tablas dinámicas, rangos con nombre y los gráficos.  También puede contener hojas siempre y cuando no es una combinación de hojas y la demás elementos mencionados antes.  </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-734">
              <para>This property returns a collection of the items that could be published to Excel Services.  It can include Tables, PivotTables, Named Ranges, and Charts.  It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.  </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-735">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-735">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-736">El nombre del vínculo DDE/OLE, tal como lo devuelve el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> (método).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-736">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="4f9e5-737">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-737">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-738">El nombre del procedimiento que se ejecuta cuando se actualiza el vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-738">The name of the procedure to be run when the link is updated.</span>
          </span>
          <span data-ttu-id="4f9e5-739">Esto puede ser una macro de Microsoft Excel 4.0 o un procedimiento de Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-739">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span>
          </span>
          <span data-ttu-id="4f9e5-740">Establezca este argumento en una cadena vacía ("") para indicar que no se debe ejecutar ningún procedimiento cuando el vínculo se actualizará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-740">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-741">Establece el nombre de un procedimiento que se ejecutará cada vez que se actualice un vínculo DDE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-741">Sets the name of a procedure that runs whenever a DDE link is updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider">
          <span data-ttu-id="4f9e5-742">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-742">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-743">Cadena (se distingue entre mayúsculas y minúsculas) del proveedor del cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-743">A case sensitive string of the encryption provider.</span>
          </span>
        </param>
        <param name="PasswordEncryptionAlgorithm">
          <span data-ttu-id="4f9e5-744">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-744">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-745">Cadena (se distingue entre mayúsculas y minúsculas) del nombre corto del algoritmo (es decir, "RC4").</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-745">A case sensitive string of the algorithmic short name (i.e. "RC4").</span>
          </span>
        </param>
        <param name="PasswordEncryptionKeyLength">
          <span data-ttu-id="4f9e5-746">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-746">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-747">Longitud de la clave de cifrado, que debe ser múltiplo de 8 (40 o más).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-747">The encryption key length which is a multiple of 8 (40 or greater).</span>
          </span>
        </param>
        <param name="PasswordEncryptionFileProperties">
          <span data-ttu-id="4f9e5-748">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-748">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-749">
            <b>True</b> (valor predeterminado) para cifrar las propiedades del archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-749">
              <b>True</b> (default) to encrypt file properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-750">Establece las opciones para cifrar libros utilizando contraseñas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-750">Sets the options for encrypting workbooks using passwords.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-751">
            <para>El <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, y <paramref name="PasswordEncryptionKeyLength" /> los argumentos no son independientes entre sí. Un proveedor de cifrado seleccionado limita el conjunto de algoritmos y la longitud de la clave que se puede elegir.</para>
            <para>Para el <paramref name="PasswordEncryptionKeyLength" /> no es de argumento no existe ningún límite inherente en el intervalo de la longitud de clave. El intervalo está determinado por el proveedor de servicios criptográficos que también determina el algoritmo de cifrado.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-751">
              <para>The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other. A selected encryption provider limits the set of algorithms and key length that can be chosen.</para>
              <para>For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length. The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-752">Devuelve un <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object que representa el área de documentos en la que se encuentra un documento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-752">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span>
          </span>
          <span data-ttu-id="4f9e5-753">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-753">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-754">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-754">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-755">Objeto <b>Sheets</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-755">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p301">
            <b>True</b> si la hoja de cálculo Historial de conflictos está visible en el libro abierto como una lista compartida. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p301">
              <b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-758">
            <para>Si el libro especificado no está abierto como una lista compartida, esta propiedad se produce un error. Para determinar si un libro está abierto como una lista compartida, use la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> (propiedad).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-758">
              <para>If the specified workbook isn't open as a shared list, this property fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-759">Esta propiedad controla la visibilidad del panel de filtro de gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-759">This property controls the visibility of the PivotChart Filter Pane.</span>
          </span>
          <span data-ttu-id="4f9e5-760">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-760">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-761">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-761">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-762">
            <para>Esta propiedad controla la visibilidad del panel de filtros del gráfico dinámico (se alterna activado/desactivado).  En orden para que esté visible, se debe seleccionar un objeto de <b>gráfico dinámico</b> . </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-762">
              <para>This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).  In order for it to be visible, a <b>PivotChart</b> object must be selected. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p303">
            <b>True</b> (valor predeterminado) si se puede mostrar la lista de campos de la tabla dinámica. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p303">
              <b>True</b> (default) if the PivotTable field list can be shown. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p304">Devuelve las firmas digitales de un libro. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p304">Returns the digital signatures for a workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SignatureSet" />
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-767">
            <para>Para firmar los libros Excel2007 digitalmente y comprobar otras firmas en ellas, necesitará Microsoft CryptoAPI y un certificado de firma digital único. CryptoAPI se instala con Microsoft Internet Explorer 4.01 o posterior. Puede obtener un certificado de firma digital de una entidad de certificación. </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-767">
              <para>To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate. The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later. You can obtain a digital signature certificate from a certification authority. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-768">Obtiene el <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> objeto asociado con el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-768">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f9e5-769">El <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> objeto asociado con el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-769">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-770">
            <para>Lectura y escritura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-770">
              <para>Read/write.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-771">Devuelve un <see cref="T:Microsoft.Office.Core.SmartDocument" /> object que representa la configuración de una solución de documento inteligente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-771">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span>
          </span>
          <span data-ttu-id="4f9e5-772">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-772">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-773">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> objeto que representa las opciones que se pueden realizar con una etiqueta inteligente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-773">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-774">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> colección que representa todos los estilos del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-775">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-775">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-776">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-776">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-777">Devuelve un <see cref="T:Microsoft.Office.Core.Sync" /> objeto que proporciona acceso a los métodos y propiedades de los documentos que forman parte de un área de documentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-777">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-778">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> objeto de colección para el libro actual que hace referencia a los estilos usados en el libro actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-778">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-779">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-779">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
        </value>
        <remarks>
          <span data-ttu-id="4f9e5-780">
            <para>Puede manipular los estilos de tabla devueltos por la propiedad.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-780">
              <para>You can manipulate the table styles returned by the property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p308">
            <b>True</b> si las referencias a datos externos se eliminan cuando el libro se guarda como una plantilla. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p308">
              <b>True</b> if external data references are removed when the workbook is saved as a template. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p309">Devuelve el tema aplicado al libro actual. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p309">Returns the theme applied to the current workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.OfficeTheme" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-785">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-785">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-786">Activa o desactiva el modo diseño de formularios activado o desactivado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-786">Toggles form design mode on or off.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-787">
            <para>Excel cuando está en modo de diseño de formularios, se muestra la barra de herramientas cuadro de controles. Puede usar esta barra de herramientas para insertar controles ActiveX como botones de comando, las barras de desplazamiento y botones de opción. En modo de diseño de formularios, no se ejecutan los procedimientos de eventos, y al hacer clic en un control incrustado, aparecen controladores de tamaño del control.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-787">
              <para>When Excel is in form design mode, the Control Toolbox toolbar is displayed. You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons. In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="4f9e5-788">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-789">Una cadena que representa la contraseña distingue mayúsculas de minúsculas a utilizar para desproteger la hoja o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-789">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-790">Si la hoja o el libro no está protegido con una contraseña, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-790">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="4f9e5-791">Si se omite este argumento en una hoja que está protegida con una contraseña, se le pedirá la contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-791">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="4f9e5-792">Si se omite este argumento para un libro que está protegido con una contraseña, se produce un error en el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-792">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-p311">Elimina la protección de una hoja o de un libro. Este método no tiene efecto si la hoja o el libro no están protegidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p311">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-795">
            <para>Si olvida la contraseña, no puede desproteger la hoja o libro. Es una buena idea para mantener una lista de las contraseñas y sus nombres de documento correspondientes en un lugar seguro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-795">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword">
          <span data-ttu-id="4f9e5-796">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-797">Contraseña del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-797">The workbook password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-798">Desactiva la protección de libro compartido y lo guarda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-798">Turns off protection for sharing and saves the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-799">Contraseñas de <para>uso seguro que combinan mayúsculas y minúsculas letras, números y símbolos. Las contraseñas no seguras no combinan estos elementos. Contraseña segura: Y6dh! et5. Contraseña débil: House27. Usar una contraseña segura que pueda recordar para no tener que apuntarla.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-799">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p313">Actualiza un libro de sólo lectura con la versión del archivo del libro guardada en el disco, si dicha versión es más reciente que la copia actual del libro en la memoria. Si la copia del disco no ha cambiado desde que se cargó el libro, no volverá a cargarse la copia del libro en la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p313">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-802">
            <para>Este método es útil cuando un libro está abierto como de sólo lectura por usuario A y se ha abierto como de lectura y escritura por usuario B. Si el usuario B guarda una versión más reciente del libro en el disco mientras el usuario A tiene el libro abierto, el usuario A no puede obtener la copia actualizada sin cerrar y volver a abrir el libro y perder la configuración de la vista. El método <b>UpdateFromFile</b> actualiza la copia en memoria del libro desde el archivo de disco.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-802">
              <para>This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings. The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4f9e5-803">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-803">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-804">El nombre del vínculo de Microsoft Excel o DDE/OLE que se actualizará, tal como lo devuelve el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> (método).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-804">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="4f9e5-805">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-805">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-806">Actualiza un vínculo (o vínculos) de Microsoft Excel, DDE u OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-806">Updates a Microsoft Excel, DDE, or OLE link (or links).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4f9e5-807">
            <para>Cuando se llama al método <b>UpdateLink</b> sin parámetros, Excel el valor predeterminado es actualizar todos los vínculos de hoja de cálculo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-807">
              <para>When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-808">Devuelve o establece un <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constante que indica la configuración de un libro para actualizar los vínculos OLE incrustados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-808">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span>
          </span>
          <span data-ttu-id="4f9e5-809">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-809">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p316">
            <b>True</b> si Microsoft Excel actualiza las referencias remotas en el libro. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p316">
              <b>True</b> if Microsoft Excel updates remote references in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-812">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-812">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-813">Devuelve una matriz bidimensional, basado en 1 que proporciona información acerca de cada usuario que tiene el libro abierto como una lista compartida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-813">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span>
          </span>
          <span data-ttu-id="4f9e5-814">El primer elemento de la segunda dimensión es el nombre de usuario, el segundo es la fecha y hora en que el usuario abrió el libro por última vez y el tercero es un número que indica el tipo de la lista (1 indica exclusiva y 2 compartida).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-814">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span>
          </span>
          <span data-ttu-id="4f9e5-815">Read-only <b>objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-815">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-816">
            <para>La propiedad <b>UserStatus</b> no devuelve información sobre los usuarios que tienen el libro especificado abierto como de solo lectura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-816">
              <para>The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-817">
            <b>True</b> si el libro usa patrones de búsqueda que coinciden con todo el contenido de una celda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-817">
              <b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span>
          </span>
          <span data-ttu-id="4f9e5-818">Sólo lectura <b>Boolean</b> (<b>bool</b> en C#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-818">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-819">
            <b>True</b> si el libro permite caracteres comodín para las comparaciones de cadena de caracteres y la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-819">
              <b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span>
          </span>
          <span data-ttu-id="4f9e5-820">Sólo lectura <b>Boolean</b> (<b>bool</b> en C#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-820">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p320">
            <b>True</b> si el proyecto de Visual Basic para Aplicaciones del libro especificado se ha firmado digitalmente. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p320">
              <b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p321">Devuelve un objeto <b>VBProject</b> que representa el proyecto de Visual Basic del libro especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p321">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-825">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> colección, que contiene los atributos de libro que Microsoft Excel utilizados cuando se guarda un documento como una página Web o se abre una página Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-825">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span>
          </span>
          <span data-ttu-id="4f9e5-826">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-826">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-827">Muestra una vista previa del libro especificado con el aspecto que tendría si se guardase como página Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-827">Displays a preview of the specified workbook as it would look if saved as a Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-828">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> colección que representa todas las ventanas del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-828">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-829">Objeto <b>Windows</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-829">Read-only <b>Windows</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-830">
            <para>Esta propiedad devuelve una colección de ventanas, tanto visibles como ocultas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-830">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-831">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de cálculo del libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-832">Objeto <b>Sheets</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-832">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-833">
            <para>Uso de esta propiedad sin un calificador de objeto devuelve todas las hojas de cálculo del libro activo.</para>
            <para>Esta propiedad no devuelve hojas de macro; use la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> (propiedad) o el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> (propiedad) para obtener dichas hojas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-833">
              <para>Using this property without an object qualifier returns all the worksheets in the active workbook.</para>
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p325">Devuelve o establece un valor de tipo <b>String</b> para la contraseña de escritura de un libro. Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p325">Returns or sets a <b>String</b> for the write password of a workbook. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p326">
            <b>True</b> si el libro está protegido contra escritura. <b>Boolean</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p326">
              <b>True</b> if the workbook is write-reserved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-838">
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para establecer esta propiedad.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-838">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-p327">Devuelve el nombre del usuario que actualmente tiene permiso de escritura en el libro. <b>String</b> de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-p327">Returns the name of the user who currently has write permission for the workbook. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="4f9e5-841">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-841">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-842">Un localizador uniforme de recursos (URL) o una ruta de acceso UNC (convención) nomenclatura uniforme a un archivo de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-842">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="4f9e5-843">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-843">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="4f9e5-844">Asignación de esquema que se debe aplicar al importar el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-844">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="4f9e5-845">
            <b>Boolean</b> opcional. </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-845">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-846">Si no se especifica un valor para el <paramref name="Destination" /> parámetro y, a continuación, este parámetro especifica si se debe o no sobrescribir los datos que se ha asignado a la asignación de esquema especificada en el <paramref name="ImportMap" /> parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-846">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="4f9e5-847">Se establece en <b>True</b> para sobrescribir los datos o en <b>False</b> para anexar los nuevos datos a los datos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-847">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="4f9e5-848">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-848">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-849">Si se especifica un valor para el <paramref name="Destination" /> parámetro y, a continuación, este parámetro especifica si se debe o no sobrescribir los datos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-849">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="4f9e5-850">Se establece en <b>True</b> para sobrescribir datos existentes o en <b>False</b> para cancelar la importación si se sobrescribirán datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-850">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="4f9e5-851">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-851">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="4f9e5-852">Opcional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-852">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="4f9e5-853">Los datos se importarán en una nueva lista XML en el rango especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-853">The data will be imported into a new XML list at the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-854">Importa un archivo de datos XML al libro actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-854">Imports an XML data file into the current workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-855">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-855">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="4f9e5-856">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para>No se especifica un valor para el <paramref name="Destination" /> parámetro si desea importar datos a una asignación existente.</para>
            <para>Las siguientes condiciones harán que el método <b>XMLImport</b> genere errores en tiempo de ejecución:</para>
            <list type="bullet">
              <item>
                <description>Los datos XML especificados presentan errores de sintaxis.</description>
              </item>
              <item>
                <description>El proceso de importación se canceló debido a que los datos especificados no cabían en la hoja de cálculo.</description>
              </item>
            </list>
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> (método) de la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto para importar datos XML que se ha cargado previamente en la memoria.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-856">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="4f9e5-857">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-857">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-858">Datos que se van a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-858">The data to import.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="4f9e5-859">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-859">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="4f9e5-860">Asignación de esquema que se debe aplicar al importar el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-860">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="4f9e5-861">
            <b>Boolean</b> opcional. </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-861">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-862">Si no se especifica un valor para el <paramref name="Destination" /> parámetro y, a continuación, este parámetro especifica si se debe o no sobrescribir los datos que se ha asignado a la asignación de esquema especificada en el <paramref name="ImportMap" /> parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-862">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="4f9e5-863">Se establece en <b>True</b> para sobrescribir los datos o en <b>False</b> para anexar los nuevos datos a los datos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-863">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="4f9e5-864">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-864">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="4f9e5-865">Si se especifica un valor para el <paramref name="Destination" /> parámetro y, a continuación, este parámetro especifica si se debe o no sobrescribir los datos existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-865">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="4f9e5-866">Se establece en <b>True</b> para sobrescribir datos existentes o en <b>False</b> para cancelar la importación si se sobrescribirán datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-866">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="4f9e5-867">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-867">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="4f9e5-868">Opcional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-868">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="4f9e5-869">Los datos se importarán en una nueva lista XML en el rango especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-869">The data will be imported into a new XML list in the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f9e5-870">Importa una secuencia de datos XML que se ha cargado previamente en la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-870">Imports an XML data stream that has been previously loaded into memory.</span>
          </span>
          <span data-ttu-id="4f9e5-871">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-871">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="4f9e5-872">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para>No se especifica un valor para el <paramref name="Destination" /> parámetro si desea importar datos a una asignación existente.</para>
            <para>Las siguientes condiciones harán que el método <b>XMLImport</b> genere errores en tiempo de ejecución:</para>
            <list type="bullet">
              <item>
                <description>Los datos XML especificados presentan errores de sintaxis.</description>
              </item>
              <item>
                <description>El proceso de importación se canceló debido a que los datos especificados no cabían en la hoja de cálculo.</description>
              </item>
            </list>
            <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> (método) de la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto que se va a importar un archivo de datos XML al libro actual.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-872">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-873">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> colección que representa las asignaciones de esquema que se han agregado al libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-873">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-874">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-874">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-875">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-875">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f9e5-876">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> colección que representa los espacios de nombres XML incluidos en el libro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-876">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span>
          </span>
          <span data-ttu-id="4f9e5-877">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-877">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4f9e5-878">
            <para>Características XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f9e5-878">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>