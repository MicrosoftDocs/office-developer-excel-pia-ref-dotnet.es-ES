<Type Name="_OLEObject" FullName="Microsoft.Office.Interop.Excel._OLEObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af49a80aff9121295165535f61d74b6cd1d1256b" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20579978" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _OLEObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OLEObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._OLEObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OLEObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OLEObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208A2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d26ca-101">Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d26ca-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="d26ca-102">Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d26ca-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="d26ca-103">De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d26ca-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="d26ca-104">Para obtener más información sobre el objeto COM, vea <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d26ca-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-105">Activa el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-105">Activates the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltHTML">
      <MemberSignature Language="C#" Value="public string AltHTML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltHTML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AltHTML" />
      <MemberSignature Language="VB.NET" Value="Public Property AltHTML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltHTML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147416259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417964)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417964)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-107">Esta propiedad devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa el creador del objeto especificado (puede utilizar esta propiedad con un objeto de automatización OLE para devolver la aplicación de dicho objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-107">This property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="d26ca-108">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-108">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLoad">
      <MemberSignature Language="C#" Value="public bool AutoLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLoad" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AutoLoad" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLoad As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLoad { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147416926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p103">Es <b>True</b> si el objeto OLE se carga automáticamente cuando se abre el libro que lo contiene. Valor <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p103">
              <b>True</b> if the OLE object is automatically loaded when the workbook that contains it is opened. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-111">
            <para>Esta propiedad se omite los controles ActiveX. Los controles ActiveX siempre se cargan cuando se abre un libro.</para>
            <para>Para la mayoría de los tipos de objeto OLE, esta propiedad no debe establecerse en <b>True</b>. De forma predeterminada, la propiedad <b>AutoLoad</b> se establece en <b>False</b> para objetos OLE nuevos. Esto ahorra tiempo y memoria cuando Microsoft Excel carga libros. La ventaja de cargar automáticamente OLE objects es que, para objetos que representan datos volátiles, los vínculos a los datos de origen pueden restablecerse inmediatamente y los objetos se pueden representar de nuevo si es necesario.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-111">
              <para>This property is ignored by ActiveX controls. ActiveX controls are always loaded when a workbook is opened.</para>
              <para>For most OLE object types, this property shouldn’t be set to <b>True</b>. By default, the <b>AutoLoad</b> property is set to <b>False</b> for new OLE objects; this saves time and memory when Microsoft Excel is loading workbooks. The benefit of automatically loading OLE objects is that, for objects that represent volatile data, links to source data can be reestablished immediately and the objects can be rendered again if necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdate">
      <MemberSignature Language="C#" Value="public bool AutoUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.AutoUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-112">
            <b>True</b> si el objeto OLE se actualiza automáticamente al cambiar el origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-112">
              <b>True</b> if the OLE object is updated automatically when the source changes.</span>
          </span>
          <span data-ttu-id="d26ca-113">Válido sólo si el objeto está vinculado (su <see cref="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" /> (propiedad) debe ser <b>xlOLELink</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-113">Valid only if the object is linked (its <see cref="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" /> property must be <b>xlOLELink</b>).</span>
          </span>
          <span data-ttu-id="d26ca-114">
            <b>Boolean</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-114">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417984)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417984)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-115">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object que representa el borde del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417497)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-116">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa la celda que se encuentra debajo de la esquina inferior derecha del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span>
          </span>
          <span data-ttu-id="d26ca-117">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public object BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BringToFront() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Function BringToFront () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BringToFront();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-118">Sitúa el objeto en el primer plano del orden z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-118">Brings the object to the front of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417561)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-119">Copia el objeto al Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-119">Copies the object to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="d26ca-120">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-120">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="d26ca-121">Especifica cómo se debe copiar la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-121">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="d26ca-122">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-122">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="d26ca-123">El formato de la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-123">The format of the picture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d26ca-124">Copia el objeto seleccionado en el Portapapeles como una imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-124">Copies the selected object to the Clipboard as a picture.</span>
          </span>
          <span data-ttu-id="d26ca-125">
            <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-125">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-126">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-126">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="d26ca-127">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-127">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="d26ca-128">De sólo lectura <b>xlCreatorCode</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-128">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-129">Propiedad de <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-129">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-130">Corta el objeto y lo pega en el Portapapeles o en un destino especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-130">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="d26ca-131">
            <para>Gráficos incrustados sólo pueden cortarse.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-131">
              <para>Only embedded charts can be cut.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-132">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-132">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public object Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417073)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-133">Duplica el objeto y devuelve una referencia a la nueva copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-133">Duplicates the object and returns a reference to the new copy.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p110">Es <b>True</b> si el objeto está habilitado. Valor <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p110">
              <b>True</b> if the object is enabled. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417989)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-136">Alto del objeto, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-136">The height, in points, of the object.</span>
          </span>
          <span data-ttu-id="d26ca-137">Lectura y escritura <b>doble</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-137">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-138">Devuelve el número de índice del objeto contenido en el conjunto de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-138">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="d26ca-139">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-139">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417983)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417983)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-140">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object que representa el interior del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-140">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-141">La distancia, en puntos, desde el borde izquierdo del objeto al borde izquierdo de la columna A (en una hoja de cálculo) o al borde izquierdo del área del gráfico (en un gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-141">The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span>
          </span>
          <span data-ttu-id="d26ca-142">Lectura y escritura <b>doble</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-142">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-143">
            <para>Si la ventana está maximizada, esta propiedad devuelve un número negativo que varía según el ancho del borde ventana. Al establecer esta propiedad en 0 (cero) hará que la ventana de un poco más pequeña de lo que sería si la ventana de la aplicación estuviera maximizada. En otras palabras, si la propiedad <b>Left</b> es 0 (cero), el borde izquierdo de la ventana principal de Microsoft Excel apenas estará visible en la pantalla.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-143">
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if the <b>Left</b> property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedCell">
      <MemberSignature Language="C#" Value="public string LinkedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LinkedCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.LinkedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkedCell As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LinkedCell { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p114">Devuelve o establece el rango de la hoja de cálculo vinculado al valor del control. Si sitúa un valor en la celda, el control toma dicho valor. De la misma forma, si el valor del control cambia, ese valor también se coloca en la celda. Valor <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p114">Returns or sets the worksheet range linked to the control's value. If you place a value in the cell, the control takes this value. Likewise, if you change the value of the control, that value is also placed in the cell. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-148">
            <para>No se puede utilizar esta propiedad con cuadros de lista de selección múltiple.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-148">
              <para>You cannot use this property with multiselect list boxes.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFillRange">
      <MemberSignature Language="C#" Value="public string ListFillRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListFillRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ListFillRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ListFillRange As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListFillRange { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-149">Devuelve o establece el rango de hoja de cálculo que se utiliza para rellenar el cuadro de lista especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-149">Returns or sets the worksheet range used to fill the specified list box.</span>
          </span>
          <span data-ttu-id="d26ca-150">Al establecer esta propiedad, destruye cualquier lista existente en el cuadro de lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-150">Setting this property destroys any existing list in the list box.</span>
          </span>
          <span data-ttu-id="d26ca-151">
            <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-151">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-152">
            <para>Microsoft Excel lee el contenido de cada celda del rango y se inserta los valores de celda en el cuadro de lista. La lista realiza un seguimiento de los cambios en las celdas del rango.</para>
            <para>Si se ha creado la lista en el cuadro de lista con el <see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" /> (método), esta propiedad devuelve una cadena vacía ("").</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-152">
              <para>Microsoft Excel reads the contents of every cell in the range and inserts the cell values into the list box. The list tracks changes in the range’s cells.</para>
              <para>If the list in the list box was created with the <see cref="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)" /> method, this property returns an empty string ("").</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-153">
            <b>True</b> si el objeto está bloqueado, <b>False</b> si el objeto se puede modificar cuando la hoja está protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-153">
              <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
          <span data-ttu-id="d26ca-154">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-154">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p117">Devuelve o establece el nombre del objeto. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p117">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p118">Devuelve el objeto de automatización OLE asociado a este objeto OLE. Valor <b>Object</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p118">Returns the OLE Automation object associated with this OLE object. Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEType">
      <MemberSignature Language="C#" Value="public object OLEType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OLEType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.OLEType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OLEType { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-159">Devuelve el tipo de objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-159">Returns the OLE object type.</span>
          </span>
          <span data-ttu-id="d26ca-160">Puede ser una de las siguientes constantes <b>XlOLEType</b> : <b>xlOLELink</b> o <b>xlOLEEmbed</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-160">Can be one of the following <b>XlOLEType</b> constants: <b>xlOLELink</b> or <b>xlOLEEmbed</b>.</span>
          </span>
          <span data-ttu-id="d26ca-161">Devuelve <b>xlOLELink</b> si el objeto está vinculado (existe fuera del archivo) o <b>xlOLEEmbed si el objeto está incrustado</b> (está contenido totalmente dentro del archivo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-161">Returns <b>xlOLELink</b> if the object is linked (it exists outside of the file) or returns <b>xlOLEEmbed</b> if the object is embedded (it's entirely contained within the file).</span>
          </span>
          <span data-ttu-id="d26ca-162">Read-only <b>objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-162">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p120">Devuelve o establece el nombre de una macro que se ejecuta al hacer clic en el objeto especificado. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p120">Returns or sets the name of a macro that’s run when the specified object is clicked. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-165">
            <para>Al establecer esta propiedad para un elemento de menú invalida cualquier ayuda personalizada configura información configurada para el elemento de menú con la información de la macro asignada.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-165">
              <para>Setting this property for a menu item overrides any custom help information set up for the menu item with the information set up for the assigned macro.</para>
              <para></para>
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="d26ca-166">
            <para>En este ejemplo se hace que Microsoft Excel ejecute el procedimiento ShapeClick siempre que se hace clic en la forma uno.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-166">
              <para>This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="d26ca-167">
            <para>En este ejemplo se hace que Microsoft Excel ejecute el procedimiento ShapeClick siempre que se hace clic en la forma uno.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-167">
              <para>This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="d26ca-168">
            <para>En este ejemplo se hace que Microsoft Excel ejecute el procedimiento ShapeClick siempre que se hace clic en la forma uno.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-168">
              <para>This example causes Microsoft Excel to run the ShapeClick procedure whenever shape one is clicked.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(1).&lt;/span&gt;
&lt;span class="label"&gt;OnAction&lt;/span&gt;
&lt;span class="label"&gt;= "ShapeClick"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p121">Devuelve el objeto primario correspondiente al objeto especificado. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p121">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public object Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Placement { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-171">Devuelve o establece la forma en que el objeto está unido a las celdas situadas debajo de él.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-171">Returns or sets the way the object is attached to the cells below it.</span>
          </span>
          <span data-ttu-id="d26ca-172">Lectura/Escritura <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-172">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-173">
            <para>Utilizar una de las constantes siguientes:</para>
            <para>
              <b>xlFreeFloating</b>
            </para>
            <para>
              <b>xlMove</b>
            </para>
            <para>
              <b>xlMoveAndSize</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-173">
              <para>Use one of the following constants:</para>
              <para>
                <b>xlFreeFloating</b>
              </para>
              <para>
                <b>xlMove</b>
              </para>
              <para>
                <b>xlMoveAndSize</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintObject">
      <MemberSignature Language="C#" Value="public bool PrintObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.PrintObject" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p123">Es <b>True</b> si el objeto se imprimirá junto con el documento. Valor <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p123">
              <b>True</b> if the object will be printed when the document is printed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="progID">
      <MemberSignature Language="C#" Value="public string progID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string progID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.progID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property progID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ progID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p124">Devuelve los identificadores programáticos del objeto. Valor <b>String</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p124">Returns the programmatic identifiers for the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (Optional Replace As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="d26ca-178">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-178">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d26ca-179">
            <b>True</b> para reemplazar la selección actual con el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-179">
              <b>True</b> to replace the current selection with the specified object.</span>
          </span>
          <span data-ttu-id="d26ca-180">
            <b>False</b> para extender la selección actual de modo que incluya los objetos previamente seleccionados y el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-180">
              <b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d26ca-181">Selecciona el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-181">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public object SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SendToBack() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToBack () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ SendToBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-182">Envía el objeto al final del orden z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-182">Sends the object to the back of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418009)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-183">
            <b>True</b> si la fuente es una fuente de sombra o si el objeto tiene una sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-183">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="d26ca-184">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-184">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Excel::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147416584)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147416584)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-185">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object que representa el objeto u objetos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</span>
          </span>
          <span data-ttu-id="d26ca-186">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-186">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-187">Devuelve o establece el nombre de origen del vínculo del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-187">Returns or sets the specified object's link source name.</span>
          </span>
          <span data-ttu-id="d26ca-188">
            <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-188">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417986)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-189">La distancia, en puntos, desde el borde superior del objeto hasta la parte superior de la fila 1 (en una hoja de cálculo) o la parte superior del área del gráfico (en un gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-189">The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span>
          </span>
          <span data-ttu-id="d26ca-190">Lectura y escritura <b>doble</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-190">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417492)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-191">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa la celda que se encuentra debajo de la esquina superior izquierda del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-191">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span>
          </span>
          <span data-ttu-id="d26ca-192">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-192">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public object Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-193">Actualiza el vínculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-193">Updates the link.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public object Verb (Microsoft.Office.Interop.Excel.XlOLEVerb Verb = Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Verb([in]valuetype Microsoft.Office.Interop.Excel.XlOLEVerb Verb) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._OLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Function Verb (Optional Verb As XlOLEVerb = Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Verb" Type="Microsoft.Office.Interop.Excel.XlOLEVerb" />
      </Parameters>
      <Docs>
        <param name="Verb">
          <span data-ttu-id="d26ca-194">Opcional <b>XlOLEVerb</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-194">Optional <b>XlOLEVerb</b>.</span>
          </span>
          <span data-ttu-id="d26ca-195">El verbo que debe actuar el servidor del objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-195">The verb that the server of the OLE object should act on.</span>
          </span>
          <span data-ttu-id="d26ca-196">Si se omite este argumento, se envía el verbo predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-196">If this argument is omitted, the default verb is sent.</span>
          </span>
          <span data-ttu-id="d26ca-197">Los verbos disponibles están determinados por la aplicación del objeto origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-197">The available verbs are determined by the object's source application.</span>
          </span>
          <span data-ttu-id="d26ca-198">Los verbos habituales para un objeto OLE son Open y Primary (representados por las constantes <b>XlOLEVerb</b><b>xlOpen</b> y <b>xlPrimary</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-198">Typical verbs for an OLE object are Open and Primary (represented by the <b>XlOLEVerb</b> constants <b>xlOpen</b> and <b>xlPrimary</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d26ca-199">Envía un verbo al servidor del objeto OLE especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-199">Sends a verb to the server of the specified OLE object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-p132">Determina si el objeto es visible. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-p132">Determines whether the object is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147417990)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-202">El ancho del objeto en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-202">The width, in points, of the object.</span>
          </span>
          <span data-ttu-id="d26ca-203">Lectura y escritura <b>doble</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-203">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public int ZOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._OLEObject.ZOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147417490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147417490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d26ca-204">Devuelve la posición del orden z del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-204">Returns the z-order position of the object.</span>
          </span>
          <span data-ttu-id="d26ca-205">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-205">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d26ca-206">
            <para>En cualquier colección de objetos, el objeto en la parte posterior del orden z es <paramref name="collection" />(1), y el objeto en la parte delantera del orden z es <paramref name="collection" />(<paramref name="collection" />.<b> Contar</b>).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d26ca-206">
              <para>In any collection of objects, the object at the back of the z-order is <paramref name="collection" />(1), and the object at the front of the z-order is <paramref name="collection" />(<paramref name="collection" />.<b>Count</b>).</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>