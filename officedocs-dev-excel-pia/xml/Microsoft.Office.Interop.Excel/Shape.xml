<Type Name="Shape" FullName="Microsoft.Office.Interop.Excel.Shape">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79407cc874dc91aaa0bdd4a827ab38f1c0fb6b0b" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010370" /></Metadata><TypeSignature Language="C#" Value="public interface Shape" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shape" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Shape" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shape" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shape" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024439-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="92b87-101">Representa un objeto de la capa de dibujo, como una autoforma, una forma libre, un objeto OLE o una imagen.</span><span class="sxs-lookup"><span data-stu-id="92b87-101">Represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture.</span></span> <span data-ttu-id="92b87-102">El <b>objeto Shape</b> es un miembro de la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección.</span><span class="sxs-lookup"><span data-stu-id="92b87-102">The <b>Shape</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="92b87-103">La <b>colección Shapes</b> contiene todas las formas de una diapositiva.</span><span class="sxs-lookup"><span data-stu-id="92b87-103">The <b>Shapes</b> collection contains all the shapes on a slide.</span></span></summary>
    <remarks><para><span data-ttu-id="92b87-104">Hay tres objetos que representan formas: la <b>colección Shapes,</b> que representa todas las formas de un documento; la colección, que representa un subconjunto especificado de las formas de un documento (por ejemplo, un objeto ShapeRange podría representar las formas uno y cuatro del documento, o podría representar todas las formas seleccionadas en el documento); y el objeto Shape, que representa una sola forma de un <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> documento. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="92b87-104">There are three objects that represent shapes: the <b>Shapes</b> collection, which represents all the shapes on a document; the <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection, which represents a specified subset of the shapes on a document (for example, a <b>ShapeRange</b> object could represent shapes one and four on the document, or it could represent all the selected shapes on the document); and the <b>Shape</b> object, which represents a single shape on a document.</span></span> <span data-ttu-id="92b87-105">Si desea trabajar con varias formas al mismo tiempo o con formas dentro de la selección, use una colección <b>ShapeRange</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-105">If you want to work with several shapes at the same time or with shapes within the selection, use a <b>ShapeRange</b> collection.</span></span></para>
      <para><span data-ttu-id="92b87-106">En esta sección se describe cómo:</span><span class="sxs-lookup"><span data-stu-id="92b87-106">This section describes how to:</span></span></para>
      <list type="bullet">
        <item>
          <description><span data-ttu-id="92b87-107">Devolver una forma existente.</span><span class="sxs-lookup"><span data-stu-id="92b87-107">Return an existing shape.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="92b87-108">Devolver una forma dentro de la selección.</span><span class="sxs-lookup"><span data-stu-id="92b87-108">Return a shape within the selection.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="92b87-109">Devolver las formas adjuntas a los extremos de un conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-109">Return the shapes attached to the ends of a connector.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="92b87-110">Devolver una forma libre recién creada.</span><span class="sxs-lookup"><span data-stu-id="92b87-110">Return a newly created freeform.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="92b87-111">Devolver una forma de un grupo.</span><span class="sxs-lookup"><span data-stu-id="92b87-111">Return a single shape from within a group.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="92b87-112">Devolver un grupo de formas creado recientemente.</span><span class="sxs-lookup"><span data-stu-id="92b87-112">Return a newly formed group of shapes.</span></span></description>
        </item>
      </list>
      <para><span data-ttu-id="92b87-113">Devolución de una forma existente</span><span class="sxs-lookup"><span data-stu-id="92b87-113">Returning an Existing Shape</span></span></para>
      <para><span data-ttu-id="92b87-114">Utilice <b>Shapes</b>( ), donde se encuentra el nombre de la forma o el número de índice, para devolver <paramref name="index" /> un objeto <paramref name="index" /> <b>Shape</b> que representa una forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-114">Use <b>Shapes</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape.</span></span></para>
      <para><span data-ttu-id="92b87-115">Cada forma lleva asignado un nombre predeterminado cuando se agrega a la colección <b>Shapes</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-115">Each shape is assigned a default name when you add it to the <b>Shapes</b> collection.</span></span> <span data-ttu-id="92b87-116">Para dar a la forma un nombre más significativo, utilice la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92b87-116">To give the shape a more meaningful name, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> property.</span></span></para>
      <para><span data-ttu-id="92b87-117">Devolución de una forma dentro de la selección</span><span class="sxs-lookup"><span data-stu-id="92b87-117">Returning a Shape Within the Selection</span></span></para>
      <para><span data-ttu-id="92b87-118">Utilice <b>Selection.ShapeRange</b>( ), donde se encuentra el nombre de la forma o el número de índice, para devolver un objeto Shape que representa <paramref name="index" /> una forma dentro de la <paramref name="index" /> <b></b> selección.</span><span class="sxs-lookup"><span data-stu-id="92b87-118">Use <b>Selection.ShapeRange</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape within the selection.</span></span></para>
      <para><span data-ttu-id="92b87-119">Devolución de las formas adjuntas a los extremos de un conector</span><span class="sxs-lookup"><span data-stu-id="92b87-119">Returning the Shapes Attached to the Ends of a Connector</span></span></para>
      <para><span data-ttu-id="92b87-120">Para devolver un <b>objeto Shape</b> que representa una de las formas unidas por un conector, utilice la <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> propiedad <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> or.</span><span class="sxs-lookup"><span data-stu-id="92b87-120">To return a <b>Shape</b> object that represents one of the shapes attached by a connector, use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> or <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> property.</span></span></para>
      <para><span data-ttu-id="92b87-121">Devolución de una forma libre recién creada</span><span class="sxs-lookup"><span data-stu-id="92b87-121">Returning a newly created freeform</span></span></para>
      <para><span data-ttu-id="92b87-122">Utilice los métodos and para definir la geometría de una nueva forma libre y utilice el método para crear la forma libre y devolver el objeto <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> Shape que la <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> representa. <b></b></span><span class="sxs-lookup"><span data-stu-id="92b87-122">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> and <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> methods to define the geometry of a new freeform, and use the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> method to create the freeform and return the <b>Shape</b> object that represents it.</span></span></para>
      <para><span data-ttu-id="92b87-123">Devolución de una sola forma desde dentro de un grupo</span><span class="sxs-lookup"><span data-stu-id="92b87-123">Returning a Single Shape from Within a Group</span></span></para>
      <para><span data-ttu-id="92b87-124">Utilice <b>GroupItems</b>( ), donde se encuentra el nombre de la forma o el número de índice dentro del grupo, para devolver un objeto Shape que representa una sola forma <paramref name="index" /> de una forma <paramref name="index" /> agrupada. <b></b></span><span class="sxs-lookup"><span data-stu-id="92b87-124">Use <b>GroupItems</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number within the group, to return a <b>Shape</b> object that represents a single shape in a grouped shape.</span></span></para>
      <para><span data-ttu-id="92b87-125">Devolución de grupos de formas recién formados</span><span class="sxs-lookup"><span data-stu-id="92b87-125">Returning a Newly Formed Group of Shapes</span></span></para>
      <para><span data-ttu-id="92b87-126">Utilice el método or para agrupar un intervalo de formas y devolver un único objeto <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> Shape que representa el grupo recién <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> formado. <b></b></span><span class="sxs-lookup"><span data-stu-id="92b87-126">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> or <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> method to group a range of shapes and return a single <b>Shape</b> object that represents the newly formed group.</span></span> <span data-ttu-id="92b87-127">Una vez creado un grupo, puede trabajar con el grupo de la misma manera que con cualquier otra forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-127">After a group has been formed, you can work with the group the same way you work with any other shape.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-128">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> objeto que contiene los valores de ajuste de todos los ajustes de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span></span> <span data-ttu-id="92b87-129">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-129">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-130">Esta propiedad se aplica a cualquier <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> que represente una autoforma, WordArt o un conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-130">This property applies to any <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-131">Devuelve o establece la cadena de texto descriptivo (alternativa) de un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto cuando el objeto se guarda en una página Web.</span><span class="sxs-lookup"><span data-stu-id="92b87-131">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object when the object is saved to a Web page.</span></span> <span data-ttu-id="92b87-132"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-132">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-133">El texto alternativo se puede mostrar en lugar de la imagen de la forma en el explorador web o directamente sobre la imagen cuando el puntero del mouse se desplaza sobre la imagen (en exploradores que admiten estas características).</span><span class="sxs-lookup"><span data-stu-id="92b87-133">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-134">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="92b87-134">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="92b87-135">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-136">Se aplica al formato de forma especificado que se ha copiado mediante el <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> método.</span><span class="sxs-lookup"><span data-stu-id="92b87-136">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-137">Devuelve o establece el tipo de forma del objeto especificado, que debe representar una autoforma que no sea una línea, un dibujo de <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> forma libre o un conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-137">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span></span> <span data-ttu-id="92b87-138">Lectura y <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-138">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-139">Cuando se cambia el tipo de una forma, ésta mantiene su tamaño, color y otros atributos.</span><span class="sxs-lookup"><span data-stu-id="92b87-139">When you change the type of a shape, the shape retains its size, color, and other attributes.</span></span></para>
          <para><span data-ttu-id="92b87-140">Use la <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> propiedad del objeto para establecer o devolver el tipo de <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-140">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-141">Devuelve o establece el estilo del fondo.</span><span class="sxs-lookup"><span data-stu-id="92b87-141">Returns or sets the background style.</span></span> <span data-ttu-id="92b87-142">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-142">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-143">Devuelve o establece un valor que indica cómo aparece la forma especificada cuando la presentación se visualiza en modo blanco y negro.</span><span class="sxs-lookup"><span data-stu-id="92b87-143">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span></span> <span data-ttu-id="92b87-144">Lectura y <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-144">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-145">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa la celda que se encuentra debajo de la esquina inferior derecha del objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span></span> <span data-ttu-id="92b87-146">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-146">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-147">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> objeto que contiene las propiedades de formato de llamada de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-147">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span></span> <span data-ttu-id="92b87-148">Se aplica a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objetos que representan llamadas de línea.</span><span class="sxs-lookup"><span data-stu-id="92b87-148">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent line callouts.</span></span> <span data-ttu-id="92b87-149">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-149">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="92b87-150">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="92b87-150">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="92b87-151">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="92b87-151">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="92b87-152">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="92b87-152">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="92b87-153">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="92b87-153">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-154">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="92b87-154">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-155">Devuelve un objeto que representa <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> el contenido del objeto <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-155">Returns an object that represents the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> contained in the <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</span></span> <span data-ttu-id="92b87-156">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-156">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel._Chart" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-157">Devuelve <b>msoTrue</b> si la forma especificada es una forma secundaria o si todas las formas del rango de formas son secundarias de la misma forma primaria.</span><span class="sxs-lookup"><span data-stu-id="92b87-157">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span></span> <span data-ttu-id="92b87-158">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-158">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-159">Devuelve el número de sitios de conexión de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-159">Returns the number of connection sites on the specified shape.</span></span> <span data-ttu-id="92b87-160"><b>Integer</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-160">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-161">Es <b>True</b> si la forma especificada es un conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-161"><b>True</b> if the specified shape is a connector.</span></span> <span data-ttu-id="92b87-162">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-162">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-163">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> objeto que contiene las propiedades de formato del conector.</span><span class="sxs-lookup"><span data-stu-id="92b87-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span></span> <span data-ttu-id="92b87-164">Se aplica a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objetos que representan conectores.</span><span class="sxs-lookup"><span data-stu-id="92b87-164">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent connectors.</span></span> <span data-ttu-id="92b87-165">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-165">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ControlFormat ControlFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ControlFormat ControlFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ControlFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlFormat As ControlFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ControlFormat ^ ControlFormat { Microsoft::Office::Interop::Excel::ControlFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ControlFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-166">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> objeto que contiene las propiedades del control de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="92b87-166">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> object that contains Microsoft Excel control properties.</span></span> <span data-ttu-id="92b87-167">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-168">Copia el objeto al Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="92b87-168">Copies the object to the Clipboard.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (object Appearance, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]object Appearance, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CopyPicture(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As Object, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="92b87-169">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="92b87-170">Especifica cómo se debe copiar la imagen.</span><span class="sxs-lookup"><span data-stu-id="92b87-170">Specifies how the picture should be copied.</span></span></param>
        <param name="Format"><span data-ttu-id="92b87-171">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="92b87-172">Formato de la imagen.</span><span class="sxs-lookup"><span data-stu-id="92b87-172">The format of the picture.</span></span></param>
        <summary><span data-ttu-id="92b87-173">Copia el objeto seleccionado en el Portapapeles como una imagen.</span><span class="sxs-lookup"><span data-stu-id="92b87-173">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-174">Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-174">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="92b87-175">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="92b87-175">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="92b87-176">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-176">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-177">La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="92b87-177">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="92b87-178">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="92b87-178">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-179">Corta el objeto y lo pega en el Portapapeles o en un destino especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-179">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-180">El rango cortado debe estar compuesto por celdas adyacentes.</span><span class="sxs-lookup"><span data-stu-id="92b87-180">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="92b87-181">Sólo pueden cortarse los gráficos incrustados.</span><span class="sxs-lookup"><span data-stu-id="92b87-181">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-182">Elimina el objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-182">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-183">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> objeto que representa un diagrama.</span><span class="sxs-lookup"><span data-stu-id="92b87-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-184">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa un nodo de un diagrama.</span><span class="sxs-lookup"><span data-stu-id="92b87-184">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObject">
      <MemberSignature Language="C#" Value="public object DrawingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DrawingObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DrawingObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrawingObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DrawingObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-185">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="92b87-185">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-186">Duplica el objeto y devuelve una referencia a la nueva copia.</span><span class="sxs-lookup"><span data-stu-id="92b87-186">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-187">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objeto que contiene las propiedades de formato de relleno para el gráfico o la forma especificados.</span><span class="sxs-lookup"><span data-stu-id="92b87-187">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span></span> <span data-ttu-id="92b87-188">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-188">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd"><span data-ttu-id="92b87-189">Obligatorio <see cref="T:Microsoft.Office.Core.MsoFlipCmd" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-189">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span></span> <span data-ttu-id="92b87-190">Especifica si se va a voltear la forma horizontal o verticalmente.</span><span class="sxs-lookup"><span data-stu-id="92b87-190">Specifies whether the shape is to be flipped horizontally or vertically.</span></span></param>
        <summary><span data-ttu-id="92b87-191">Voltea la forma especificada alrededor de su eje horizontal o vertical.</span><span class="sxs-lookup"><span data-stu-id="92b87-191">Flips the specified shape around its horizontal or vertical axis.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormControlType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormControl FormControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormControl FormControlType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.FormControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormControlType As XlFormControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormControl FormControlType { Microsoft::Office::Interop::Excel::XlFormControl get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-192">Devuelve el tipo de control de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="92b87-192">Returns the Microsoft Excel control type.</span></span> <span data-ttu-id="92b87-193">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-193">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-194">No puede utilizar esta propiedad con ActiveX controles (la propiedad del objeto <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> debe devolver <b>msoFormControl</b>).</span><span class="sxs-lookup"><span data-stu-id="92b87-194">You cannot use this property with ActiveX controls (the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> property for the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object must return <b>msoFormControl</b>).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-195">Devuelve un objeto para una forma especificada que contiene propiedades de formato iluminado para esa forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-195">Returns an object for a specified shape that contains glow formatting properties for that shape.</span></span> <span data-ttu-id="92b87-196">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-196">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.GlowFormat" /></value>
        <remarks><para><span data-ttu-id="92b87-197">El efecto de resplandor agrega un borde coloreado vibrante a los gráficos.</span><span class="sxs-lookup"><span data-stu-id="92b87-197">The glow effect adds a vibrant colored edge to graphics.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-198">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> objeto que representa las formas individuales del grupo especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span></span> <span data-ttu-id="92b87-199">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> método del <b>objeto GroupShapes</b> para devolver una sola forma del grupo.</span><span class="sxs-lookup"><span data-stu-id="92b87-199">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span></span> <span data-ttu-id="92b87-200">Se aplica a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objetos que representan formas agrupadas.</span><span class="sxs-lookup"><span data-stu-id="92b87-200">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent grouped shapes.</span></span> <span data-ttu-id="92b87-201">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-201">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-202">Devuelve información sobre si un objeto <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contiene un gráfico.</span><span class="sxs-lookup"><span data-stu-id="92b87-202">Returns information on if a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contains a chart.</span></span> <span data-ttu-id="92b87-203">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-203">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoTriState" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-204">Devuelve si una forma o intervalo de formas contiene un diagrama.</span><span class="sxs-lookup"><span data-stu-id="92b87-204">Returns whether a shape or shape range contains a diagram.</span></span> <span data-ttu-id="92b87-205">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-205">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-206">Devuelve un valor que indica si existe un nodo de diagrama en una forma o intervalo de formas determinado.</span><span class="sxs-lookup"><span data-stu-id="92b87-206">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span></span> <span data-ttu-id="92b87-207">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-207">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasSmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasSmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasSmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSmartArt As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasSmartArt { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-208">Obtiene si hay un diagrama SmartArt presente en la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-208">Gets whether there is a SmartArt diagram present on the specified shape.</span></span></summary>
        <value><span data-ttu-id="92b87-209">Un <see cref="T:Microsoft.Office.Core.MsoTriState" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-209">A <see cref="T:Microsoft.Office.Core.MsoTriState" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="92b87-210">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-210">Read-only.</span></span></para>
          <para><span data-ttu-id="92b87-211">
            <b>msoTrue</b> (-1) si hay presente un diagrama SmartArt en la forma y <b>msoFalse</b> (0) en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="92b87-211">
            <b>msoTrue</b> (-1) if there is a SmartArt diagram present on the shape; otherwise <b>msoFalse</b> (0).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-212">Alto del objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-212">The height of the object.</span></span> <span data-ttu-id="92b87-213">Lectura y escritura <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-213">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-214">Es <b>True</b> si la forma especificada se voltea alrededor del eje horizontal.</span><span class="sxs-lookup"><span data-stu-id="92b87-214"><b>True</b> if the specified shape is flipped around the horizontal axis.</span></span> <span data-ttu-id="92b87-215">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-215">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlink Hyperlink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlink Hyperlink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlink As Hyperlink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlink ^ Hyperlink { Microsoft::Office::Interop::Excel::Hyperlink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-216">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> objeto que representa el hipervínculo de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-216">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object that represents the hyperlink for the shape.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-217">Devuelve el tipo del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-217">Returns the type for the specified object.</span></span> <span data-ttu-id="92b87-218"><b>Integer</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-218">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-219">Se puede usar un rótulo de Id. como referencia de hipervínculo en otros documentos HTML o en la misma página Web.</span><span class="sxs-lookup"><span data-stu-id="92b87-219">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="92b87-220">Obligatorio <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-220">Required <b>Single</b>.</span></span> <span data-ttu-id="92b87-221">Especifica cuánto se va a mover horizontalmente la forma en puntos.</span><span class="sxs-lookup"><span data-stu-id="92b87-221">Specifies how far the shape is to be moved horizontally in points.</span></span> <span data-ttu-id="92b87-222">Un valor positivo mueve la forma hacia la derecha; un valor negativo la mueve hacia la izquierda.</span><span class="sxs-lookup"><span data-stu-id="92b87-222">A positive value moves the shape to the right; a negative value moves it to the left.</span></span></param>
        <summary><span data-ttu-id="92b87-223">Mueve la forma horizontalmente el número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-223">Moves the specified shape horizontally by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="92b87-224">Obligatorio <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-224">Required <b>Single</b>.</span></span> <span data-ttu-id="92b87-225">Especifica cuánto se va a girar horizontalmente la forma en grados.</span><span class="sxs-lookup"><span data-stu-id="92b87-225">Specifies how far the shape is to be rotated horizontally in degrees.</span></span> <span data-ttu-id="92b87-226">Un valor positivo gira la forma en el sentido de las agujas del reloj; un valor negativo la gira en sentido contrario a las agujas del reloj.</span><span class="sxs-lookup"><span data-stu-id="92b87-226">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span></span></param>
        <summary><span data-ttu-id="92b87-227">Cambia el giro de la forma alrededor del eje Z el número especificado de grados.</span><span class="sxs-lookup"><span data-stu-id="92b87-227">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span></span> <span data-ttu-id="92b87-228">Utilice la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> propiedad para establecer el giro absoluto de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-228">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property to set the absolute rotation of the shape.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-229">Para girar una forma tridimensional alrededor del eje X o del eje Y, utilice el <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> método o el <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> método.</span><span class="sxs-lookup"><span data-stu-id="92b87-229">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="92b87-230">Obligatorio <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-230">Required <b>Single</b>.</span></span> <span data-ttu-id="92b87-231">Especifica cuánto se va a mover verticalmente el objeto de forma en puntos.</span><span class="sxs-lookup"><span data-stu-id="92b87-231">Specifies how far the shape object is to be moved vertically in points.</span></span> <span data-ttu-id="92b87-232">Un valor positivo mueve la forma hacia abajo; un valor negativo la mueve hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="92b87-232">A positive value moves the shape down; a negative value moves it up.</span></span></param>
        <summary><span data-ttu-id="92b87-233">Mueve la forma verticalmente el número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-233">Moves the specified shape vertically by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-234">Distancia desde el borde izquierdo del objeto hasta el borde izquierdo de la columna A (en una hoja de cálculo) o el borde izquierdo del área del gráfico (en un gráfico).</span><span class="sxs-lookup"><span data-stu-id="92b87-234">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span> <span data-ttu-id="92b87-235">Lectura y escritura <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-235">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-236">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> objeto que contiene las propiedades de formato de línea de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-236">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span></span> <span data-ttu-id="92b87-237">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-237">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-238">Para una línea, el objeto <b>LineFormat</b> representa la línea en Sí; para una forma con borde, el objeto <b>LineFormat</b> representa el borde.</span><span class="sxs-lookup"><span data-stu-id="92b87-238">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LinkFormat LinkFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LinkFormat LinkFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LinkFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkFormat As LinkFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LinkFormat ^ LinkFormat { Microsoft::Office::Interop::Excel::LinkFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LinkFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-239">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> objeto que contiene propiedades de objeto OLE vinculadas.</span><span class="sxs-lookup"><span data-stu-id="92b87-239">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> object that contains linked OLE object properties.</span></span> <span data-ttu-id="92b87-240">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-240">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-241">Es <b>True</b> si la forma especificada mantiene sus proporciones originales al ajustar su tamaño.</span><span class="sxs-lookup"><span data-stu-id="92b87-241"><b>True</b> if the specified shape retains its original proportions when you resize it.</span></span> <span data-ttu-id="92b87-242">Es <b>False</b> si el alto y el ancho de la forma se pueden cambiar independientemente al ajustar su tamaño.</span><span class="sxs-lookup"><span data-stu-id="92b87-242"><b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span></span> <span data-ttu-id="92b87-243">Lectura y <see cref="T:Microsoft.Office.Core.MsoTriState" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-243">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-244"><b>True</b> si el objeto está bloqueado, <b>False</b> si el objeto se puede modificar cuando la hoja está protegida.</span><span class="sxs-lookup"><span data-stu-id="92b87-244"><b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span></span> <span data-ttu-id="92b87-245"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-245">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-246">Devuelve o establece el nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-246">Returns or sets the name of the object.</span></span> <span data-ttu-id="92b87-247"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-247">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-248">En la siguiente tabla se muestran valores de ejemplo de la propiedad <b>Name</b> y otras propiedades relacionadas, dado un origen de datos OLAP con el nombre exclusivo "[Europe].[France].[Paris]" y un origen de datos no OLAP con el nombre de elemento "Paris".</span><span class="sxs-lookup"><span data-stu-id="92b87-248">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="92b87-249">
                <b>Título</b>
              </span><span class="sxs-lookup"><span data-stu-id="92b87-249">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="92b87-250">París</span><span class="sxs-lookup"><span data-stu-id="92b87-250">Paris</span></span></description>
              <description><span data-ttu-id="92b87-251">París</span><span class="sxs-lookup"><span data-stu-id="92b87-251">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-252">
                <b>Nombre</b>
              </span><span class="sxs-lookup"><span data-stu-id="92b87-252">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="92b87-253">[Europe].[France].[Paris] (sólo lectura)</span><span class="sxs-lookup"><span data-stu-id="92b87-253">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="92b87-254">París</span><span class="sxs-lookup"><span data-stu-id="92b87-254">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-255">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="92b87-255">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="92b87-256">[Europe].[France].[Paris] (sólo lectura)</span><span class="sxs-lookup"><span data-stu-id="92b87-256">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="92b87-257">(igual que el valor de la propiedad SQL, sólo lectura)</span><span class="sxs-lookup"><span data-stu-id="92b87-257">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-258">
                <b>Valor</b>
              </span><span class="sxs-lookup"><span data-stu-id="92b87-258">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="92b87-259">[Europe].[France].[Paris] (sólo lectura)</span><span class="sxs-lookup"><span data-stu-id="92b87-259">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="92b87-260">París</span><span class="sxs-lookup"><span data-stu-id="92b87-260">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="92b87-261">Al especificar un índice en la colección, puede usar la sintaxis <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> que se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="92b87-261">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="92b87-262">expresión. PivotItems("[Europe].[ Francia]. [París]")</span><span class="sxs-lookup"><span data-stu-id="92b87-262">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="92b87-263">Expression.PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="92b87-263">Expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="92b87-264">Al usar la propiedad para hacer referencia a un miembro específico de una colección, puede usar el nombre del índice de texto como se muestra <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="92b87-264">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="92b87-265">[Europa]. [Francia]. [París]</span><span class="sxs-lookup"><span data-stu-id="92b87-265">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="92b87-266">París</span><span class="sxs-lookup"><span data-stu-id="92b87-266">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-267">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> colección que representa la descripción geométrica de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-267">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span></span> <span data-ttu-id="92b87-268">Se aplica a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objetos que representan dibujos de forma libre.</span><span class="sxs-lookup"><span data-stu-id="92b87-268">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent freeform drawings.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEFormat OLEFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEFormat OLEFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OLEFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEFormat As OLEFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEFormat ^ OLEFormat { Microsoft::Office::Interop::Excel::OLEFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-269">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> objeto que contiene propiedades de objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="92b87-269">Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> object that contains OLE object properties.</span></span> <span data-ttu-id="92b87-270">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-270">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-271">Devuelve o establece el nombre de una macro que se ejecuta al hacer clic en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-271">Returns or sets the name of a macro that’s run when the specified object is clicked.</span></span> <span data-ttu-id="92b87-272"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-272">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-273">Al establecer esta propiedad para un elemento de menú, se reemplaza la información de la ayuda personalizada del elemento por la información específica de la macro asignada.</span><span class="sxs-lookup"><span data-stu-id="92b87-273">Setting this property for a menu item overrides any custom help information set up for the menu item with the information set up for the assigned macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-274">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-274">Returns the parent object for the specified object.</span></span> <span data-ttu-id="92b87-275">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-275">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-276">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma principal común de una forma secundaria o un intervalo de formas secundarias.</span><span class="sxs-lookup"><span data-stu-id="92b87-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-277">Copia el formato de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-277">Copies the formatting of the specified shape.</span></span> <span data-ttu-id="92b87-278">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> método para aplicar el formato copiado a otra forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-278">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> method to apply the copied formatting to another shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-279">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> objeto que contiene las propiedades de formato de imagen de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-279">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span></span> <span data-ttu-id="92b87-280">Se aplica a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objetos que representan imágenes u objetos OLE.</span><span class="sxs-lookup"><span data-stu-id="92b87-280">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent pictures or OLE objects.</span></span> <span data-ttu-id="92b87-281">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-281">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPlacement Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPlacement Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As XlPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPlacement Placement { Microsoft::Office::Interop::Excel::XlPlacement get(); void set(Microsoft::Office::Interop::Excel::XlPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-282">Devuelve o establece la forma en que el objeto se adjunta a las celdas debajo de él.</span><span class="sxs-lookup"><span data-stu-id="92b87-282">Returns or sets the way the object is attached to the cells below it.</span></span> <span data-ttu-id="92b87-283">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-283">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-284">Devuelve un objeto que contiene las propiedades de formato de reflejo de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-284">Returns an object that contains reflection formatting properties for the shape.</span></span> <span data-ttu-id="92b87-285">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-285">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.ReflectionFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-286">Redistribuye los conectores para que tomen la ruta más corta posible entre las formas que conectan.</span><span class="sxs-lookup"><span data-stu-id="92b87-286">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-287">Para usar la ruta de acceso más corta, el método <b>RerouteConnections</b> puede separar los extremos de un conector y volver a adjuntarlos a diferentes sitios de conexión en las formas conectadas.</span><span class="sxs-lookup"><span data-stu-id="92b87-287">To use the shortest path, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span></span> <span data-ttu-id="92b87-288">Este método cambia la ruta de todos los conectores adjuntos a la forma especificada; si la forma especificada es un conector, se cambia la ruta.</span><span class="sxs-lookup"><span data-stu-id="92b87-288">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span></span></para>
          <para><span data-ttu-id="92b87-p153">Si este método se aplica a un conector, sólo se volverá a redistribuir dicho conector. Si este método se aplica a una forma conectada, se volverán a redistribuir todos los conectores a dicha forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-p153">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-291">Devuelve o establece el giro de la forma en grados.</span><span class="sxs-lookup"><span data-stu-id="92b87-291">Returns or sets the rotation of the shape in degrees.</span></span> <span data-ttu-id="92b87-292">Lectura y escritura <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-292">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="92b87-293">Obligatorio <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-293">Required <b>Single</b>.</span></span> <span data-ttu-id="92b87-294">Especifica la relación entre el alto de la forma después de cambiar su tamaño y el alto original o actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-294">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span></span> <span data-ttu-id="92b87-295">Por ejemplo, para crear un rectángulo un 50 por ciento más grande, especifique el valor 1,5 en este argumento.</span><span class="sxs-lookup"><span data-stu-id="92b87-295">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="92b87-296">Obligatorio <see cref="T:Microsoft.Office.Core.MsoTriState" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-296">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="92b87-297">Si es <b>msoTrue</b>, el tamaño de la forma se cambia con relación al tamaño original.</span><span class="sxs-lookup"><span data-stu-id="92b87-297"><b>msoTrue</b> to scale the shape relative to its original size.</span></span> <span data-ttu-id="92b87-298"><b>msoFalse</b> para escalarlo en relación con su tamaño actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-298"><b>msoFalse</b> to scale it relative to its current size.</span></span> <span data-ttu-id="92b87-299">Puede especificar <b>msoTrue</b> en este argumento únicamente si la forma especificada es una imagen o un objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="92b87-299">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="92b87-300">Opcional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-300">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="92b87-301">Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-301">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="92b87-302">Cambia el alto de la forma en un factor especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-302">Scales the height of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-303">Para imágenes y objetos OLE, se puede indicar si se desea cambiar el tamaño de la forma con relación al original o al tamaño actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-303">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="92b87-304">El tamaño de las formas que no son imágenes y objetos OLE siempre se cambia con relación al alto actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-304">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="92b87-305">Obligatorio <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-305">Required <b>Single</b>.</span></span> <span data-ttu-id="92b87-306">Especifica la relación entre el ancho de la forma después de cambiar su tamaño y el ancho original o actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-306">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span></span> <span data-ttu-id="92b87-307">Por ejemplo, para crear un rectángulo un 50 por ciento más grande, especifique el valor 1,5 en este argumento.</span><span class="sxs-lookup"><span data-stu-id="92b87-307">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="92b87-308">Obligatorio <see cref="T:Microsoft.Office.Core.MsoTriState" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-308">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="92b87-309">False para cambiarlo con relación a su tamaño actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-309">False to scale it relative to its current size.</span></span> <span data-ttu-id="92b87-310">Puede especificar True para este argumento sólo si la forma especificada es una imagen o un objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="92b87-310">You can specify True for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="92b87-311">Opcional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-311">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="92b87-312">Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-312">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="92b87-313">Cambia el ancho de la forma en un factor especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-313">Scales the width of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-314">Para imágenes y objetos OLE, se puede indicar si se desea cambiar el tamaño de la forma con relación al original o al tamaño actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-314">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="92b87-315">El tamaño de las formas que no son imágenes y objetos OLE siempre se cambia con relación al ancho actual.</span><span class="sxs-lookup"><span data-stu-id="92b87-315">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Script Script { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Script Script" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Script" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Script As Script" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Script ^ Script { Microsoft::Office::Core::Script ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Script</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-316">Devuelve el objeto <b>Script</b>, que representa un bloque de secuencias de comandos o código de la página Web especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-316">Returns the <b>Script</b> object, which represents a block of script or code on the specified Web page.</span></span> <span data-ttu-id="92b87-317">Si la página no contiene secuencias de comandos, no se devuelve nada.</span><span class="sxs-lookup"><span data-stu-id="92b87-317">If the page contains no script, nothing is returned.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="92b87-318">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-318">Optional <b>Object</b>.</span></span> <span data-ttu-id="92b87-319">Objeto que se debe reemplazar.</span><span class="sxs-lookup"><span data-stu-id="92b87-319">The object to replace.</span></span></param>
        <summary><span data-ttu-id="92b87-320">Selecciona el objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-320">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-321">Para seleccionar una celda o un rango de celdas, use el método <b>Select</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-321">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="92b87-322">Para convertir una sola celda en la celda activa, utilice el <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> método.</span><span class="sxs-lookup"><span data-stu-id="92b87-322">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-323">Convierte el formato de la forma especificada en el formato predeterminado de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-323">Makes the formatting of the specified shape the default formatting for the shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-324"><b>True</b> si el objeto tiene una sombra.</span><span class="sxs-lookup"><span data-stu-id="92b87-324"><b>True</b> if the object has a shadow.</span></span> <span data-ttu-id="92b87-325"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-325">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-326">Devuelve o establece un <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> valor que representa el estilo de forma de la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-326">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents the shape style of the shape.</span></span> <span data-ttu-id="92b87-327">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-327">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArt SmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArt SmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArt As SmartArt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArt ^ SmartArt { Microsoft::Office::Core::SmartArt ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArt</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-328">Obtiene un objeto que representa el Elemento SmartArt asociado a la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-328">Gets an object that represents the SmartArt associated with the shape.</span></span></summary>
        <value><span data-ttu-id="92b87-329">Objeto que representa el SmartArt asociado a la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-329">An object that represents the SmartArt associated with the shape.</span></span></value>
        <remarks><para><span data-ttu-id="92b87-330">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-330">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-331">Devuelve un <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> objeto para una forma especificada que contiene propiedades de formato de borde suave para la forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-331">Returns a <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape.</span></span> <span data-ttu-id="92b87-332">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-332">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-333">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> objeto que contiene las propiedades de formato de efecto de texto de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-333">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span></span> <span data-ttu-id="92b87-334">Se aplica a <b>objetos T:Microsoft.Office.Interop.Excel.Shape</b> que representan WordArt.</span><span class="sxs-lookup"><span data-stu-id="92b87-334">Applies to <b>T:Microsoft.Office.Interop.Excel.Shape</b> objects that represent WordArt.</span></span> <span data-ttu-id="92b87-335">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-335">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-336">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> objeto que contiene las propiedades de alineación y delimitación de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-336">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape.</span></span> <span data-ttu-id="92b87-337">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-337">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-338">Devuelve un objeto que contiene formato de texto para la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-338">Returns an object that contains text formatting for the specified shape.</span></span> <span data-ttu-id="92b87-339">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-339">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-340">Devuelve un objeto que contiene las propiedades de formato de efecto <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> 3D de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-340">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span></span> <span data-ttu-id="92b87-341">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-341">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-342">Obtiene o establece el título del texto alternativo asociado a la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-342">Gets or sets the title of the alternative text associated with the specified shape.</span></span></summary>
        <value><span data-ttu-id="92b87-343">Título del texto alternativo asociado a la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-343">The title of the alternative text associated with the specified shape.</span></span></value>
        <remarks><para><span data-ttu-id="92b87-344">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-344">Read/write.</span></span></para>
          <para><span data-ttu-id="92b87-345">Para establecer la cadena de texto descriptivo del texto alternativo de una forma, utilice la <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92b87-345">To set the descriptive text string of the alternative text for a shape, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-346">Distancia desde el borde superior de la forma superior del rango de formas hasta el borde superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="92b87-346">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span></span> <span data-ttu-id="92b87-347">Lectura y escritura <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-347">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-348">Devuelve un objeto que representa la celda que se encuentra debajo de la <see cref="T:Microsoft.Office.Interop.Excel.Range" /> esquina superior izquierda del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="92b87-348">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span></span> <span data-ttu-id="92b87-349">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-349">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-350">Devuelve o establece el tipo de forma.</span><span class="sxs-lookup"><span data-stu-id="92b87-350">Returns or sets the shape type.</span></span> <span data-ttu-id="92b87-351">Solo <see cref="T:Microsoft.Office.Core.MsoShapeType" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-351">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92b87-352">Desagrupa las formas agrupadas en la forma especificada o intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="92b87-352">Ungroups any grouped shapes in the specified shape or range of shapes.</span></span> <span data-ttu-id="92b87-353">Separa imágenes y objetos OLE dentro de la forma especificada.</span><span class="sxs-lookup"><span data-stu-id="92b87-353">Disassembles pictures and OLE objects within the specified shape.</span></span> <span data-ttu-id="92b87-354">Devuelve las formas desagrupadas como un solo <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-354">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="92b87-355">Debido a que un grupo de formas se trata como un único objeto, al agrupar y desagrupar formas cambia el número de elementos de la colección <b>Shapes</b> y cambia los números de índice de los elementos que siguen a los elementos afectados de la colección.</span><span class="sxs-lookup"><span data-stu-id="92b87-355">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-356"><b>True</b> si la forma especificada está volteada alrededor del eje vertical.</span><span class="sxs-lookup"><span data-stu-id="92b87-356"><b>True</b> if the specified shape is flipped around the vertical axis.</span></span> <span data-ttu-id="92b87-357">Solo <see cref="T:Microsoft.Office.Core.MsoTriState" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-357">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-358">Devuelve las coordenadas de los vértices del dibujo de forma libre especificado, y los puntos de control de las curvas Bézier, como una serie de pares de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="92b87-358">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span></span> <span data-ttu-id="92b87-359">Read-only <b>objeto</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-359">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-360">Puede usar la matriz devuelta por esta propiedad como argumento para el <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> método o <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="92b87-360">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="92b87-361">En la siguiente tabla se muestra cómo la propiedad <b>Vertices</b> asocia los valores de la matriz vertArray() con las coordenadas de los vértices de un triángulo.</span><span class="sxs-lookup"><span data-stu-id="92b87-361">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="92b87-362">vertArray(1, 1)</span><span class="sxs-lookup"><span data-stu-id="92b87-362">vertArray(1, 1)</span></span></term>
              <description><span data-ttu-id="92b87-363">Distancia horizontal desde el primer vértice hasta el lado izquierdo del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-363">The horizontal distance from the first vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-364">vertArray(1, 2)</span><span class="sxs-lookup"><span data-stu-id="92b87-364">vertArray(1, 2)</span></span></term>
              <description><span data-ttu-id="92b87-365">Distancia vertical desde el primer vértice hasta la parte superior del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-365">The vertical distance from the first vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-366">vertArray(2, 1)</span><span class="sxs-lookup"><span data-stu-id="92b87-366">vertArray(2, 1)</span></span></term>
              <description><span data-ttu-id="92b87-367">Distancia horizontal desde el segundo vértice hasta el lado izquierdo del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-367">The horizontal distance from the second vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-368">vertArray(2, 2)</span><span class="sxs-lookup"><span data-stu-id="92b87-368">vertArray(2, 2)</span></span></term>
              <description><span data-ttu-id="92b87-369">Distancia vertical desde el segundo vértice hasta la parte superior del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-369">The vertical distance from the second vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-370">vertArray(3, 1)</span><span class="sxs-lookup"><span data-stu-id="92b87-370">vertArray(3, 1)</span></span></term>
              <description><span data-ttu-id="92b87-371">Distancia horizontal desde el tercer vértice hasta el lado izquierdo del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-371">The horizontal distance from the third vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="92b87-372">vertArray(3, 2)</span><span class="sxs-lookup"><span data-stu-id="92b87-372">vertArray(3, 2)</span></span></term>
              <description><span data-ttu-id="92b87-373">Distancia vertical desde el tercer vértice hasta la parte superior del documento</span><span class="sxs-lookup"><span data-stu-id="92b87-373">The vertical distance from the third vertex to the top of the document</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-374">Determina si el objeto es visible.</span><span class="sxs-lookup"><span data-stu-id="92b87-374">Determines whether the object is visible.</span></span> <span data-ttu-id="92b87-375">Lectura y <see cref="T:Microsoft.Office.Core.MsoTriState" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="92b87-375">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-376">Ancho del objeto.</span><span class="sxs-lookup"><span data-stu-id="92b87-376">The width of the object.</span></span> <span data-ttu-id="92b87-377">Lectura y escritura <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="92b87-377">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd"><span data-ttu-id="92b87-378">Obligatorio <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" /> .</span><span class="sxs-lookup"><span data-stu-id="92b87-378">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span></span> <span data-ttu-id="92b87-379">Especifica la posición a la que se mueve la forma seleccionada con relación a las otras formas.</span><span class="sxs-lookup"><span data-stu-id="92b87-379">Specifies where to move the specified shape relative to the other shapes.</span></span></param>
        <summary><span data-ttu-id="92b87-380">Mueve la forma especificada delante o detrás de otras formas de la colección (es decir, cambia la posición de la forma en el orden z).</span><span class="sxs-lookup"><span data-stu-id="92b87-380">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span></span></summary>
        <remarks><para><span data-ttu-id="92b87-381">Utilice la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> propiedad para determinar la posición actual de una forma en el orden z.</span><span class="sxs-lookup"><span data-stu-id="92b87-381">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92b87-382">Devuelve la posición de la forma especificada en el orden Z.</span><span class="sxs-lookup"><span data-stu-id="92b87-382">Returns the position of the specified shape in the z-order.</span></span> <span data-ttu-id="92b87-383"><b>Integer</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="92b87-383">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92b87-384">Para establecer la posición de la forma en el orden z, utilice el <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> método.</span><span class="sxs-lookup"><span data-stu-id="92b87-384">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span></span></para>
          <para><span data-ttu-id="92b87-385">La posición de una forma en el orden z corresponde al número de índice de la forma en la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección.</span><span class="sxs-lookup"><span data-stu-id="92b87-385">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="92b87-386">Por ejemplo, Shapes(1) devuelve la forma en la parte posterior del orden z y Shapes(4) devuelve la forma en la parte frontal del orden z.</span><span class="sxs-lookup"><span data-stu-id="92b87-386">For example, Shapes(1) returns the shape at the back of the z-order, and Shapes(4) returns the shape at the front of the z-order.</span></span></para>
          <para><span data-ttu-id="92b87-387">Siempre que se agrega una nueva forma a una colección, se agrega de forma predeterminada en la parte delantera del orden Z.</span><span class="sxs-lookup"><span data-stu-id="92b87-387">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>