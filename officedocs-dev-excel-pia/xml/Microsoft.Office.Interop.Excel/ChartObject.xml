<Type Name="ChartObject" FullName="Microsoft.Office.Interop.Excel.ChartObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a46bae59a2c5593efb705b20c2aca39fc1b0090" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20577213" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ChartObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ChartObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ChartObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ChartObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ChartObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208CF-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5eec4-101">Representa un gráfico incrustado en una hoja de cálculo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5eec4-101">Represents an embedded chart on a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="5eec4-102">El objeto <b>ChartObject</b> actúa como un contenedor para una <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5eec4-102">The <b>ChartObject</b> object acts as a container for a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</span>
        </span>
        <span data-ttu-id="5eec4-103">Propiedades y métodos del objeto <b>ChartObject</b> controlan el aspecto y el tamaño del gráfico incrustado en la hoja de cálculo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5eec4-103">Properties and methods for the <b>ChartObject</b> object control the appearance and size of the embedded chart on the worksheet.</span>
        </span>
        <span data-ttu-id="5eec4-104">El objeto <b>ChartObject</b> es un miembro de la <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> colección.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5eec4-104">The <b>ChartObject</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> collection.</span>
        </span>
        <span data-ttu-id="5eec4-105">La colección <b>ChartObjects</b> contiene todos los gráficos incrustados en una sola hoja.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5eec4-105">The <b>ChartObjects</b> collection contains all the embedded charts on a single sheet.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Copy">
      <MemberSignature Language="C#" Value="public object _Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject._Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function _Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-106">Convierte el gráfico actual en el gráfico activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-106">Makes the current chart the active chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-107">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa el creador del objeto especificado (puede utilizar esta propiedad con un objeto de automatización OLE para devolver la aplicación de dicho objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-107">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-108">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object que representa el borde del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-108">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-109">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa la celda que se encuentra debajo de la esquina inferior derecha del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-109">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public object BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BringToFront() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Function BringToFront () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BringToFront();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(602)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-110">Sitúa el objeto en el primer plano del orden z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-110">Brings the object to the front of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-111">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa el gráfico contenido en el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-111">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the chart contained in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-112">Copia el objeto al Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-112">Copies the object to the Clipboard.</span>
          </span>
          <span data-ttu-id="5eec4-113">Copia una imagen del punto o la serie en el Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-113">Copies a picture of the point or series to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="5eec4-114">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-114">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="5eec4-115">Especifica cómo se debe copiar la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-115">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="5eec4-116">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-116">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="5eec4-117">El formato de la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-117">The format of the picture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5eec4-118">Copia el objeto seleccionado en el Portapapeles como una imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-118">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-119">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-119">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="5eec4-120">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-120">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="5eec4-121">La propiedad <b>Creator</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-121">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="5eec4-122">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-122">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-123">Corta el objeto y lo pega en el Portapapeles o en un destino especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-123">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="5eec4-124">Sólo pueden cortarse los gráficos incrustados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-124">Only embedded charts can be cut.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-125">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-125">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public object Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-126">Duplica el objeto y devuelve una referencia a la nueva copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-126">Duplicates the object and returns a reference to the new copy.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-127">
            <b>True</b> si el objeto está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-127">
              <b>True</b> if the object is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-128">El alto del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-128">The height of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-129">Devuelve el número de índice del objeto contenido en el conjunto de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-129">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-130">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object que representa el interior del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-130">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-131">La distancia desde el borde izquierdo del objeto hasta el borde izquierdo de la columna A (en una hoja de cálculo) o el borde izquierdo del área del gráfico (en un gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-131">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="5eec4-132">Si la ventana está maximizada, esta propiedad devuelve un número negativo que varía según el ancho del borde ventana.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-132">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span>
            </span>
            <span data-ttu-id="5eec4-133">Al establecer esta propiedad en 0 (cero) hará que la ventana de un poco más pequeña de lo que sería si la ventana de la aplicación estuviera maximizada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-133">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span>
            </span>
            <span data-ttu-id="5eec4-134">En otras palabras, si esta propiedad es 0 (cero), el borde izquierdo de la ventana principal de Microsoft Excel apenas estará visible en la pantalla.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-134">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-135">
            <b>True</b> si el objeto está bloqueado, <b>False</b> si el objeto se puede modificar cuando la hoja está protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-135">
              <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-136">Devuelve o establece el nombre del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-136">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-137">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-137">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-138">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-138">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public object Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Placement { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-139">Devuelve o establece la forma en que el objeto está unido a las celdas situadas debajo de él.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-139">Returns or sets the way the object is attached to the cells below it.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintObject">
      <MemberSignature Language="C#" Value="public bool PrintObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.PrintObject" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-140">
            <b>True</b> si el objeto se imprimirá cuando se imprime el documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-140">
              <b>True</b> if the object will be printed when the document is printed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectChartObject">
      <MemberSignature Language="C#" Value="public bool ProtectChartObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectChartObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.ProtectChartObject" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectChartObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectChartObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-141">
            <b>True</b> si no se puede mover el marco de gráfico incrustado, cambia el tamaño o eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-141">
              <b>True</b> if the embedded chart frame cannot be moved, resized, or deleted.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundedCorners">
      <MemberSignature Language="C#" Value="public bool RoundedCorners { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RoundedCorners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.RoundedCorners" />
      <MemberSignature Language="VB.NET" Value="Public Property RoundedCorners As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RoundedCorners { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(619)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(619)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(619)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-142">
            <b>True</b> si el gráfico incrustado tiene esquinas redondeadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-142">
              <b>True</b> if the embedded chart has rounded corners.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (Optional Replace As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="5eec4-143">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-143">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="5eec4-144">
            <b>True</b> para reemplazar la selección actual con el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-144">
              <b>True</b> to replace the current selection with the specified object.</span>
          </span>
          <span data-ttu-id="5eec4-145">
            <b>False</b> para extender la selección actual de modo que incluya los objetos previamente seleccionados y el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-145">
              <b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5eec4-146">Selecciona el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-146">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="5eec4-147">Para seleccionar una celda o un rango de celdas, use el método <b>Select</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-147">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="5eec4-148">Para hacer que la celda activa de una sola celda, use la <see cref="M:Microsoft.Office.Interop.Excel.ChartObject.Activate" /> (método).</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-148">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.ChartObject.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public object SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SendToBack() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ChartObject.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToBack () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ SendToBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-149">Envía el objeto al final del orden z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-149">Sends the object to the back of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-150">
            <b>True</b> si la fuente es una fuente de sombra o si el objeto tiene una sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-150">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Excel::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-151">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object que representa el objeto u objetos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-151">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-152">La distancia desde el borde superior del objeto hasta la parte superior de la fila 1 (en una hoja de cálculo) o la parte superior del área del gráfico (en un gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-152">The distance from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-153">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa la celda que se encuentra debajo de la esquina superior izquierda del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-153">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-154">Determina si el objeto es visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-154">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-155">El ancho del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-155">The width of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public int ZOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ChartObject.ZOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5eec4-156">Devuelve la posición del orden z del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5eec4-156">Returns the z-order position of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="5eec4-157">En cualquier colección de objetos, el objeto en la parte posterior del orden z es Collection (1) y el objeto en la parte delantera del orden z es colección (colección. Recuento).</span>
            <span class="sxs-lookup">
              <span data-stu-id="5eec4-157">In any collection of objects, the object at the back of the z-order is collection(1), and the object at the front of the z-order is collection(collection.Count).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>