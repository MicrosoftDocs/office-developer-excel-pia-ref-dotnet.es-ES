<Type Name="Names" FullName="Microsoft.Office.Interop.Excel.Names">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a76d5115c800138621098c928ea18e19669180e4" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20584731" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Names : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Names implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Names" />
  <TypeSignature Language="VB.NET" Value="Public Interface Names&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Names : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ee653-101">Una colección de todos los <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objetos de la aplicación o el libro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee653-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objects in the application or workbook.</span>
      </span>
      <span data-ttu-id="ee653-102">Cada objeto <b>Name</b> representa un nombre definido para un rango de celdas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee653-102">Each <b>Name</b> object represents a defined name for a range of cells.</span>
      </span>
      <span data-ttu-id="ee653-103">Los nombres pueden ser integrados, como la base de datos, Área_de_impresión y Auto_abrir — o nombres personalizados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee653-103">Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="ee653-104">
        <para>Usar el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> propiedad para devolver la colección <b>Names</b> .</para> Uso de 
      <para>el <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para crear un nombre y agregarlo a la colección. El método <b>Add</b><paramref name="RefersTo" /> argumento debe especificarse en notación de estilo A1, incluidos signos de dólar ($) donde corresponda. Por ejemplo, si se selecciona la celda A10 de Sheet1 y se define un nombre mediante el uso de la <paramref name="RefersTo" /> argumento "¡= sheet1! A1: B1 ", el nuevo nombre en realidad hace referencia a las celdas a10: B10 (debido a que se ha especificado una referencia relativa). Para especificar una referencia absoluta, use "¡= sheet1! $A$ 1: $B$ 1".</para><para>Utilizar <b>nombres</b>(<paramref name="index" />), donde <paramref name="index" /> es el número de índice del nombre o el nombre definido, para devolver un único objeto <b>Name</b> .</para><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="ee653-104">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> property to return the <b>Names</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a name and add it to the collection. The <b>Add</b> method's <paramref name="RefersTo" /> argument must be specified in A1-style notation, including dollar signs ($) where appropriate. For example, if cell A10 is selected on Sheet1 and you define a name by using the <paramref name="RefersTo" /> argument "=sheet1!A1:B1", the new name actually refers to cells A10:B10 (because you specified a relative reference). To specify an absolute reference, use "=sheet1!$A$1:$B$1".</para>
          <para>Use <b>Names</b>(<paramref name="index" />), where <paramref name="index" /> is the name index number or defined name, to return a single <b>Name</b> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name _Default (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name _Default([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <param name="IndexLocal">To be added.</param>
        <param name="RefersTo">To be added.</param>
        <summary>
          <span data-ttu-id="ee653-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Add (object Name, object RefersTo, object Visible, object MacroType, object ShortcutKey, object Category, object NameLocal, object RefersToLocal, object CategoryLocal, object RefersToR1C1, object RefersToR1C1Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Add([in]object Name, [in]object RefersTo, [in]object Visible, [in]object MacroType, [in]object ShortcutKey, [in]object Category, [in]object NameLocal, [in]object RefersToLocal, [in]object CategoryLocal, [in]object RefersToR1C1, [in]object RefersToR1C1Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
        <Parameter Name="MacroType" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="NameLocal" Type="System.Object" />
        <Parameter Name="RefersToLocal" Type="System.Object" />
        <Parameter Name="CategoryLocal" Type="System.Object" />
        <Parameter Name="RefersToR1C1" Type="System.Object" />
        <Parameter Name="RefersToR1C1Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="ee653-106">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-107">Requerido si <paramref name="NameLocal" /> no se especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-107">Required if <paramref name="NameLocal" /> isn't specified.</span>
          </span>
          <span data-ttu-id="ee653-108">El texto que se utilizará como el nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-108">The text to use as the name.</span>
          </span>
          <span data-ttu-id="ee653-109">Los nombres no pueden incluir espacios y no pueden parecerse a las referencias de celda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-109">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="ee653-110">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-111">Obligatorio a menos que una de las otras <paramref name="RefersTo" /> se especifica argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-111">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="ee653-112">Describe lo que hace referencia el nombre a (usando la notación de estilo A1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-112">Describes what the name refers to (using A1-style notation).</span>
          </span>
          <span data-ttu-id="ee653-113">
            <b>Nota</b> Se devuelve si la referencia no existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-113">
              <b>Note</b> Nothing is returned if the reference does not exist.</span>
          </span>
        </param>
        <param name="Visible">
          <span data-ttu-id="ee653-114">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-115">
            <b>True</b> para definir el nombre normalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-115">
              <b>True</b> to define the name normally.</span>
          </span>
          <span data-ttu-id="ee653-116">
            <b>False</b> para definir el nombre como oculto (es decir, no aparece en el cuadro de diálogo Definir nombre, Pegar nombre o Goto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-116">
              <b>False</b> to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box).</span>
          </span>
          <span data-ttu-id="ee653-117">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="MacroType">
          <span data-ttu-id="ee653-118">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-119">El tipo de macro, como se muestra en la siguiente tabla. 2Macro de función definida por el ValueMeaning1User (procedimiento<b>Function</b> ) (también conocido como procedimiento <b>Sub</b> ) 3 o omittedNone (es decir, el nombre no hace referencia a una función definida por el usuario o una macro)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-119">The macro type, as shown in the following table.ValueMeaning1User-defined function (<b>Function</b> procedure)2Macro (also known as <b>Sub</b> procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="ee653-120">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-121">La tecla de método abreviado de la macro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-121">The macro shortcut key.</span>
          </span>
          <span data-ttu-id="ee653-122">Debe ser una sola letra, como "z" o "Z".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-122">Must be a single letter, such as "z" or "Z".</span>
          </span>
          <span data-ttu-id="ee653-123">Se aplica únicamente para macros de comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-123">Applies only for command macros.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="ee653-124">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-125">La categoría de la macro o función si <paramref name="MacroType" /> es 1 o 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-125">The category of the macro or function if <paramref name="MacroType" /> is 1 or 2.</span>
          </span>
          <span data-ttu-id="ee653-126">La categoría se usa en el Asistente para la función.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-126">The category is used in the Function Wizard.</span>
          </span>
          <span data-ttu-id="ee653-127">Las categorías existentes se pueden contempladas por número (comenzando en 1) o por nombre (en el lenguaje de la macro).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-127">Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro).</span>
          </span>
          <span data-ttu-id="ee653-128">Microsoft Excel crea una nueva categoría si la categoría especificada ya no existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-128">Microsoft Excel creates a new category if the specified category doesn't already exist.</span>
          </span>
        </param>
        <param name="NameLocal">
          <span data-ttu-id="ee653-129">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-130">Requerido si <paramref name="Name" /> no se especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-130">Required if <paramref name="Name" /> isn't specified.</span>
          </span>
          <span data-ttu-id="ee653-131">El texto que se utilizará como el nombre (en el idioma del usuario).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-131">The text to use as the name (in the language of the user).</span>
          </span>
          <span data-ttu-id="ee653-132">Los nombres no pueden incluir espacios y no pueden parecerse a las referencias de celda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-132">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersToLocal">
          <span data-ttu-id="ee653-133">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-133">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-134">Obligatorio a menos que una de las otras <paramref name="RefersTo" /> se especifica argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-134">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="ee653-135">Describe lo que hace referencia el nombre (en el idioma del usuario, mediante la notación de estilo A1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-135">Describes what the name refers to (in the language of the user, using A1-style notation).</span>
          </span>
        </param>
        <param name="CategoryLocal">
          <span data-ttu-id="ee653-136">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-137">Requerido si <paramref name="Category" /> no se especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-137">Required if <paramref name="Category" /> isn't specified.</span>
          </span>
          <span data-ttu-id="ee653-138">Texto que identifica la categoría de una función personalizada en el idioma del usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-138">Text identifying the category of a custom function in the language of the user.</span>
          </span>
        </param>
        <param name="RefersToR1C1">
          <span data-ttu-id="ee653-139">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-140">Obligatorio a menos que una de las otras <paramref name="RefersTo" /> se especifica argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-140">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="ee653-141">Describe lo que hace referencia el nombre a (usando la notación de estilo R1C1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-141">Describes what the name refers to (using R1C1-style notation).</span>
          </span>
        </param>
        <param name="RefersToR1C1Local">
          <span data-ttu-id="ee653-142">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-143">Obligatorio a menos que una de las otras <paramref name="RefersTo" /> se especifica argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-143">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="ee653-144">Describe lo que hace referencia el nombre (en el idioma del usuario, mediante la notación de estilo F1C1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-144">Describes what the name refers to (in the language of the user, using R1C1-style notation).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee653-145">Define un nombre nuevo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-145">Defines a new name.</span>
          </span>
          <span data-ttu-id="ee653-146">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee653-147">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee653-148">Devuelve el número de objetos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-148">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="ee653-149">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-149">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee653-150">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-150">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="ee653-151">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="ee653-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="ee653-153">Propiedad de <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-153">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Item (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Item([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ee653-154">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-154">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-155">Nombre o número del nombre definido que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-155">The name or number of the defined name to be returned.</span>
          </span>
        </param>
        <param name="IndexLocal">
          <span data-ttu-id="ee653-156">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-156">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-157">El nombre del nombre definido en el idioma del usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-157">The name of the defined name in the language of the user.</span>
          </span>
          <span data-ttu-id="ee653-158">No hay nombres se traducirán si usa este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-158">No names will be translated if you use this argument.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="ee653-159">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="ee653-160">¿Qué hace referencia el nombre a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-160">What the name refers to.</span>
          </span>
          <span data-ttu-id="ee653-161">Utilice este argumento para identificar un nombre, por lo que se refiere a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-161">You use this argument to identify a name by what it refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee653-162">Devuelve un valor single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objeto desde una <see cref="T:Microsoft.Office.Interop.Excel.Names" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-162">Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="ee653-163">
            <para>Debe especificar uno y sólo uno de estos tres argumentos.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-163">
              <para>You must specify one, and only one, of these three arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee653-p119">Devuelve el objeto primario del objeto especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee653-p119">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>