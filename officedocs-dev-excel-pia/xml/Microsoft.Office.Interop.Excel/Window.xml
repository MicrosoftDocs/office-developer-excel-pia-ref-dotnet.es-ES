<Type Name="Window" FullName="Microsoft.Office.Interop.Excel.Window">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c49a6753e6ec53845aee64eafc52c6fc09004d7" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20577773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Window" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Window" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Window" />
  <TypeSignature Language="VB.NET" Value="Public Interface Window" />
  <TypeSignature Language="C++ CLI" Value="public interface class Window" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020893-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="28176-101">Representa una ventana.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28176-101">Represents a window.</span>
      </span>
      <span data-ttu-id="28176-102">Muchas de las características de hoja de cálculo, como las barras de desplazamiento y las líneas de división, en realidad son propiedades de la ventana.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28176-102">Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="28176-103">
        <para>El objeto <b>Window</b> es un miembro de la <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> colección. La colección <b>Windows</b> devuelta por la <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto contiene todas las ventanas de la aplicación, mientras que la colección <b>Windows</b> devuelto por la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto únicamente contiene las ventanas en el libro especificado.</para>
        <para>Usar <b>Windows</b>(<paramref name="index" />), donde <paramref name="index" /> es el nombre de la ventana o el número de índice, para devolver un único objeto <b>Window</b> .</para>
        <para>Tenga en cuenta que la ventana activa siempre es Windows (1).</para>
        <para>El título de la ventana es el texto que se muestra en la barra de título en la parte superior de la ventana cuando la ventana no está maximizada. El título también se muestra en la lista de archivos abiertos en la parte inferior del menú Ventana. Usar el <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> (propiedad) para establecer o devolver el título de la ventana. Cambiar el título de la ventana no cambia el nombre del libro.</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="28176-103">
          <para>The <b>Window</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection. The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</para>
          <para>Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</para>
          <para>Note that the active window is always Windows(1).</para>
          <para>The window caption is the text shown in the title bar at the top of the window when the window isn’t maximized. The caption is also shown in the list of open files on the bottom of the Windows menu. Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> property to set or return the window caption. Changing the window caption doesn’t change the name of the workbook.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-104">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28176-105">Sitúa la ventana en el primer plano del orden z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-105">Brings the window to the front of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-106">Método <para>la <b>Activar</b> no ejecuta ninguna macro Auto_activar o Auto_desactivar que esté adjunta al libro. Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> (método) para ejecutar macros.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-106">
              <para>The <b>Activate</b> method won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateNext">
      <MemberSignature Language="C#" Value="public object ActivateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivateNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivateNext" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivateNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28176-107">Activa la ventana especificada y, a continuación, se envía a la parte posterior del orden z de ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-107">Activates the specified window, and then sends it to the back of the window z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePrevious">
      <MemberSignature Language="C#" Value="public object ActivatePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivatePrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivatePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivatePrevious () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivatePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28176-108">Activa la ventana especificada y, a continuación, la que se encuentra detrás en el orden z de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-108">Activates the specified window and then activates the window at the back of the window z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-109">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa la celda activa en la ventana activa (la ventana superior) o en la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-109">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span>
          </span>
          <span data-ttu-id="28176-110">Si la ventana no contiene una hoja de cálculo, esta propiedad genera un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-110">If the window isn't displaying a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-111">
            <para>Si no se especifica un calificador de objeto, esta propiedad devuelve la celda activa en la ventana activa.</para>
            <para>Tener cuidado distinguir entre la celda activa y la selección. La celda activa es una sola celda dentro de la selección actual. La selección puede contener más de una celda, pero sólo una es la celda activa.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-111">
              <para>If you don't specify an object qualifier, this property returns the active cell in the active window.</para>
              <para>Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-112">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa el gráfico activo (un gráfico incrustado o una hoja de gráfico).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-112">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="28176-113">Un gráfico incrustado se considera activo cuando está seleccionado o activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-113">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="28176-114">Cuando no hay ningún gráfico está activo, esta propiedad devuelve <b>Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-114">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-115">
            <para>Si no se especifica un calificador de objeto, esta propiedad devuelve el gráfico activo del libro activo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-115">
              <para>If you don't specify an object qualifier, this property returns the active chart in the active workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePane">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Pane ActivePane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Pane ActivePane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActivePane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivePane As Pane" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Pane ^ ActivePane { Microsoft::Office::Interop::Excel::Pane ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Pane</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-116">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object que representa el panel activo en la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object that represents the active pane in the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-117">
            <para>Esta propiedad se puede usar únicamente en hojas de cálculo y hojas de macros.</para>
            <para>Usar el <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> (propiedad) para obtener el índice de la sección activa.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-117">
              <para>This property can be used only on worksheets and macro sheets.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property to obtain the index of the active pane.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-118">Devuelve un objeto object que representa la hoja activa (la hoja en la parte superior) en el libro activo o en la ventana especificada o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-118">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="28176-119">Devuelve <b>Nothing</b> si no está hoja activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-119">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-120">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-120">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="28176-121">
            <para>Si no se especifica un calificador de objeto, esta propiedad devuelve la hoja activa del libro activo.</para>
            <para>Si un libro aparece en más de una ventana, la propiedad <b>ActiveSheet</b> puede ser diferente en ventanas diferentes.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-121">
              <para>If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</para>
              <para>If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheetView">
      <MemberSignature Language="C#" Value="public object ActiveSheetView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheetView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheetView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheetView As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheetView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-p105">Devuelve un objeto que representa la vista de la hoja activa en la ventana especificada. Es de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-p105">Returns an object that represents the view of the active sheet in the specified window. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-124">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación de Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-124">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterDateGrouping">
      <MemberSignature Language="C#" Value="public bool AutoFilterDateGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterDateGrouping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.AutoFilterDateGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterDateGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterDateGrouping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-125">
            <b>True</b> si el Autofiltro de la agrupación de fechas se muestra actualmente en la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-125">
              <b>True</b> if the auto filter for date grouping is currently displayed in the specified window.</span>
          </span>
          <span data-ttu-id="28176-126">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-126">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-127">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-127">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public object Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caption { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-128">El nombre que aparece en la barra de título de la ventana de documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-128">The name that appears in the title bar of the document window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="28176-129">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-130">Si no hay ningún cambio en el libro, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-130">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="28176-131">Si hay cambios en el libro y el libro aparece en otras ventanas abiertas, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-131">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="28176-132">Si hay cambios en el libro, pero el libro no aparece en todas las ventanas abiertas, este argumento especifica si se deben guardar los cambios, tal como se muestra en la siguiente tabla. ValueAction<b>True</b>guarda los cambios en el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-132">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="28176-133">Si aún no tiene un nombre de archivo asociado con el libro y, a continuación, <paramref name="FileName" /> se usa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-133">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="28176-134">Si <paramref name="FileName" /> es se omite, el usuario se le pide que proporcione un nombre de archivo. <b>False</b> No guardar los cambios a este archivo. OmittedDisplays un cuadro de diálogo que le pregunta al usuario si desea guardar los cambios o no.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-134">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="28176-135">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-135">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-136">Guarda los cambios bajo este nombre de archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-136">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="28176-137">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-137">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-138">Si el libro no necesita redirigirse al siguiente destinatario (si no tiene ninguna lista de distribución o ya se ha distribuido), se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-138">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="28176-139">De lo contrario, Microsoft Excel distribuye el libro como se muestra en la siguiente tabla. ValueMeaning<b>True</b>envía el libro al siguiente destinatario. <b>False</b> No envía el libro. OmittedDisplays un cuadro de diálogo que pregunta al usuario si se debe enviar el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-139">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-140">Cierra el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-140">Closes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-141">Método <para><b>Close</b> no ejecuta ninguna macro Auto_Close en el libro. Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> (método) para ejecutar las automático cerrar macros.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-141">
              <para>The <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-142">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-142">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-143">
            <para>Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente a la C. 5843454 número hexadecimal</para> Propiedad de 
          <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-143">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulas">
      <MemberSignature Language="C#" Value="public bool DisplayFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-144">
            <b>True</b> si la ventana es mostrar fórmulas; <b>False</b> si la ventana muestra los valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-144">
              <b>True</b> if the window is displaying formulas; <b>False</b> if the window is displaying values.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-145">
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-145">
              <para>This property applies only to worksheets and macro sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayGridlines">
      <MemberSignature Language="C#" Value="public bool DisplayGridlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayGridlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayGridlines" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayGridlines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayGridlines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-146">
            <b>True</b> si se muestran las líneas de cuadrícula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-146">
              <b>True</b> if gridlines are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-147">
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para>Esta propiedad afecta sólo muestra las líneas de cuadrícula. Usar el <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> (propiedad) para controlar la impresión de líneas de división.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-147">
              <para>This property applies only to worksheets and macro sheets.</para>
              <para>This property affects only displayed gridlines. Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> property to control the printing of gridlines.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHeadings">
      <MemberSignature Language="C#" Value="public bool DisplayHeadings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHeadings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHeadings" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHeadings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHeadings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-148">
            <b>True</b> si se muestran los encabezados de fila y columna; <b>False</b> si no se mostrará ningún encabezado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-148">
              <b>True</b> if both row and column headings are displayed; <b>False</b> if there are no headings displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-149">
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para>Esta propiedad afecta únicamente a los encabezados visibles. Usar el <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> (propiedad) para controlar la impresión de los encabezados.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-149">
              <para>This property applies only to worksheets and macro sheets.</para>
              <para>This property affects only displayed headings. Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> property to control the printing of headings.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHorizontalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayHorizontalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHorizontalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHorizontalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-150">
            <b>True</b> si se muestra la barra de desplazamiento horizontal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-150">
              <b>True</b> if the horizontal scroll bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayOutline">
      <MemberSignature Language="C#" Value="public bool DisplayOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayOutline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayOutline" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayOutline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayOutline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-151">
            <b>True</b> si se muestran los símbolos de esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-151">
              <b>True</b> if outline symbols are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-152">
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-152">
              <para>This property applies only to worksheets and macro sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-153">
            <b>True</b> si la ventana especificada se muestra de derecha a izquierda en lugar de hacerlo de izquierda a derecha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-153">
              <b>True</b> if the specified window is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="28176-154">
            <b>False</b> si el objeto se muestra de izquierda a derecha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-154">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRuler">
      <MemberSignature Language="C#" Value="public bool DisplayRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRuler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRuler" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRuler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRuler { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-155">
            <b>True</b> si se muestra una regla para la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-155">
              <b>True</b> if a ruler is displayed for the specified window.</span>
          </span>
          <span data-ttu-id="28176-156">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-156">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-157">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-157">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayVerticalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayVerticalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayVerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayVerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayVerticalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayVerticalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-158">
            <b>True</b> si se muestra la barra de desplazamiento vertical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-158">
              <b>True</b> if the vertical scroll bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWhitespace">
      <MemberSignature Language="C#" Value="public bool DisplayWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWhitespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-159">
            <b>True</b> si se muestra un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-159">
              <b>True</b> if whitespace is displayed.</span>
          </span>
          <span data-ttu-id="28176-160">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-160">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-161">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-161">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWorkbookTabs">
      <MemberSignature Language="C#" Value="public bool DisplayWorkbookTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWorkbookTabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWorkbookTabs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWorkbookTabs { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-162">
            <b>True</b> si se muestran las fichas del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-162">
              <b>True</b> if the workbook tabs are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayZeros">
      <MemberSignature Language="C#" Value="public bool DisplayZeros { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayZeros" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayZeros" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayZeros As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayZeros { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-163">
            <b>True</b> si se muestran los valores cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-163">
              <b>True</b> if zero values are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-164">
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-164">
              <para>This property applies only to worksheets and macro sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-165">
            <b>True</b> si se puede cambiar el tamaño de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-165">
              <b>True</b> if the window can be resized.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezePanes">
      <MemberSignature Language="C#" Value="public bool FreezePanes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FreezePanes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" />
      <MemberSignature Language="VB.NET" Value="Public Property FreezePanes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FreezePanes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-166">
            <b>True</b> si las divisiones de secciones están inmovilizadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-166">
              <b>True</b> if split panes are frozen.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-167">
            <para>Es posible que <b>FreezePanes </b>sea <b>True</b> y <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> sea <b>False</b>, o viceversa.</para>
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-167">
              <para>It’s possible for <b>FreezePanes </b>to be <b>True</b> and <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> to be <b>False</b>, or vice versa.</para>
              <para>This property applies only to worksheets and macro sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColor">
      <MemberSignature Language="C#" Value="public int GridlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GridlineColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GridlineColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-168">Devuelve o establece el color de las líneas de división como un valor RGB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-168">Returns or sets the gridline color as an RGB value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex GridlineColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-169">Devuelve o establece el color de las líneas de división como un índice para la paleta de colores actual o como un <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-169">Returns or sets the gridline color as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-170">
            <para>Establecer esta propiedad como <b>xlColorIndexAutomatic</b> para especificar el color automático.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-170">
              <para>Set this property to <b>xlColorIndexAutomatic</b> to specify the automatic color.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-171">El alto de la ventana, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-171">The height of the window in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-172">Uso de <para>el <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> (propiedad) para determinar el tamaño máximo de la ventana. No se puede establecer esta propiedad si la ventana está maximizada o minimizada. Usar el <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> (propiedad) para determinar el estado de la ventana.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-172">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> property to determine the maximum size for the window. You cannot set this property if the window is maximized or minimized. Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-173">Devuelve el identificador de ventana de la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-173">Returns the window handle of the specified window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-174">Entero (int en C#)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-174">Integer (int in C#)</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-175">Devuelve el número de índice del objeto contenido en el conjunto de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-175">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeScroll">
      <MemberSignature Language="C#" Value="public object LargeScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LargeScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LargeScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down">
          <span data-ttu-id="28176-176">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-177">Número de páginas hacia abajo que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-177">The number of pages to scroll the contents down.</span>
          </span>
        </param>
        <param name="Up">
          <span data-ttu-id="28176-178">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-178">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-179">Número de páginas hacia arriba que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-179">The number of pages to scroll the contents up.</span>
          </span>
        </param>
        <param name="ToRight">
          <span data-ttu-id="28176-180">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-180">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-181">Número de páginas hacia la derecha que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-181">The number of pages to scroll the contents to the right.</span>
          </span>
        </param>
        <param name="ToLeft">
          <span data-ttu-id="28176-182">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-183">Número de páginas hacia la izquierda que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-183">The number of pages to scroll the contents to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-184">Desplaza el contenido de la ventana por páginas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-184">Scrolls the contents of the window by pages.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-185">
            <para>Si <paramref name="Down" /> y <paramref name="Up" /> se especifican, el contenido de la ventana se desplazará según la diferencia de los argumentos. Por ejemplo, si <paramref name="Down" /> es 3 y <paramref name="Up" /> es 6, el contenido se desplaza tres páginas hacia arriba.</para>
            <para>Si <paramref name="ToLeft" /> y <paramref name="ToRight" /> se especifican, el contenido de la ventana se desplazará según la diferencia de los argumentos. Por ejemplo, si <paramref name="ToLeft" /> es 3 y <paramref name="ToRight" /> es 6, el contenido se desplaza hacia la derecha tres páginas.</para>
            <para>Cualquiera de los argumentos puede ser un número negativo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-185">
              <para>If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments. For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three pages.</para>
              <para>If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments. For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three pages.</para>
              <para>Any of the arguments can be a negative number.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-186">La distancia en puntos desde el borde izquierdo del área de cliente hasta el borde izquierdo de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-186">The distance in points from the left edge of the client area to the left edge of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28176-187">Crea una ventana nueva o una copia de la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-187">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-188">Devuelve o establece el nombre del procedimiento que se ejecuta cuando se activa una ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-188">Returns or sets the name of the procedure that’s run whenever you activate a window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-189">
            <para>El procedimiento especificado por esta propiedad no se ejecuta cuando otros procedimientos cambian a la ventana o cuando se recibe un comando para cambiar a una ventana a través de un canal DDE. En su lugar, el procedimiento responde a las acciones del usuario, como hacer clic en una ventana con el mouse, hacer clic en Ir a en el menú Editar y así sucesivamente.</para>
            <para>Si una hoja de cálculo u hoja de macro tiene definida una macro Auto_activar o Auto_desactivar, las macros se ejecutarán después del procedimiento especificado por la propiedad <b>OnWindow</b> .</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-189">
              <para>The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel. Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</para>
              <para>If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Panes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Panes Panes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Panes Panes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Panes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Panes As Panes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Panes ^ Panes { Microsoft::Office::Interop::Excel::Panes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Panes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-190">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> colección que representa todos los paneles en la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-190">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> collection that represents all the panes in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-191">
            <para>Esta propiedad está disponible para un sólo si ventana de la ventana <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> propiedad se puede establecer en <b>True</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-191">
              <para>This property is available for a window only if the window’s <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> property can be set to <b>True</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-192">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-192">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsX">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsX (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsX([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsX (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsX(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points">
          <span data-ttu-id="28176-193">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-193">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-194">Número de puntos en horizontal a lo largo de la parte superior de la ventana del documento, empezando por la izquierda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-194">The number of points horizontally along the top of the document window, starting from the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-195">Convierte una medida horizontal en puntos (coordenadas de documento) a píxeles de pantalla (coordenadas de pantalla).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-195">Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsY">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsY (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsY([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsY (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsY(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points">
          <span data-ttu-id="28176-196">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-196">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-197">Número de puntos en vertical a lo largo del borde izquierdo de la ventana del documento, empezando por la parte superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-197">The number of points vertically along the left edge of the document window, starting from the top.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-198">Convierte una medida vertical en puntos (coordenadas de documento) a píxeles de pantalla (coordenadas de pantalla).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-198">Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="28176-199">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-199">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-200">El número de la página en la que se va a iniciar la impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-200">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="28176-201">Si se omite este argumento, la impresión comienza al principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-201">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="28176-202">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-203">El número de la última página a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-203">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="28176-204">Si se omite este argumento, la impresión finaliza con la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-204">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="28176-205">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-205">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-206">El número de copias que se va a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-206">The number of copies to print.</span>
          </span>
          <span data-ttu-id="28176-207">Si se omite este argumento, se imprime una copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-207">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="28176-208">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-208">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-209">
            <b>True</b> para que Microsoft Excel invoque la vista preliminar antes de imprimir el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-209">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="28176-210">
            <b>False</b> (o se omite) para imprimir el objeto inmediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-210">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="28176-211">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-211">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-212">Establece el nombre de la impresora activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-212">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="28176-213">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-214">
            <b>True</b> para imprimir en un archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-214">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="28176-215">Si <paramref name="PrToFileName" /> no se especifica, Microsoft Excel solicita al usuario que escriba el nombre del archivo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-215">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="28176-216">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-216">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-217">
            <b>True</b> para intercalar múltiples copias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-217">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="28176-218">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-218">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-219">Si <paramref name="PrintToFile" /> está establecida en <b>True</b>, este argumento especifica el nombre del archivo que desea imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-219">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-220">Imprime el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-220">Prints the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-221">
            <para>"Páginas" en las descripciones de <paramref name="From" /> y <paramref name="To" /> hace referencia a las páginas impresas, no total de páginas de la hoja o libro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-221">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="28176-222">Permite cambios durante la vista previa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-222">Enables changes during preview.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-223">Muestra una vista preliminar del objeto tal como aparecería impreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-223">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public object RangeFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RangeFromPoint([in]int32 x, [in]int32 y) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (x As Integer, y As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RangeFromPoint(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="28176-224">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-224">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-225">Valor (en píxeles) que representa la distancia horizontal desde el borde izquierdo de la pantalla, empezando por la parte superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-225">The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="28176-226">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-226">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-227">Valor (en píxeles) que representa la distancia vertical desde la parte superior de la pantalla, empezando por la izquierda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-227">The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-228">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> o <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que está situado en el par de coordenadas de pantalla especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-228">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is positioned at the specified pair of screen coordinates.</span>
          </span>
          <span data-ttu-id="28176-229">Si no hay una forma que se encuentra en las coordenadas especificadas, este método devuelve <b>Nothing</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-229">If there isn’t a shape located at the specified coordinates, this method returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RangeSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RangeSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.RangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RangeSelection As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RangeSelection { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-230">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa las celdas seleccionadas en la hoja de cálculo en la ventana especificada aunque un objeto gráfico esté activo o seleccionado en la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-230">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the selected cells on the worksheet in the specified window even if a graphic object is active or selected on the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-231">
            <para>Cuando se selecciona un objeto gráfico en una hoja de cálculo, el <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> propiedad devuelve el objeto gráfico en lugar de un objeto <b>Range</b> ; la propiedad <b>RangeSelection</b> devuelve el rango de celdas que se ha seleccionado antes de que se ha seleccionado el objeto graphic.</para>
            <para>Esta propiedad y la propiedad <b>Selection</b> devuelven valores idénticos cuando se selecciona un rango (no un objeto gráfico) en la hoja de cálculo.</para>
            <para>Si la hoja activa en la ventana especificada no es una hoja de cálculo, esta propiedad se produce un error.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-231">
              <para>When a graphic object is selected on a worksheet, the <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> property returns the graphic object instead of a <b>Range</b> object; the <b>RangeSelection</b> property returns the range of cells that was selected before the graphic object was selected.</para>
              <para>This property and the <b>Selection</b> property return identical values when a range (not a graphic object) is selected on the worksheet.</para>
              <para>If the active sheet in the specified window isn’t a worksheet, this property fails.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollColumn">
      <MemberSignature Language="C#" Value="public int ScrollColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-232">Devuelve o establece el número de la columna más a la izquierda de la ventana o el panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-232">Returns or sets the number of the leftmost column in the pane or window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-233">
            <para>Si la ventana está dividida, la propiedad <b>ScrollColumn</b> de la <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objeto hace referencia a la sección superior izquierda. Si las secciones están inmovilizadas, la propiedad <b>ScrollColumn</b> del objeto <b>Window</b> excluye las áreas inmovilizadas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-233">
              <para>If the window is split, the <b>ScrollColumn</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane. If the panes are frozen, the <b>ScrollColumn</b> property of the <b>Window</b> object excludes the frozen areas.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (int Left, int Top, int Width, int Height, object Start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView([in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height, [in]object Start) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (Left As Integer, Top As Integer, Width As Integer, Height As Integer, Optional Start As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
        <Parameter Name="Start" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="28176-234">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-234">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-235">Posición horizontal del rectángulo (en puntos) desde el borde izquierdo de la ventana o panel del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-235">The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</span>
          </span>
        </param>
        <param name="Top">
          <span data-ttu-id="28176-236">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-236">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-237">Posición vertical del rectángulo (en puntos) desde la parte superior de la ventana o panel del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-237">The vertical position of the rectangle (in points) from the top of the document window or pane.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="28176-238">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-238">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-239">Ancho del rectángulo, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-239">The width of the rectangle, in points.</span>
          </span>
        </param>
        <param name="Height">
          <span data-ttu-id="28176-240">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-240">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-241">Alto del rectángulo, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-241">The height of the rectangle, in points.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="28176-242">
            <b>Integer</b> opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-242">Optional <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="28176-243">
            <b>True</b> para que la esquina superior izquierda del rectángulo aparecen en la esquina superior izquierda de la ventana de documento o el panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-243">
              <b>True</b> to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane.</span>
          </span>
          <span data-ttu-id="28176-244">
            <b>False</b> para que la esquina inferior derecha del rectángulo aparezca en la esquina inferior derecha de la ventana de documento o el panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-244">
              <b>False</b> to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane.</span>
          </span>
          <span data-ttu-id="28176-245">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-245">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-246">Desplaza la ventana del documento para que se muestra el contenido de un área rectangular especificada en la esquina superior izquierda o inferior derecha de la ventana de documento o el panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-246">Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="28176-247">
            <para>La <paramref name="Start" /> argumento es útil para orientar la presentación de la pantalla cuando el rectángulo es más grande que la ventana de documento o panel.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-247">
              <para>The <paramref name="Start" /> argument is useful for orienting the screen display when the rectangle is larger than the document window or pane.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRow">
      <MemberSignature Language="C#" Value="public int ScrollRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-248">Devuelve o establece el número de la fila que aparece en la parte superior de la ventana o el panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-248">Returns or sets the number of the row that appears at the top of the pane or window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-249">
            <para>Si la ventana está dividida, la propiedad <b>ScrollRow</b> de la <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objeto hace referencia a la sección superior izquierda. Si las secciones están inmovilizadas, la propiedad <b>ScrollRow</b> del objeto <b>Window</b> excluye las áreas inmovilizadas.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-249">
              <para>If the window is split, the <b>ScrollRow</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane. If the panes are frozen, the <b>ScrollRow</b> property of the <b>Window</b> object excludes the frozen areas.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWorkbookTabs">
      <MemberSignature Language="C#" Value="public object ScrollWorkbookTabs (object Sheets, object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollWorkbookTabs([in]object Sheets, [in]object Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollWorkbookTabs (Optional Sheets As Object, Optional Position As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sheets" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sheets">
          <span data-ttu-id="28176-250">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-250">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-251">El número de hojas que se desplazará por.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-251">The number of sheets to scroll by.</span>
          </span>
          <span data-ttu-id="28176-252">Use un número positivo para desplazar hacia delante, un número negativo para desplazar hacia atrás o 0 (cero) que no se desplazará en absoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-252">Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all.</span>
          </span>
          <span data-ttu-id="28176-253">Debe especificar <paramref name="Sheets" /> si no se especifica <paramref name="Position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-253">You must specify <paramref name="Sheets" /> if you don't specify <paramref name="Position" />.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="28176-254">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-254">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-255">Use <b>xlFirst</b> para desplazarse a la primera hoja, o use <b>xlLast</b> para desplazarse a la última hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-255">Use <b>xlFirst</b> to scroll to the first sheet, or use <b>xlLast</b> to scroll to the last sheet.</span>
          </span>
          <span data-ttu-id="28176-256">Debe especificar <paramref name="Position" /> si no se especifica <paramref name="Sheets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-256">You must specify <paramref name="Position" /> if you don't specify <paramref name="Sheets" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-257">Se desplaza por las fichas del libro en la parte inferior de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-257">Scrolls through the workbook tabs at the bottom of the window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-258">
            <para>El método <b>ScrollWorkbookTabs</b> no afecta a la hoja activa del libro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-258">
              <para>The <b>ScrollWorkbookTabs</b> method doesn't affect the active sheet in the workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets SelectedSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets SelectedSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SelectedSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ SelectedSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-259">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas seleccionadas en la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the selected sheets in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-260">Devuelve el objeto seleccionado en la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-260">Returns the selected object in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-261">
            <para>El tipo de objeto devuelto depende de la selección actual (por ejemplo, si se selecciona una celda, esta propiedad devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto). La propiedad <b>Selection</b> devuelve <b>Nothing</b> si no se selecciona nada.</para>
            <para>Uso de esta propiedad sin calificador de objeto equivale a usar el <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-261">
              <para>The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object). The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</para>
              <para>Using this property with no object qualifier is equivalent to using the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SheetViews SheetViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SheetViews SheetViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SheetViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SheetViews As SheetViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SheetViews ^ SheetViews { Microsoft::Office::Interop::Excel::SheetViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SheetViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-262">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> objeto de la ventana especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-262">Returns the <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> object for the specified window.</span>
          </span>
          <span data-ttu-id="28176-263">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-263">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28176-264">
            <b>SheetViews</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-264">
              <b>SheetViews</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallScroll">
      <MemberSignature Language="C#" Value="public object SmallScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SmallScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SmallScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down">
          <span data-ttu-id="28176-265">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-265">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-266">Número de filas hacia abajo que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-266">The number of rows to scroll the contents down.</span>
          </span>
        </param>
        <param name="Up">
          <span data-ttu-id="28176-267">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-268">Número de filas hacia arriba que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-268">The number of rows to scroll the contents up.</span>
          </span>
        </param>
        <param name="ToRight">
          <span data-ttu-id="28176-269">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-269">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-270">Número de columnas hacia la derecha que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-270">The number of columns to scroll the contents to the right.</span>
          </span>
        </param>
        <param name="ToLeft">
          <span data-ttu-id="28176-271">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-271">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="28176-272">Número de columnas hacia la izquierda que se desplazará el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-272">The number of columns to scroll the contents to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28176-273">Desplaza el contenido de la ventana por filas o columnas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-273">Scrolls the contents of the window by rows or columns.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="28176-274">
            <para>Si <paramref name="Down" /> y <paramref name="Up" /> se especifican, el contenido de la ventana se desplazará según la diferencia de los argumentos. Por ejemplo, si <paramref name="Down" /> es 3 y <paramref name="Up" /> es 6, el contenido se desplaza tres filas hacia arriba.</para>
            <para>Si <paramref name="ToLeft" /> y <paramref name="ToRight" /> se especifican, el contenido de la ventana se desplazará según la diferencia de los argumentos. Por ejemplo, si <paramref name="ToLeft" /> es 3 y <paramref name="ToRight" /> es 6, el contenido se desplaza hacia la derecha tres columnas.</para>
            <para>Cualquiera de estos argumentos puede ser un número negativo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-274">
              <para>If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments. For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three rows.</para>
              <para>If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments. For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three columns.</para>
              <para>Any of these arguments can be a negative number.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public bool Split { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Split" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Split" />
      <MemberSignature Language="VB.NET" Value="Public Property Split As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Split { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-275">
            <b>True</b> si la ventana está dividida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-275">
              <b>True</b> if the window is split.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-276">
            <para>Es posible que <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> como <b>True</b> y <b>Split</b> sea <b>False</b>, o viceversa.</para>
            <para>Esta propiedad se aplica solamente a hojas de cálculo y hojas de macros.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-276">
              <para>It’s possible for <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> to be <b>True</b> and <b>Split</b> to be <b>False</b>, or vice versa.</para>
              <para>This property applies only to worksheets and macro sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitColumn">
      <MemberSignature Language="C#" Value="public int SplitColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-277">Devuelve o establece el número de columna donde la ventana está dividida en secciones (el número de columnas a la izquierda de la línea de división).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-277">Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitHorizontal">
      <MemberSignature Language="C#" Value="public double SplitHorizontal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitHorizontal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitHorizontal" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitHorizontal As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitHorizontal { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-278">Devuelve o establece la ubicación de la ventana de división horizontal, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-278">Returns or sets the location of the horizontal window split in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitRow">
      <MemberSignature Language="C#" Value="public int SplitRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitRow" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-279">Devuelve o establece el número de fila donde la ventana está dividida en secciones (el número de filas por encima de la división).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-279">Returns or sets the row number where the window is split into panes (the number of rows above the split).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitVertical">
      <MemberSignature Language="C#" Value="public double SplitVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitVertical As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitVertical { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-280">Devuelve o establece la ubicación de la ventana de división vertical, en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-280">Returns or sets the location of the vertical window split in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabRatio">
      <MemberSignature Language="C#" Value="public double TabRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TabRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.TabRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property TabRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TabRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-281">Devuelve o establece la proporción del ancho del área de la ficha del libro al ancho de la barra de desplazamiento horizontal de la ventana (como un número entre 0 (cero) y 1; el valor predeterminado es 0,6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-281">Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-282">
            <para>Esta propiedad no tiene ningún efecto cuando <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> se establece en <b>False</b> (se conserva su valor, pero no tiene ningún efecto en la presentación).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-282">
              <para>This property has no effect when <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> is set to <b>False</b> (its value is retained, but it has no effect on the display).</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-283">La distancia en puntos desde el borde superior de la ventana hasta el borde superior del área utilizable (debajo de los menús, las barras de herramientas acoplados en la parte superior y la barra de fórmulas).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-283">The distance in points from the top edge of the window to the top edge of the usable area (below the menus, any toolbars docked at the top, and the formula bar).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-284">
            <para>No se puede establecer esta propiedad para una ventana maximizada. Usar el <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> (propiedad) para devolver o establecer el estado de la ventana.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-284">
              <para>You cannot set this property for a maximized window. Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to return or set the state of the window.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlWindowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowType Type { Microsoft::Office::Interop::Excel::XlWindowType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-285">Devuelve o establece el tipo de ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-285">Returns or sets the window type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-286">Devuelve el alto máximo de puntos del espacio que puede ocupar una ventana en el área de la ventana de aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-286">Returns the maximum height in points of the space that a window can occupy in the application window area.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-287">Devuelve el ancho máximo de puntos del espacio que puede ocupar una ventana en el área de la ventana de aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-287">Returns the maximum width in points of the space that a window can occupy in the application window area.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowView View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As XlWindowView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowView View { Microsoft::Office::Interop::Excel::XlWindowView get(); void set(Microsoft::Office::Interop::Excel::XlWindowView value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-288">Devuelve o establece la vista que se muestra en la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-288">Returns or sets the view showing in the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-289">Determina si el objeto es visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-289">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range VisibleRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range VisibleRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.VisibleRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ VisibleRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-290">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object que representa el rango de celdas que están visibles en la ventana o panel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-290">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the window or pane.</span>
          </span>
          <span data-ttu-id="28176-291">Si una columna o fila está visible parcialmente, se incluye en el intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-291">If a column or row is partially visible, it's included in the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-292">El ancho en puntos de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-292">The width in points of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-293">Uso de <para>el <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> (propiedad) para determinar el tamaño máximo de la ventana. No se puede establecer esta propiedad si la ventana está maximizada o minimizada. Usar el <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> (propiedad) para determinar el estado de la ventana.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-293">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> property to determine the maximum size for the window. You cannot set this property if the window is maximized or minimized. Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNumber">
      <MemberSignature Language="C#" Value="public int WindowNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-294">Devuelve el número de ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-294">Returns the window number.</span>
          </span>
          <span data-ttu-id="28176-295">Por ejemplo, una ventana denominada "Book1.xls:2" tiene como número de ventana 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-295">For example, a window named "Book1.xls:2" has 2 as its window number.</span>
          </span>
          <span data-ttu-id="28176-296">Mayoría de las ventanas tiene el número 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-296">Most windows have the window number 1.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-297">
            <para>El número de ventana no es lo mismo que el índice de ventana (el valor devuelto de la <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> (propiedad)), que es la posición de la ventana dentro de la <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> colección.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-297">
              <para>The window number isn't the same as the window index (the return value of the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property), which is the position of the window within the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-298">Devuelve o establece el estado de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-298">Returns or sets the state of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public object Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Zoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Zoom { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28176-299">Devuelve o establece el tamaño de pantalla de la ventana como un porcentaje (100 equivale al tamaño normal, 200 equivale al doble etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-299">Returns or sets the display size of the window as a percentage (100 equals normal size, 200 equals double size, and so on).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="28176-300">
            <para>También puede establecer esta propiedad en <b>True</b> para ajustar el tamaño de la ventana de la selección actual.</para>
            <para>Esta función afecta sólo la hoja que está actualmente activa en la ventana. Para usar esta propiedad en otras hojas, se debe activar primero.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="28176-300">
              <para>You can also set this property to <b>True</b> to make the window size fit the current selection.</para>
              <para>This function affects only the sheet that's currently active in the window. To use this property on other sheets, you must first activate them.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>