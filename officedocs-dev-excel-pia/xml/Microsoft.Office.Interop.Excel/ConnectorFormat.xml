<Type Name="ConnectorFormat" FullName="Microsoft.Office.Interop.Excel.ConnectorFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15dfc4a010303c9d647a7f5b002c66763a3fdc79" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20586117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ConnectorFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ConnectorFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ConnectorFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ConnectorFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a309f-101">Contiene propiedades y métodos aplicables a conectores.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a309f-101">Contains properties and methods that apply to connectors.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="a309f-102">
        <para>Un conector es una línea que une dos formas en puntos denominados sitios de conexión. Si se reorganizan formas conectadas, la geometría del conector se ajustará automáticamente para que las formas permanezcan conectadas.</para> Uso de 
      <para>el <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> (propiedad) para devolver un objeto <b>ConnectorFormat</b> . Usar el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> y <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> métodos para unir el final del conector a otras formas del documento. Usar el <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> método para encontrar automáticamente la ruta más corta entre las dos formas conectadas por el conector. Usar el <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> (propiedad) para ver si una forma es un conector.</para> Tenga en cuenta que se asigna un tamaño y una posición cuando se agrega un conector a 
      <para>el <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección, pero el tamaño y posición se ajustan automáticamente al unir el principio y el final del conector a otras formas de la colección. Por lo tanto, si va a adjuntar un conector a otras formas, el tamaño inicial y la posición que se especifique son irrelevantes. Del mismo modo, especifica qué sitios de conexión en una forma para adjuntar el conector a cuando se une el conector, pero utiliza el método <b>RerouteConnections</b> después el conector se adjunta pueden cambiar los sitios de conexión se une el conector, para facilitar su elección original de los sitios de conexión sea irrelevante.</para><para>Los sitios de conexión suelen enumerarse según las reglas presentadas en la siguiente tabla.</para><list type="table"><item><term>Objetos autoformas, WordArt, imágenes y OLE</term><description>los sitios de conexión se numeran comenzando en la parte superior y a la izquierda para continuar.</description></item><item><term>Formas libres</term><description>los sitios de conexión son los vértices, y corresponden a los números de vértice.</description></item></list><para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="a309f-102">
          <para>A connector is a line that attaches two other shapes at points called connection sites. If you rearrange shapes that are connected, the geometry of the connector will be automatically adjusted so that the shapes remain connected.</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> property to return a <b>ConnectorFormat</b> object. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> and <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> methods to attach the ends of the connector to other shapes in the document. Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method to automatically find the shortest path between the two shapes connected by the connector. Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> property to see whether a shape is a connector.</para>
          <para>Note that you assign a size and a position when you add a connector to the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection, but the size and position are automatically adjusted when you attach the beginning and end of the connector to other shapes in the collection. Therefore, if you intend to attach a connector to other shapes, the initial size and position you specify are irrelevant. Likewise, you specify which connection sites on a shape to attach the connector to when you attach the connector, but using the <b>RerouteConnections</b> method after the connector is attached may change which connection sites the connector attaches to, making your original choice of connection sites irrelevant.</para>
          <para>Connection sites are generally numbered according to the rules presented in the following table.</para>
          <list type="table">
            <item>
              <term>AutoShapes, WordArt, pictures, and OLE objects</term>
              <description>The connection sites are numbered starting at the top and proceeding counterclockwise.</description>
            </item>
            <item>
              <term>Freeforms</term>
              <description>The connection sites are the vertices, and they correspond to the vertex numbers.</description>
            </item>
          </list>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-103">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public void BeginConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="a309f-104">Requiere <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-104">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="a309f-105">Para unir el principio del conector a la forma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-105">The shape to attach the beginning of the connector to.</span>
          </span>
          <span data-ttu-id="a309f-106">El objeto <b>Shape</b> especificado debe estar en el mismo <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección como el conector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-106">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="a309f-107">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-107">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a309f-108">Un sitio de conexión en la forma especificada por <paramref name="ConnectedShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-108">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="a309f-109">Debe ser un entero entre 1 y el entero devuelto por la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> (propiedad) de la forma especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-109">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="a309f-110">Si desea que el conector busque automáticamente la ruta más corta entre las dos formas que conecta, especifique cualquier entero válido para este argumento y, a continuación, use la <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> método después de que el conector esté unido a las formas en ambos extremos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-110">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a309f-111">Une el principio del conector especificado a una forma especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-111">Attaches the beginning of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a309f-112">
            <para>Si ya existe una conexión entre el principio del conector y otra forma, que la conexión se interrumpe. Si el principio del conector ya no está situado en el sitio de conexión especificado, este método mueve el principio del conector al sitio de conexión y ajusta el tamaño y la posición del conector. Usar el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> (método) para unir el final del conector a una forma.</para>
            <para>Cuando se une un conector a un objeto, el tamaño y la posición del conector se ajustan automáticamente si es necesario.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-112">
              <para>If there’s already a connection between the beginning of the connector and another shape, that connection is broken. If the beginning of the connector isn’t already positioned at the specified connecting site, this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the end of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState BeginConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState BeginConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState BeginConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-113">
            <b>True</b> si el principio del conector especificado está conectado a una forma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-113">
              <b>True</b> if the beginning of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-114">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />puede ser una de las siguientes constantes <b>MsoTriState</b> :</para>
            <para>
              <b>msoCTrue</b>
            </para>
            <para>
              <b>msoFalse</b>
            </para>
            <para>
              <b>msoTriStateMixed</b>
            </para>
            <para>
              <b>msoTriStateToggle</b>
            </para>
            <para>
              <b>msoTrue</b> el principio del conector especificado está conectado a una forma.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-114">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoCTrue</b>
              </para>
              <para>
                <b>msoFalse</b>
              </para>
              <para>
                <b>msoTriStateMixed</b>
              </para>
              <para>
                <b>msoTriStateToggle</b>
              </para>
              <para>
                <b>msoTrue</b> The beginning of the specified connector is connected to a shape.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape BeginConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape BeginConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ BeginConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-115">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma a la que se unirá el principio del conector especificado a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-116">
            <para>Si el principio del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-116">
              <para>If the beginning of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectionSite">
      <MemberSignature Language="C#" Value="public int BeginConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeginConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BeginConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-117">Devuelve un entero que especifica el sitio de conexión al que está unido el final del conector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-117">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-118">
            <para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-118">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public void BeginDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1753)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a309f-119">Separa el principio del conector especificado de la forma que está unido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-119">Detaches the beginning of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a309f-120">
            <para>El método <b>BeginDisconnect</b> no modifica el tamaño ni la posición del conector. El principio del conector sigue colocado en un sitio de conexión pero ya no está conectado. Usar el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> (método) para separar el final del conector de una forma.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-120">
              <para>The <b>BeginDisconnect</b> method doesn’t alter the size or position of the connector. The beginning of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> method to detach the end of the connector from a shape.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-121">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-122">
            <para>Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente a la C. 5843454 número hexadecimal</para> Propiedad de 
          <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-122">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1754)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="a309f-123">Requiere <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-123">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="a309f-124">Para unir el final del conector a la forma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-124">The shape to attach the end of the connector to.</span>
          </span>
          <span data-ttu-id="a309f-125">El objeto <b>Shape</b> especificado debe estar en el mismo <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección como el conector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-125">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="a309f-126">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-126">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="a309f-127">Un sitio de conexión en la forma especificada por <paramref name="ConnectedShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-127">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="a309f-128">Debe ser un entero entre 1 y el entero devuelto por la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> (propiedad) de la forma especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-128">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="a309f-129">Si desea que el conector busque automáticamente la ruta más corta entre las dos formas que conecta, especifique cualquier entero válido para este argumento y, a continuación, use la <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> método después de que el conector esté unido a las formas en ambos extremos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-129">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a309f-130">Une el final del conector especificado a una forma especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-130">Attaches the end of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a309f-131">
            <para>Si ya existe una conexión entre el final del conector y otra forma, que la conexión se interrumpe. Si el final del conector ya no está situado en el sitio de conexión especificado, este método mueve el final del conector al sitio de conexión y ajusta el tamaño y la posición del conector. Usar el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> (método) para unir el principio del conector a una forma.</para>
            <para>Cuando se une un conector a un objeto, el tamaño y la posición del conector se ajustan automáticamente si es necesario.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-131">
              <para>If there’s already a connection between the end of the connector and another shape, that connection is broken. If the end of the connector isn’t already positioned at the specified connecting site, this method moves the end of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the beginning of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState EndConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState EndConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState EndConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-132">
            <b>msoTrue</b> si el final del conector especificado está conectado a una forma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-132">
              <b>msoTrue</b> if the end of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-133">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />puede ser una de las siguientes constantes <b>MsoTriState</b> :</para>
            <para>
              <b>msoFalse</b> el final del conector especificado no está conectado a una forma.</para>
            <para>
              <b>msoTrue</b> el final del conector especificado está conectado a una forma.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-133">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoFalse</b> The end of the specified connector is not connected to a shape.</para>
              <para>
                <b>msoTrue</b> The end of the specified connector is connected to a shape.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape EndConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape EndConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ EndConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-134">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma a la que se unirá el final del conector especificado a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-134">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the end of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-135">
            <para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-135">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectionSite">
      <MemberSignature Language="C#" Value="public int EndConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-136">Devuelve un entero que especifica el sitio de conexión al que está unido el final del conector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-136">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-137">
            <para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-137">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1755)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a309f-138">Separa el final del conector especificado de la forma que está unido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-138">Detaches the end of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a309f-139">
            <para>Este método no modifica el tamaño ni la posición del conector; el final del conector sigue colocado en un sitio de conexión pero ya no está conectado. Usar el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> (método) para separar el principio del conector de una forma.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-139">
              <para>This method doesn’t alter the size or position of the connector; the end of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> method to detach the beginning of the connector from a shape.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-140">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-140">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoConnectorType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoConnectorType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As MsoConnectorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoConnectorType Type { Microsoft::Office::Core::MsoConnectorType get(); void set(Microsoft::Office::Core::MsoConnectorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoConnectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a309f-141">Devuelve o establece el conector de tipo de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-141">Returns or sets the connector format type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a309f-142">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoConnectorType" />puede ser una de las siguientes constantes <b>MsoConnectorType</b> :</para>
            <para>
              <b>msoConnectorCurve</b>
            </para>
            <para>
              <b>msoConnectorElbow</b>
            </para>
            <para>
              <b>msoConnectorStraight</b>
            </para>
            <para>
              <b>msoConnectorTypeMixed</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a309f-142">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> can be one of the following <b>MsoConnectorType</b> constants:</para>
              <para>
                <b>msoConnectorCurve</b>
              </para>
              <para>
                <b>msoConnectorElbow</b>
              </para>
              <para>
                <b>msoConnectorStraight</b>
              </para>
              <para>
                <b>msoConnectorTypeMixed</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>