<Type Name="Protection" FullName="Microsoft.Office.Interop.Excel.Protection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9996163076ffe6bcb7674a54fe7b673141d992b" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20585193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Protection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Protection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Protection" />
  <TypeSignature Language="VB.NET" Value="Public Interface Protection" />
  <TypeSignature Language="C++ CLI" Value="public interface class Protection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024467-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a64ec-101">Representa los diversos tipos de opciones de protección disponibles para una hoja de cálculo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a64ec-101">Represents the various types of protection options available for a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="a64ec-102">Usar el <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto para devolver un objeto <b>Protection</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="a64ec-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return a <b>Protection</b> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="a64ec-103">Cuando haya obtenido un objeto <b>Protection</b> , puede usar las siguientes propiedades para establecer o devolver opciones de protección:</span>
        <span class="sxs-lookup">
          <span data-stu-id="a64ec-103">Once a <b>Protection</b> object is returned, you can use the following properties to set or return protection options:</span>
        </span>
      </para>
      <list type="bullet">
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
          </description>
        </item>
      </list>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowDeletingColumns">
      <MemberSignature Language="C#" Value="public bool AllowDeletingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-104">Devuelve <b>True</b> si está permitida la eliminación de columnas en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-104">Returns <b>True</b> if the deletion of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-105">La propiedad <b>AllowDeletingColumns</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-105">The <b>AllowDeletingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-106">Las columnas que contienen las celdas que se van a eliminar se deben desbloquear cuando la hoja está protegida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-106">The columns containing the cells to be deleted must be unlocked when the sheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDeletingRows">
      <MemberSignature Language="C#" Value="public bool AllowDeletingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-107">Devuelve <b>True</b> si está permitida la eliminación de filas en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-107">Returns <b>True</b> if the deletion of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-108">La propiedad <b>AllowDeletingRows</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-108">The <b>AllowDeletingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-109">Las filas que contienen las celdas que se van a eliminar se deben desbloquear cuando la hoja está protegida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-109">The rows containing the cells to be deleted must be unlocked when the sheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEditRanges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowEditRanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEditRanges As AllowEditRanges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AllowEditRanges ^ AllowEditRanges { Microsoft::Office::Interop::Excel::AllowEditRanges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AllowEditRanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-110">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-110">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFiltering">
      <MemberSignature Language="C#" Value="public bool AllowFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFiltering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-111">Devuelve <b>True</b> si el usuario tiene permiso para utilizar un Autofiltro creado antes de proteger la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-111">Returns <b>True</b> if the user is allowed to make use of an AutoFilter that was created before the sheet was protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-112">La propiedad <b>AllowFiltering</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-112">The <b>AllowFiltering</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-p101">La propiedad <b>AllowFiltering</b> permite al usuario cambiar los criterios de filtro de un Autofiltro existente. El usuario no puede crear ni quitar un Autofiltro en una hoja de cálculo protegida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-p101">The <b>AllowFiltering</b> property allows the user to change filter criteria on an existing AutoFilter. The user cannot create or remove an AutoFilter on a protected worksheet.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-115">Las celdas que se deben filtrar deberán estar desbloqueadas cuando la hoja está protegida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-115">The cells to be filtered must be unlocked when the sheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingCells">
      <MemberSignature Language="C#" Value="public bool AllowFormattingCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingCells { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-116">Devuelve <b>True</b> si el formato de celdas está permitido en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-116">Returns <b>True</b> if the formatting of cells is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-117">La propiedad <b>AllowFormattingCells</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-117">The <b>AllowFormattingCells</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-118">Uso de esta propiedad deshabilita la ficha de protección, lo que permite al usuario cambiar todos los formatos, pero no desbloquear ni mostrar los rangos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-118">Use of this property disables the protection tab, allowing the user to change all formats but not to unlock or unhide ranges.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingColumns">
      <MemberSignature Language="C#" Value="public bool AllowFormattingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-119">Devuelve <b>True</b> si el formato de columnas está permitido en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-119">Returns <b>True</b> if the formatting of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-120">La propiedad <b>AllowFormattingColumns</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-120">The <b>AllowFormattingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingRows">
      <MemberSignature Language="C#" Value="public bool AllowFormattingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-121">Devuelve <b>True</b> si el formato de filas está permitido en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-121">Returns <b>True</b> if the formatting of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-122">La propiedad <b>AllowFormattingRows</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-122">The <b>AllowFormattingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingColumns">
      <MemberSignature Language="C#" Value="public bool AllowInsertingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-123">Devuelve <b>True</b> si está permitida la inserción de columnas en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-123">Returns <b>True</b> if the insertion of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-p102">Una columna insertada toma (de forma predeterminada) el formato de la columna situada a su izquierda, lo que significa que puede contener celdas bloqueadas. En otras palabras, es posible que los usuarios no puedan eliminar las columnas que han insertado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-p102">An inserted column inherits its formatting (by default) from the column to its left, which means that it may have locked cells. In other words, users may not be able to delete columns that they have inserted.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-126">La propiedad <b>AllowInsertingColumns</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-126">The <b>AllowInsertingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingHyperlinks">
      <MemberSignature Language="C#" Value="public bool AllowInsertingHyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingHyperlinks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-127">Devuelve <b>True</b> si está permitida la inserción de hipervínculos en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-127">Returns <b>True</b> if the insertion of hyperlinks is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-128">Sólo se pueden insertar hipervínculos en celdas desbloqueadas o desprotegidas de una hoja de cálculo protegida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-128">Hyperlinks can only be inserted in unlocked or unprotected cells on a protected worksheet.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-129">La propiedad <b>AllowInsertingHyperlinks</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-129">The <b>AllowInsertingHyperlinks</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingRows">
      <MemberSignature Language="C#" Value="public bool AllowInsertingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-130">Devuelve <b>True</b> si está permitida la inserción de filas en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-130">Returns <b>True</b> if the insertion of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-131">La propiedad <b>AllowInsertingRows</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-131">The <b>AllowInsertingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-132">Devuelve <b>True</b> si está permitida la opción de ordenación en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-132">Returns <b>True</b> if the sorting option is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-133">En una hoja de cálculo protegida, la ordenación sólo puede realizarse en celdas desbloqueadas o desprotegidas.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-133">In a protected worksheet, sorting can only be performed on unlocked or unprotected cells.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-134">La propiedad <b>AllowSorting</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-134">The <b>AllowSorting</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUsingPivotTables">
      <MemberSignature Language="C#" Value="public bool AllowUsingPivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUsingPivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowUsingPivotTables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUsingPivotTables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a64ec-135">Devuelve <b>True</b> si el usuario está autorizado para manipular tablas dinámicas en una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a64ec-135">Returns <b>True</b> if the user is allowed to manipulate pivot tables on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a64ec-136">La propiedad <b>AllowUsingPivotTables</b> se aplica a los datos de orígenes no OLAP.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-136">The <b>AllowUsingPivotTables</b> property applies to non-OLAP source data.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a64ec-137">La propiedad <b>AllowUsingPivotTables</b> se puede establecer mediante el uso de la <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> argumentos del método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a64ec-137">The <b>AllowUsingPivotTables</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>