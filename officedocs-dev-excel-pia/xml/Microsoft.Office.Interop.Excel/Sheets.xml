<Type Name="Sheets" FullName="Microsoft.Office.Interop.Excel.Sheets">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db6b3bb11f3b424395c8a07057d1712212b447b0" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010272" /></Metadata><TypeSignature Language="C#" Value="public interface Sheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Sheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Sheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Sheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Sheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fb48a-101">Colección de todas las hojas del libro especificado o activo.</span><span class="sxs-lookup"><span data-stu-id="fb48a-101">A collection of all the sheets in the specified or active workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="fb48a-102">La <b>colección Sheets</b> puede contener u <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objetos.</span><span class="sxs-lookup"><span data-stu-id="fb48a-102">The <b>Sheets</b> collection can contain <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects.</span></span> <span data-ttu-id="fb48a-103">La colección <b>Sheets</b> resulta útil si desea devolver hojas de cualquier tipo.</span><span class="sxs-lookup"><span data-stu-id="fb48a-103">The <b>Sheets</b> collection is useful when you want to return sheets of any type.</span></span> <span data-ttu-id="fb48a-104">Si tiene que trabajar con hojas de un solo tipo, consulte el tema de ayuda para dicho tipo de hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-104">If you need to work with sheets of only one type, see the object topic for that sheet type.</span></span></para>
      <para><span data-ttu-id="fb48a-105">Use la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> propiedad para devolver la colección <b>Sheets.</b></span><span class="sxs-lookup"><span data-stu-id="fb48a-105">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> property to return the <b>Sheets</b> collection.</span></span></para>
      <para><span data-ttu-id="fb48a-106">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> método para crear una nueva hoja y agregarla a la colección.</span><span class="sxs-lookup"><span data-stu-id="fb48a-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new sheet and add it to the collection.</span></span></para>
      <para><span data-ttu-id="fb48a-107">Use <b>Sheets</b>( ), donde se encuentra el nombre de la hoja o el número <paramref name="index" /> de <paramref name="index" /> índice, para devolver un solo <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-107">Use <b>Sheets</b>(<paramref name="index" />), where <paramref name="index" /> is the sheet name or index number, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span></span></para>
      <para><span data-ttu-id="fb48a-108">Use <b>Sheets</b>( <paramref name="array" /> ) para especificar más de una hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-108">Use <b>Sheets</b>(<paramref name="array" />) to specify more than one sheet.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fb48a-109">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="fb48a-109">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="fb48a-110">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="fb48a-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="fb48a-111">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-111">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-112">Un objeto que especifica la hoja antes de la cual se agregará la nueva hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-112">An object that specifies the sheet before which the new sheet is added.</span></span></param>
        <param name="After"><span data-ttu-id="fb48a-113">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-114">Un objeto que especifica la hoja tras la cual se agregará la nueva hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-114">An object that specifies the sheet after which the new sheet is added.</span></span></param>
        <param name="Count"><span data-ttu-id="fb48a-115">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-115">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-116">El número de hojas que se agregan.</span><span class="sxs-lookup"><span data-stu-id="fb48a-116">The number of sheets to be added.</span></span> <span data-ttu-id="fb48a-117">El valor predeterminado es uno.</span><span class="sxs-lookup"><span data-stu-id="fb48a-117">The default value is one.</span></span></param>
        <param name="Type"><span data-ttu-id="fb48a-118">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-118">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-119">Especifica el tipo de hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-119">Specifies the sheet type.</span></span> <span data-ttu-id="fb48a-120">Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constantes: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>o <b>xlExcel4IntlMacroSheet</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-120">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span></span> <span data-ttu-id="fb48a-121">Si inserta una hoja basada en una plantilla actual, especifique la ruta de acceso a la plantilla.</span><span class="sxs-lookup"><span data-stu-id="fb48a-121">If you are inserting a sheet based on an existing template, specify the path to the template.</span></span> <span data-ttu-id="fb48a-122">El valor predeterminado es <b>xlWorksheet</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-122">The default value is <b>xlWorksheet</b>.</span></span></param>
        <summary><span data-ttu-id="fb48a-123">Crea una hoja de cálculo, un gráfico o una hoja de macros nuevos.</span><span class="sxs-lookup"><span data-stu-id="fb48a-123">Creates a new worksheet, chart, or macro sheet.</span></span> <span data-ttu-id="fb48a-124">La nueva hoja de cálculo se convierte en la hoja activa.</span><span class="sxs-lookup"><span data-stu-id="fb48a-124">The new worksheet becomes the active sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="fb48a-125">Si <paramref name="Before" /> se <paramref name="After" /> omiten ambos, la nueva hoja se inserta delante de la hoja activa.</span><span class="sxs-lookup"><span data-stu-id="fb48a-125">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <param name="Count">To be added.</param>
        <param name="NewLayout">To be added.</param>
        <summary><span data-ttu-id="fb48a-126">Este método solo se implementa para el objeto de colección <b>Charts</b> y producirá un error en tiempo de ejecución si se usa en los objetos <b>Sheets</b> y <b>Worksheets.</b></span><span class="sxs-lookup"><span data-stu-id="fb48a-126">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on the <b>Sheets</b> and <b>Worksheets</b> objects.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-127">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="fb48a-127">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="fb48a-128">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-128">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="fb48a-129">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-129">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-130">La hoja delante de la cual se colocará la hoja copiada.</span><span class="sxs-lookup"><span data-stu-id="fb48a-130">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="fb48a-131">No se puede <paramref name="Before" /> especificar si se especifica <paramref name="After" /> .</span><span class="sxs-lookup"><span data-stu-id="fb48a-131">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="fb48a-132">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-133">La hoja detrás de la cual se colocará la hoja copiada.</span><span class="sxs-lookup"><span data-stu-id="fb48a-133">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="fb48a-134">No se puede <paramref name="After" /> especificar si se especifica <paramref name="Before" /> .</span><span class="sxs-lookup"><span data-stu-id="fb48a-134">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="fb48a-135">Copia la hoja a otra ubicación del libro.</span><span class="sxs-lookup"><span data-stu-id="fb48a-135">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="fb48a-136">Si no especifica ninguno de los dos o <paramref name="Before" /> , Microsoft Excel crea un libro nuevo que contiene la hoja <paramref name="After" /> copiada.</span><span class="sxs-lookup"><span data-stu-id="fb48a-136">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-137">Devuelve el número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="fb48a-137">Returns the number of objects in the collection.</span></span> <span data-ttu-id="fb48a-138"><b>Integer</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-138">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-139">Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-139">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="fb48a-140">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="fb48a-140">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="fb48a-141">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-141">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fb48a-142">La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="fb48a-142">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="fb48a-143">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="fb48a-143">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb48a-144">Elimina el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-144">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="fb48a-145">Objeto <b>Range</b> requerido.</span><span class="sxs-lookup"><span data-stu-id="fb48a-145">Required <b>Range</b> object.</span></span> <span data-ttu-id="fb48a-146">Rango con el que se rellenan todas las hojas de la colección.</span><span class="sxs-lookup"><span data-stu-id="fb48a-146">The range to fill on all the worksheets in the collection.</span></span> <span data-ttu-id="fb48a-147">El rango debe ser de una de las hojas de cálculo de la colección.</span><span class="sxs-lookup"><span data-stu-id="fb48a-147">The range must be from a worksheet within the collection.</span></span></param>
        <param name="Type"><span data-ttu-id="fb48a-148">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" /> .</span><span class="sxs-lookup"><span data-stu-id="fb48a-148">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span></span> <span data-ttu-id="fb48a-149">Especifica cómo se debe copiar el rango.</span><span class="sxs-lookup"><span data-stu-id="fb48a-149">Specifies how to copy the range.</span></span></param>
        <summary><span data-ttu-id="fb48a-150">Copia un rango en el mismo lugar en toda una serie de hojas de cálculo.</span><span class="sxs-lookup"><span data-stu-id="fb48a-150">Copies a range to the same area on all other worksheets in a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-151">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> colección que representa los saltos de página horizontales de la hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-151">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="fb48a-152">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-152">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fb48a-153">Hay un límite de 1.026 saltos de página horizontales por hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-153">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="fb48a-154">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-154">Required <b>Object</b>.</span></span> <span data-ttu-id="fb48a-155">Nombre o número de índice del objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-155">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="fb48a-156">Devuelve un solo objeto de una colección.</span><span class="sxs-lookup"><span data-stu-id="fb48a-156">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="fb48a-157">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-158">Hoja antes de la cual se copiará la hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-158">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="fb48a-159">No se puede <paramref name="Before" /> especificar si se especifica <paramref name="After" /> .</span><span class="sxs-lookup"><span data-stu-id="fb48a-159">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="fb48a-160">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-161">Hoja después de la cual se copiará la hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-161">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="fb48a-162">No se puede <paramref name="After" /> especificar si se especifica <paramref name="Before" /> .</span><span class="sxs-lookup"><span data-stu-id="fb48a-162">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="fb48a-163">Desplaza la hoja a otro lugar del libro.</span><span class="sxs-lookup"><span data-stu-id="fb48a-163">Moves the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="fb48a-164">Si no especifica ninguno de los dos o <paramref name="Before" /> , Microsoft Excel crea un libro nuevo que contiene la hoja que se ha <paramref name="After" /> movido.</span><span class="sxs-lookup"><span data-stu-id="fb48a-164">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-165">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="fb48a-165">Returns the parent object for the specified object.</span></span> <span data-ttu-id="fb48a-166">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-166">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="fb48a-167">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-167">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-168">Número de la página en la que comienza la impresión.</span><span class="sxs-lookup"><span data-stu-id="fb48a-168">The number of the page at which to start printing.</span></span> <span data-ttu-id="fb48a-169">Si no se especifica este argumento, la impresión empieza por el principio.</span><span class="sxs-lookup"><span data-stu-id="fb48a-169">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="fb48a-170">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-171">Número de la última página que se va a imprimir.</span><span class="sxs-lookup"><span data-stu-id="fb48a-171">The number of the last page to print.</span></span> <span data-ttu-id="fb48a-172">Si no se especifica este argumento, la impresión finaliza en la última página.</span><span class="sxs-lookup"><span data-stu-id="fb48a-172">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="fb48a-173">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-174">Número de copias que se imprimirán.</span><span class="sxs-lookup"><span data-stu-id="fb48a-174">The number of copies to print.</span></span> <span data-ttu-id="fb48a-175">Si no se especifica este argumento, se imprime una sola copia.</span><span class="sxs-lookup"><span data-stu-id="fb48a-175">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="fb48a-176">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-177"><b>True</b> para que Microsoft Excel invoque la vista preliminar antes de imprimir el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-177"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="fb48a-178"><b>False</b> (u omitido) para imprimir el objeto inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="fb48a-178"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="fb48a-179">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-179">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-180">Establece el nombre de la impresora activa.</span><span class="sxs-lookup"><span data-stu-id="fb48a-180">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="fb48a-181">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-181">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-182"><b>True</b> para imprimir a un archivo.</span><span class="sxs-lookup"><span data-stu-id="fb48a-182"><b>True</b> to print to a file.</span></span> <span data-ttu-id="fb48a-183">Si no se especifica, Microsoft Excel solicita al usuario que <paramref name="PrToFileName" /> escriba el nombre del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="fb48a-183">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="fb48a-184">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-184">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-185"><b>True</b> para intercalar varias copias.</span><span class="sxs-lookup"><span data-stu-id="fb48a-185"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="fb48a-186">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-186">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-187">Si se establece en True , este argumento especifica el nombre del archivo <paramref name="PrintToFile" /> en el que desea imprimir. <b></b></span><span class="sxs-lookup"><span data-stu-id="fb48a-187">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="fb48a-188">Imprime el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-188">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="fb48a-189">"Páginas" en las descripciones de las páginas impresas y hace referencia a las páginas impresas, no a las páginas generales <paramref name="From" /> de la hoja o <paramref name="To" /> libro.</span><span class="sxs-lookup"><span data-stu-id="fb48a-189">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="fb48a-190">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="fb48a-190">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="fb48a-191">Habilita los cambios en el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb48a-191">Enables changes to the object.</span></span></param>
        <summary><span data-ttu-id="fb48a-192">Muestra una vista preliminar del objeto tal como aparecería impreso.</span><span class="sxs-lookup"><span data-stu-id="fb48a-192">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="fb48a-193">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-193">Optional <b>Object</b>.</span></span> <span data-ttu-id="fb48a-194">Objeto que se debe reemplazar.</span><span class="sxs-lookup"><span data-stu-id="fb48a-194">The object to replace.</span></span></param>
        <summary><span data-ttu-id="fb48a-195">Selecciona el objeto</span><span class="sxs-lookup"><span data-stu-id="fb48a-195">Selects the object</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-196">Determina si el objeto es visible.</span><span class="sxs-lookup"><span data-stu-id="fb48a-196">Determines whether the object is visible.</span></span> <span data-ttu-id="fb48a-197">Lectura/Escritura<b>Objeto</b>.</span><span class="sxs-lookup"><span data-stu-id="fb48a-197">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb48a-198">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> colección que representa los saltos de página verticales de la hoja.</span><span class="sxs-lookup"><span data-stu-id="fb48a-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="fb48a-199">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb48a-199">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>