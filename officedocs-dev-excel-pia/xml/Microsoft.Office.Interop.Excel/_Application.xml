<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999633" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="64263-101">Es una interfaz principal en una coclase COM que el código administrado necesita para la interoperabilidad con el objeto COM correspondiente.</span><span class="sxs-lookup"><span data-stu-id="64263-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="64263-102">Use esta interfaz principal únicamente cuando el método que desee usar comparta el mismo nombre que un evento del objeto COM; en este caso, realice la conversión a esta interfaz para llamar al método y realice la conversión a la última versión de la interfaz de eventos para conectarse al evento.</span><span class="sxs-lookup"><span data-stu-id="64263-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="64263-103">En caso contrario, use la interfaz .NET derivada de la coclase COM para obtener acceso a los métodos, propiedades y eventos del objeto COM.</span><span class="sxs-lookup"><span data-stu-id="64263-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="64263-104">Para obtener más información acerca del objeto COM, vea <see cref="T:Microsoft.Office.Interop.Excel.Application" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-105">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="64263-106">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-106">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-107">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="64263-108">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary><span data-ttu-id="64263-109">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="64263-110">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-110">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="64263-111">Obligatorio <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span></span> <span data-ttu-id="64263-112">Especifica la aplicación microsoft que se debe activar. <b>XlMSApplication</b> puede ser una de estas constantes <b>XlMSApplication:</b> <b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span><span class="sxs-lookup"><span data-stu-id="64263-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span></span></param>
        <summary><span data-ttu-id="64263-p103">Activa una aplicación de Microsoft. Si la aplicación ya se está ejecutando, este método activará la aplicación. De lo contrario, el método iniciará una nueva instancia de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-116">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa la celda activa de la ventana activa (la ventana superior) o de la ventana especificada.</span><span class="sxs-lookup"><span data-stu-id="64263-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="64263-117">Si la ventana no contiene una hoja de cálculo, esta propiedad produce un error.</span><span class="sxs-lookup"><span data-stu-id="64263-117">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-p105">Celda activa no es lo mismo que selección. La celda activa es una sola celda de la selección actual. La selección puede contener más de una celda, pero sólo una es la celda activa.</span><span class="sxs-lookup"><span data-stu-id="64263-p105">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-121">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto que representa el gráfico activo (ya sea un gráfico incrustado o una hoja de gráficos).</span><span class="sxs-lookup"><span data-stu-id="64263-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="64263-122">Un gráfico incrustado se considera activo cuando está seleccionado o activado.</span><span class="sxs-lookup"><span data-stu-id="64263-122">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="64263-123">Si no hay ningún gráfico activo, esta propiedad devuelve <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-123">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-124">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-124">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-125">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="64263-126"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="64263-126"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-127">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-127">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-128">Devuelve o establece el nombre de la impresora activa.</span><span class="sxs-lookup"><span data-stu-id="64263-128">Returns or sets the name of the active printer.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-129">Obtiene un <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> objeto que representa la ventana vista protegida activa (la ventana superior).</span><span class="sxs-lookup"><span data-stu-id="64263-129">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></summary>
        <value><span data-ttu-id="64263-130">Objeto <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> que representa la ventana vista protegida activa (la ventana superior).</span><span class="sxs-lookup"><span data-stu-id="64263-130">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></value>
        <remarks><para><span data-ttu-id="64263-131">Devuelve una referencia nula (Nothing en Visual Basic) si no hay ninguna ventana vista protegida abierta.</span><span class="sxs-lookup"><span data-stu-id="64263-131">Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open.</span></span> <span data-ttu-id="64263-132">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-132">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-p108">Devuelve un objeto que representa la hoja activa (la hoja de la parte superior) en el libro activo o en la ventana o libro especificados. Devuelve <b>Nothing</b> si no hay ninguna hoja activa.</span><span class="sxs-lookup"><span data-stu-id="64263-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-135">Si un libro aparece en más de una ventana, es posible que la propiedad <b>ActiveSheet</b> tenga un valor diferente en cada ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-135">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-136">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objeto que representa la ventana activa (la ventana superior).</span><span class="sxs-lookup"><span data-stu-id="64263-136">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span></span> <span data-ttu-id="64263-137">Devuelve <b>Nothing</b> si no hay ventanas abiertas.</span><span class="sxs-lookup"><span data-stu-id="64263-137">Returns <b>Nothing</b> if there are no windows open.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-138">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto que representa el libro de la ventana activa (la ventana superior).</span><span class="sxs-lookup"><span data-stu-id="64263-138">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span></span> <span data-ttu-id="64263-139">Devuelve <b>Nada</b> si no hay ninguna ventana abierta o si la ventana activa es la de información o la del Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="64263-139">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart"><span data-ttu-id="64263-140">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-140">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-141">Gráfico que contiene el formato que se aplicará cuando se aplique el nuevo formato automático del gráfico.</span><span class="sxs-lookup"><span data-stu-id="64263-141">A chart that contains the format that will be applied when the new chart autoformat is applied.</span></span></param>
        <param name="Name"><span data-ttu-id="64263-142"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-142">Required <b>String</b>.</span></span> <span data-ttu-id="64263-143">Nombre del formato automático.</span><span class="sxs-lookup"><span data-stu-id="64263-143">The name of the autoformat.</span></span></param>
        <param name="Description"><span data-ttu-id="64263-144">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-145">Descripción del formato automático personalizado.</span><span class="sxs-lookup"><span data-stu-id="64263-145">A description of the custom autoformat.</span></span></param>
        <summary><span data-ttu-id="64263-146">Agrega un formato automático de gráfico personalizado a la lista de formatos automáticos de gráfico disponibles.</span><span class="sxs-lookup"><span data-stu-id="64263-146">Adds a custom chart autoformat to the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="64263-147">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-147">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-148">Especifica los datos de origen, como una matriz de cadenas o un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-148">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></param>
        <param name="ByRow"><span data-ttu-id="64263-149">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-150">Solo se usa <paramref name="ListArray" /> si es un objeto <b>Range.</b></span><span class="sxs-lookup"><span data-stu-id="64263-150">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span></span> <span data-ttu-id="64263-151"><b>True</b> para crear una lista personalizada a partir de cada fila del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-151"><b>True</b> to create a custom list from each row in the range.</span></span> <span data-ttu-id="64263-152"><b>False</b> para crear una lista personalizada a partir de cada columna del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-152"><b>False</b> to create a custom list from each column in the range.</span></span> <span data-ttu-id="64263-153">Si este argumento se omite y el rango contiene más filas que columnas (o el mismo número de ambas), Microsoft Excel creará una lista personalizada a partir de cada columna del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-153">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span></span> <span data-ttu-id="64263-154">Si este argumento se omite y el número de columnas es mayor que el de filas, Microsoft Excel creará una lista personalizada a partir de cada fila del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-154">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span></span></param>
        <summary><span data-ttu-id="64263-155">Agrega una lista personalizada para Autorrelleno y para ordenación personalizados.</span><span class="sxs-lookup"><span data-stu-id="64263-155">Adds a custom list for custom autofill and/or custom sort.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-156">Si la lista que se intenta agregar ya existe, este método no surtirá ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="64263-156">If the list you're trying to add already exists, this method does nothing.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-157">Devuelve una colección que representa todos los complementos enumerados en el cuadro de diálogo Add-Ins de diálogo <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> (menú Herramientas).</span><span class="sxs-lookup"><span data-stu-id="64263-157">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-158">Obtiene una colección de objetos que representan todos los complementos que están actualmente disponibles o abiertos en Excel, independientemente de si <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> están instalados.</span><span class="sxs-lookup"><span data-stu-id="64263-158">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span></span></summary>
        <value><span data-ttu-id="64263-159">Una colección de objetos que representan todos los complementos que están actualmente disponibles o <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> abiertos en Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-159">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span></span></value>
        <remarks><para><span data-ttu-id="64263-160">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-161"><b>True</b> si Microsoft Excel muestra un mensaje antes de sobrescribir el contenido de las celdas no vacías durante una operación de edición con arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="64263-161"><b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-162">Devuelve o establece el nombre de la carpeta de inicio alternativa.</span><span class="sxs-lookup"><span data-stu-id="64263-162">Returns or sets the name of the alternate startup folder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-163">Devuelve o establece un <b>valor Boolean</b> que indica si se va a usar ClearType para mostrar fuentes en el menú, la cinta de opciones y el texto del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-163">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span></span> <span data-ttu-id="64263-164">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-164">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-165"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-166">Aun cuando la opción ClearType de Microsoft Windows esté deshabilitada, si esta propiedad se establece en <b>True</b>, se invalidará el valor de Windows y se usará ClearType en todas las aplicaciones de Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-166">Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-167">Devuelve el <see cref="T:Microsoft.Office.Core.AnswerWizard" /> objeto de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-167">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-168">Devuelve un objeto que representa al creador del objeto especificado (puede utilizar esta propiedad con un objeto de automatización OLE para devolver la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> aplicación de ese objeto).</span><span class="sxs-lookup"><span data-stu-id="64263-168">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-169">Devuelve un valor <b>Boolean</b> que indica si están disponibles las características XML en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-169">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-170">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="64263-170">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-171"><b>True</b> si Microsoft Excel solicita al usuario que actualice los vínculos al abrir archivos con vínculos.</span><span class="sxs-lookup"><span data-stu-id="64263-171"><b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span></span> <span data-ttu-id="64263-172"><b>False</b> si los vínculos se actualizan automáticamente, sin cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-172"><b>False</b> if links are automatically updated with no dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-173">Devuelve un <see cref="T:Microsoft.Office.Core.IAssistance" /> objeto para short_Excel2007 que representa el visor Microsoft Office ayuda.</span><span class="sxs-lookup"><span data-stu-id="64263-173">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span></span> <span data-ttu-id="64263-174">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-174">Read-only.</span></span></summary>
        <value><span data-ttu-id="64263-175"><b>IAssistance</b></span><span class="sxs-lookup"><span data-stu-id="64263-175"><b>IAssistance</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-176">El objeto <b>IAssistance</b> permite a los programadores mostrar ayuda personalizada y ayuda que se instala con Office en Office Help Viewer.</span><span class="sxs-lookup"><span data-stu-id="64263-176">The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-177">Devuelve un <see cref="T:Microsoft.Office.Core.Assistant" /> objeto para Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-177">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-178">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> objeto que representa los atributos de Autocorrección de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-179"><b>True</b> (valor predeterminado) si Microsoft Excel aplica el formato automáticamente a los hipervínculos mientras se escribe.</span><span class="sxs-lookup"><span data-stu-id="64263-179"><b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span></span> <span data-ttu-id="64263-180"><b>False</b> si Excel no aplica el formato automáticamente a los hipervínculos mientras se escribe.</span><span class="sxs-lookup"><span data-stu-id="64263-180"><b>False</b> if Excel does not automatically format hyperlinks as you type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-181">Devuelve o establece una <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constante que representa el modo de seguridad que Microsoft Excel usa al abrir archivos mediante programación.</span><span class="sxs-lookup"><span data-stu-id="64263-181">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-182">Esta propiedad se establece automáticamente en <b>msoAutomationSecurityLow</b> cuando se inicia la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-182">This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started.</span></span> <span data-ttu-id="64263-183">Por tanto, para evitar la interrupción de las soluciones que se basan en la configuración predeterminada, debe tener cuidado restablecer esta propiedad como <b>msoAutomationSecurityLow</b> después de abrir un archivo mediante programación.</span><span class="sxs-lookup"><span data-stu-id="64263-183">Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file.</span></span> <span data-ttu-id="64263-184">Asimismo, esta propiedad debe establecerse inmediatamente antes y después de abrir un archivo mediante programación para evitar que se realicen modificaciones malintencionadas.</span><span class="sxs-lookup"><span data-stu-id="64263-184">Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</span></span></para>
          <para><span data-ttu-id="64263-185">
            <b>MsoAutomationSecurity</b> puede ser una de estas constantes <b>MsoAutomationSecurity</b>:</span><span class="sxs-lookup"><span data-stu-id="64263-185">
            <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="64263-186">
                <b>msoAutomationSecurityByUI</b>    Usa la configuración de seguridad especificada en el <b>cuadro de diálogo</b> Seguridad.</span><span class="sxs-lookup"><span data-stu-id="64263-186">
                <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-187">
                <b>msoAutomationSecurityForceDisable</b>    Deshabilita todas las macros de todos los archivos abiertos mediante programación sin mostrar ninguna alerta de seguridad.</span><span class="sxs-lookup"><span data-stu-id="64263-187">
                <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-188">
                <b>msoAutomationSecurityLow</b>    Habilita todas las macros.</span><span class="sxs-lookup"><span data-stu-id="64263-188">
                <b>msoAutomationSecurityLow</b>  Enables all macros.</span></span> <span data-ttu-id="64263-189">Valor predeterminado al iniciar la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-189">This is the default value when the application is started.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-190">Establecer <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> el valor <b>False</b> no afecta a las alertas y no afectará a las advertencias de seguridad.</span><span class="sxs-lookup"><span data-stu-id="64263-190">Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings.</span></span> <span data-ttu-id="64263-191">La <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> configuración no se aplicará a las advertencias de seguridad.</span><span class="sxs-lookup"><span data-stu-id="64263-191">The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings.</span></span> <span data-ttu-id="64263-192">Por ejemplo, si el usuario establece <b>DisplayAlerts</b> igual a <b>False</b> y <b>AutomationSecurity</b> en <b>msoAutomationSecurityByUI</b>, mientras el usuario se encuentra en el nivel de seguridad medio, habrá advertencias de seguridad mientras se ejecuta la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-192">For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running.</span></span> <span data-ttu-id="64263-193">Esto permite que la macro interceptar los errores de archivo abierto mientras sigue mostrándose el aviso de seguridad si el archivo se abre correctamente.</span><span class="sxs-lookup"><span data-stu-id="64263-193">This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-194"><b>True</b> si las entradas que tienen formato de porcentaje no se multiplican automáticamente por 100 cuando se especifican.</span><span class="sxs-lookup"><span data-stu-id="64263-194"><b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-195">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> objeto, que hace una copia de seguridad de todos los formatos de archivo en un intervalo de tiempo.</span><span class="sxs-lookup"><span data-stu-id="64263-195">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-196">Los intervalos de tiempo válidos son los números enteros entre 1 y 120.</span><span class="sxs-lookup"><span data-stu-id="64263-196">Valid time intervals are whole numbers from 1 to 120.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-197">Devuelve el número de versión de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-197">Returns the Microsoft Excel build number.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-198">Normalmente es más seguro probar la propiedad, a menos que estés <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> seguro de que necesitas saber el número de compilación.</span><span class="sxs-lookup"><span data-stu-id="64263-198">It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-199">Calcula todos los libros abiertos</span><span class="sxs-lookup"><span data-stu-id="64263-199">Calculates all open workbooks</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-200"><b>True</b> si los libros se calculan antes de que se guarden en el disco (si la propiedad <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> está establecida en <b>xlManual</b>).</span><span class="sxs-lookup"><span data-stu-id="64263-200"><b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span></span> <span data-ttu-id="64263-201">Esta propiedad se conserva incluso si se cambia la <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-201">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-202">Fuerza un cálculo completo de los datos en todos los libros abiertos.</span><span class="sxs-lookup"><span data-stu-id="64263-202">Forces a full calculation of the data in all open workbooks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-203">Para todos los libros abiertos, fuerza un cálculo completo de los datos y vuelve a establecer las dependencias.</span><span class="sxs-lookup"><span data-stu-id="64263-203">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-204">Dependencias son las fórmulas que dependen de otras celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-204">Dependencies are the formulas that depend on other cells.</span></span> <span data-ttu-id="64263-205">Por ejemplo, la fórmula "=A1" depende de la celda A1.</span><span class="sxs-lookup"><span data-stu-id="64263-205">For example, the formula "=A1" depends on cell A1.</span></span> <span data-ttu-id="64263-206">El método <b>CalculateFullRebuild</b> se parecido a volver a insertar todas las fórmulas.</span><span class="sxs-lookup"><span data-stu-id="64263-206">The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-207">Devuelve todas las consultas pendientes a los orígenes de datos OLEDB y OLAP.</span><span class="sxs-lookup"><span data-stu-id="64263-207">Runs all pending queries to OLEDB and OLAP data sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-208">Devuelve o establece el modo de cálculo.</span><span class="sxs-lookup"><span data-stu-id="64263-208">Returns or sets the calculation mode.</span></span> <span data-ttu-id="64263-209">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-209">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-210">Para los orígenes de datos OLAP, esta propiedad solo puede devolver o tener el valor <b>xlNormal</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-210">For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</span></span></para>
          <para><span data-ttu-id="64263-211">
            <b>XlCalculation</b> puede ser una de estas <b>constantes XlCalculation:</b></span><span class="sxs-lookup"><span data-stu-id="64263-211">
            <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-212">
            <b>xlCalculationAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-212">
            <b>xlCalculationAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="64263-213">
            <b>xlCalculationManual</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-213">
            <b>xlCalculationManual</b>
          </span></span></para>
          <para><span data-ttu-id="64263-214">
            <b>xlCalculationSemiautomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-214">
            <b>xlCalculationSemiautomatic</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-215">Establece o devuelve una constante que especifica la clave que puede interrumpir <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> Microsoft Excel al realizar cálculos.</span><span class="sxs-lookup"><span data-stu-id="64263-215">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-216">
            <b>XlCalculationInterruptKey</b> puede ser una de estas <b>constantes XlCalculationInterruptKey:</b></span><span class="sxs-lookup"><span data-stu-id="64263-216">
            <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-217">
            <b>xlAnyKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-217">
            <b>xlAnyKey</b>
          </span></span></para>
          <para><span data-ttu-id="64263-218">
            <b>xlEscKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-218">
            <b>xlEscKey</b>
          </span></span></para>
          <para><span data-ttu-id="64263-219">
            <b>xlNoKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-219">
            <b>xlNoKey</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-220">Devuelve una constante que indica el estado de cálculo de la aplicación para los cálculos que se están <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> realizando en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-220">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-221">
            <b>XlCalculationState</b> puede ser una de estas <b>constantes XlCalculationState:</b></span><span class="sxs-lookup"><span data-stu-id="64263-221">
            <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-222">
            <b>xlCalculating</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-222">
            <b>xlCalculating</b>
          </span></span></para>
          <para><span data-ttu-id="64263-223">
            <b>xlDone</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-223">
            <b>xlDone</b>
          </span></span></para>
          <para><span data-ttu-id="64263-224">
            <b>xlPending</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-224">
            <b>xlPending</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-225">Devuelve un número cuyos últimos cuatro dígitos son el número de la versión auxiliar del motor de cálculo, y los demás dígitos (a la izquierda) son el número de la versión principal de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-225">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-226">Si el libro se guardó en una versión anterior de Excel y no se ha actualizado completamente, esta propiedad devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="64263-226">If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="64263-227">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-227">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-228">Índice a la matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-228">An index to the array.</span></span> <span data-ttu-id="64263-229">Este argumento solo se usa si la propiedad devuelve una matriz (para obtener más información, consulte la sección Notas).</span><span class="sxs-lookup"><span data-stu-id="64263-229">This argument is used only when the property returns an array (for more information, see the Remarks section).</span></span></param>
        <summary><span data-ttu-id="64263-230">Devuelve información sobre el modo en que se ha llamado a Visual Basic (para obtener más información, consulte la sección Notas).</span><span class="sxs-lookup"><span data-stu-id="64263-230">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-231">Esta propiedad devuelve información sobre el modo en que se ha llamado a Visual Basic, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="64263-231">This property returns information about how Visual Basic was called, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-232">Una función personalizada especificada en una sola celda</span><span class="sxs-lookup"><span data-stu-id="64263-232">A custom function entered in a single cell</span></span></term>
              <description><span data-ttu-id="64263-233">Un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que especifica esa celda</span><span class="sxs-lookup"><span data-stu-id="64263-233">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-234">Una función personalizada que es parte de una fórmula de matriz en un rango de celdas</span><span class="sxs-lookup"><span data-stu-id="64263-234">A custom function that is part of an array formula in a range of cells</span></span></term>
              <description><span data-ttu-id="64263-235">Un objeto <b>Range</b> que especifica dicho rango de celdas</span><span class="sxs-lookup"><span data-stu-id="64263-235">A <b>Range</b> object specifying that range of cells</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-236">Una macro Auto_Open, Auto_Close, Auto_Activate o Auto_Deactivate</span><span class="sxs-lookup"><span data-stu-id="64263-236">An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</span></span></term>
              <description><span data-ttu-id="64263-237">El nombre del documento como texto</span><span class="sxs-lookup"><span data-stu-id="64263-237">The name of the document as text</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-238">Una macro establecida por la <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> propiedad or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /></span><span class="sxs-lookup"><span data-stu-id="64263-238">A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</span></span></term>
              <description><span data-ttu-id="64263-239">El nombre del identificador del objeto de gráfica o de la referencia de celda (si corresponde) al que se aplica la macro</span><span class="sxs-lookup"><span data-stu-id="64263-239">The name of the chart object identifier or cell reference (if applicable) to which the macro applies</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-240">El cuadro de diálogo Macro (menú Herramientas) o cualquier autor de la llamada no descrito anteriormente</span><span class="sxs-lookup"><span data-stu-id="64263-240">The Macro dialog box (Tools menu), or any caller not described above</span></span></term>
              <description><span data-ttu-id="64263-241">El #REF!</span><span class="sxs-lookup"><span data-stu-id="64263-241">The #REF!</span></span> <span data-ttu-id="64263-242">valor de error</span><span class="sxs-lookup"><span data-stu-id="64263-242">error value</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-243">Esta propiedad no debe ser usada.</span><span class="sxs-lookup"><span data-stu-id="64263-243">This property should not be used.</span></span> <span data-ttu-id="64263-244">Las notas sonoras se han quitado de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-244">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-245">Esta propiedad no debe ser usada.</span><span class="sxs-lookup"><span data-stu-id="64263-245">This property should not be used.</span></span> <span data-ttu-id="64263-246">Las notas sonoras se han quitado de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-246">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-247">Nombre que aparece en la barra de título de la ventana principal de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-247">The name that appears in the title bar of the main Microsoft Excel window.</span></span> <span data-ttu-id="64263-248">Si no se establece un nombre o si se establece el valor <b>Empty</b> para el nombre, esta propiedad devuelve "Microsoft Excel".</span><span class="sxs-lookup"><span data-stu-id="64263-248">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-249"><b>True</b> si está permitido arrastrar y soltar celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-249"><b>True</b> if dragging and dropping cells is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-250">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todas las celdas de la hoja de cálculo activa.</span><span class="sxs-lookup"><span data-stu-id="64263-250">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span></span> <span data-ttu-id="64263-251">Si el documento activo no es una hoja de cálculo, se produce un error en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-251">If the active document isn’t a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-252">Dado que la propiedad es la propiedad predeterminada del objeto Range, puede especificar el índice de fila y columna inmediatamente después <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> de la palabra clave <b>Cells.</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-252">Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="64263-253">Para obtener más información, vea la <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-253">For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters"><span data-ttu-id="64263-254">Required <b>Double</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-254">Required <b>Double</b>.</span></span> <span data-ttu-id="64263-255">Especifica el valor en centímetros que se convertirá a puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-255">Specifies the centimeter value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="64263-256">Convierte una medida de centímetros a puntos (un punto equivale a 0,035 centímetros).</span><span class="sxs-lookup"><span data-stu-id="64263-256">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-257"><b>True</b> hará que todos los gráficos de los documentos recién creados usen el comportamiento de seguimiento de referencia de celda.</span><span class="sxs-lookup"><span data-stu-id="64263-257"><b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span></span> <span data-ttu-id="64263-258"><b>Booleano</b> (bool en C#).</span><span class="sxs-lookup"><span data-stu-id="64263-258"><b>Boolean</b> (bool in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-259">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de gráficos del libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort"><span data-ttu-id="64263-260">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-260">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-261">Permite que se realice la actualización de un <b>intervalo</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-261">Allows recalculation to be performed for a <b>Range</b>.</span></span></param>
        <summary><span data-ttu-id="64263-262">Detiene el proceso de actualización en una aplicación de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-262">Stops recalculation in a Microsoft Excel application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word"><span data-ttu-id="64263-263"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-263">Required <b>String</b>.</span></span> <span data-ttu-id="64263-264">Palabra que se desea comprobar.</span><span class="sxs-lookup"><span data-stu-id="64263-264">The word you want to check.</span></span></param>
        <param name="CustomDictionary"><span data-ttu-id="64263-265">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-265">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-266">Cadena que indica el nombre de archivo del diccionario personalizado que se examinará si la palabra no se encuentra en el diccionario principal.</span><span class="sxs-lookup"><span data-stu-id="64263-266">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="64263-267">Si no se establece este argumento, se usa el diccionario especificado en ese momento.</span><span class="sxs-lookup"><span data-stu-id="64263-267">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="64263-268">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-268">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-269"><b>True</b> para que Microsoft Excel pase por alto las palabras que estén escritas con todas las letras en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="64263-269"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="64263-270"><b>False</b> para que Microsoft Excel compruebe las palabras que estén escritas con todas las letras en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="64263-270"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="64263-271">Si no se especifica este argumento, se usa la configuración actual.</span><span class="sxs-lookup"><span data-stu-id="64263-271">If this argument is omitted, the current setting will be used.</span></span></param>
        <summary><span data-ttu-id="64263-272">Comprueba la ortografía de un sola palabra.</span><span class="sxs-lookup"><span data-stu-id="64263-272">Checks the spelling of a single word.</span></span> <span data-ttu-id="64263-273">Devuelve <b>True</b> si la palabra se encuentra en uno de los diccionarios; devuelve <b>False</b> si no se encuentra la palabra.</span><span class="sxs-lookup"><span data-stu-id="64263-273">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="64263-274">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-274">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-275">Elemento de matriz que se devuelve.</span><span class="sxs-lookup"><span data-stu-id="64263-275">The array element to be returned.</span></span> <span data-ttu-id="64263-276">Si este argumento se omite, la propiedad devuelve la matriz completa de los formatos que están en el Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="64263-276">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span></span> <span data-ttu-id="64263-277">Si desea más información, vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="64263-277">For more information, see the Remarks section.</span></span></param>
        <summary><span data-ttu-id="64263-278">Devuelve los formatos que están actualmente en el Portapapeles como una matriz de valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="64263-278">Returns the formats that are currently on the Clipboard as an array of numeric values.</span></span> <span data-ttu-id="64263-279">Para saber si un formato concreto está en el Portapapeles, compare cada elemento de la matriz con la constante apropiada que se enumera en la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="64263-279">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-280">Esta propiedad devuelve una matriz de valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="64263-280">This property returns an array of numeric values.</span></span> <span data-ttu-id="64263-281">Para determinar si un formato determinado está en el Portapapeles, compare cada elemento de la matriz con una de las siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constantes:</span><span class="sxs-lookup"><span data-stu-id="64263-281">To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</span></span></para>
          <para><span data-ttu-id="64263-282">
            <b>xlClipboardFormatBIFF</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-282">
            <b>xlClipboardFormatBIFF</b>
          </span></span></para>
          <para><span data-ttu-id="64263-283">
            <b>xlClipboardFormatBIFF2</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-283">
            <b>xlClipboardFormatBIFF2</b>
          </span></span></para>
          <para><span data-ttu-id="64263-284">
            <b>xlClipboardFormatBIFF3</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-284">
            <b>xlClipboardFormatBIFF3</b>
          </span></span></para>
          <para><span data-ttu-id="64263-285">
            <b>xlClipboardFormatBIFF4</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-285">
            <b>xlClipboardFormatBIFF4</b>
          </span></span></para>
          <para><span data-ttu-id="64263-286">
            <b>xlClipboardFormatBinary</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-286">
            <b>xlClipboardFormatBinary</b>
          </span></span></para>
          <para><span data-ttu-id="64263-287">
            <b>xlClipboardFormatBitmap</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-287">
            <b>xlClipboardFormatBitmap</b>
          </span></span></para>
          <para><span data-ttu-id="64263-288">
            <b>xlClipboardFormatCGM</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-288">
            <b>xlClipboardFormatCGM</b>
          </span></span></para>
          <para><span data-ttu-id="64263-289">
            <b>xlClipboardFormatCSV</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-289">
            <b>xlClipboardFormatCSV</b>
          </span></span></para>
          <para><span data-ttu-id="64263-290">
            <b>xlClipboardFormatDIF</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-290">
            <b>xlClipboardFormatDIF</b>
          </span></span></para>
          <para><span data-ttu-id="64263-291">
            <b>xlClipboardFormatDspText</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-291">
            <b>xlClipboardFormatDspText</b>
          </span></span></para>
          <para><span data-ttu-id="64263-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span></span></para>
          <para><span data-ttu-id="64263-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span></span></para>
          <para><span data-ttu-id="64263-294">
            <b>xlClipboardFormatLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-294">
            <b>xlClipboardFormatLink</b>
          </span></span></para>
          <para><span data-ttu-id="64263-295">
            <b>xlClipboardFormatLinkSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-295">
            <b>xlClipboardFormatLinkSource</b>
          </span></span></para>
          <para><span data-ttu-id="64263-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span></span></para>
          <para><span data-ttu-id="64263-297">
            <b>xlClipboardFormatMovie</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-297">
            <b>xlClipboardFormatMovie</b>
          </span></span></para>
          <para><span data-ttu-id="64263-298">
            <b>xlClipboardFormatNative</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-298">
            <b>xlClipboardFormatNative</b>
          </span></span></para>
          <para><span data-ttu-id="64263-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span></span></para>
          <para><span data-ttu-id="64263-300">
            <b>xlClipboardFormatObjectLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-300">
            <b>xlClipboardFormatObjectLink</b>
          </span></span></para>
          <para><span data-ttu-id="64263-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span></span></para>
          <para><span data-ttu-id="64263-302">
            <b>xlClipboardFormatPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-302">
            <b>xlClipboardFormatPICT</b>
          </span></span></para>
          <para><span data-ttu-id="64263-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span></span></para>
          <para><span data-ttu-id="64263-304">
            <b>xlClipboardFormatRTF</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-304">
            <b>xlClipboardFormatRTF</b>
          </span></span></para>
          <para><span data-ttu-id="64263-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span></span></para>
          <para><span data-ttu-id="64263-306">
            <b>xlClipboardFormatStandardFont</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-306">
            <b>xlClipboardFormatStandardFont</b>
          </span></span></para>
          <para><span data-ttu-id="64263-307">
            <b>xlClipboardFormatStandardScale</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-307">
            <b>xlClipboardFormatStandardScale</b>
          </span></span></para>
          <para><span data-ttu-id="64263-308">
            <b>xlClipboardFormatSYLK</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-308">
            <b>xlClipboardFormatSYLK</b>
          </span></span></para>
          <para><span data-ttu-id="64263-309">
            <b>xlClipboardFormatTable</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-309">
            <b>xlClipboardFormatTable</b>
          </span></span></para>
          <para><span data-ttu-id="64263-310">
            <b>xlClipboardFormatText</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-310">
            <b>xlClipboardFormatText</b>
          </span></span></para>
          <para><span data-ttu-id="64263-311">
            <b>xlClipboardFormatToolFace</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-311">
            <b>xlClipboardFormatToolFace</b>
          </span></span></para>
          <para><span data-ttu-id="64263-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span></span></para>
          <para><span data-ttu-id="64263-313">
            <b>xlClipboardFormatVALU</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-313">
            <b>xlClipboardFormatVALU</b>
          </span></span></para>
          <para><span data-ttu-id="64263-314">
            <b>xlClipboardFormatWK1</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-314">
            <b>xlClipboardFormatWK1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-315">Obtiene o establece el nombre del conector de clúster de informática de alto rendimiento (HPC) que se usa para ejecutar funciones definidas por el usuario en complementos XLL.</span><span class="sxs-lookup"><span data-stu-id="64263-315">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></summary>
        <value><span data-ttu-id="64263-316">Nombre del conector de clúster de informática de alto rendimiento (HPC) que se usa para ejecutar funciones definidas por el usuario en complementos XLL.</span><span class="sxs-lookup"><span data-stu-id="64263-316">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></value>
        <remarks><para><span data-ttu-id="64263-317">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-317">Read/write.</span></span></para>
          <para><span data-ttu-id="64263-318">El valor de la propiedad corresponde al cuadro desplegable Tipo de clúster en Fórmulas de la categoría Avanzadas del cuadro de diálogo <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Opciones de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-318">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="64263-319">
            <b>Nota:</b>Para especificar la propiedad, debe instalar un conector de clúster de informática de alto rendimiento <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> (HPC).</span><span class="sxs-lookup"><span data-stu-id="64263-319">
            <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="64263-320">El conector de clúster permite ejecutar funciones XLL seguras para clústeres de forma remota en un clúster HPC para aumentar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-320">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="64263-321">Antes de especificar la propiedad, debe usar la propiedad para permitir que <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Microsoft Excel 2010 ejecute funciones definidas por el usuario en complementos <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> XLL.</span><span class="sxs-lookup"><span data-stu-id="64263-321">Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-322">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-323">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todas las columnas de la hoja de cálculo activa.</span><span class="sxs-lookup"><span data-stu-id="64263-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span></span> <span data-ttu-id="64263-324">Si el documento activo no es una hoja de cálculo, la propiedad <b>Columns</b> devuelve un error.</span><span class="sxs-lookup"><span data-stu-id="64263-324">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-325">Devuelve la colección de Microsoft Excel, que representa los complementos <see cref="T:Microsoft.Office.Core.COMAddIns" /> COM instalados actualmente.</span><span class="sxs-lookup"><span data-stu-id="64263-325">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-326">Devuelve un <see cref="T:Microsoft.Office.Core.CommandBars" /> objeto que representa las barras de comandos de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-326">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-327">Esta propiedad devuelve el conjunto de barras de comandos integradas y personalizadas disponibles para la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-327">This property returns the set of built-in and custom command bars available to the application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-328">Devuelve o establece el estado del subrayado de comandos en Microsoft Excel para Macintosh.</span><span class="sxs-lookup"><span data-stu-id="64263-328">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" />puede ser una de estas <b>constantes XlCommandUnderlines:</b></span><span class="sxs-lookup"><span data-stu-id="64263-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-330">
            <b>xlCommandUnderlinesOn</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-330">
            <b>xlCommandUnderlinesOn</b>
          </span></span></para>
          <para><span data-ttu-id="64263-331">
            <b>xlCommandUnderlinesOff</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-331">
            <b>xlCommandUnderlinesOff</b>
          </span></span></para>
          <para><span data-ttu-id="64263-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="64263-333">En Microsoft Excel para Windows, la lectura de esta propiedad siempre devuelve <b>xlCommandUnderlinesOn</b> y, cuando se establece como un valor distinto de <b>xlCommandUnderlinesOn</b>, devuelve un error.</span><span class="sxs-lookup"><span data-stu-id="64263-333">In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-334"><b>True</b> si el reconocimiento de escritura a mano está limitado a números y signos de puntuación.</span><span class="sxs-lookup"><span data-stu-id="64263-334"><b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-p145">Esta propiedad sólo está disponible cuando se usa Microsoft Windows para Pen Computing. Si intenta establecerla bajo cualquier otro sistema operativo, se producirá un error.</span><span class="sxs-lookup"><span data-stu-id="64263-p145">This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-337"><b>True</b> si Microsoft Excel muestra caracteres de control para idiomas con dirección de escritura de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="64263-337"><b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-338">Esta propiedad sólo se puede establecer si se ha instalado y seleccionado una versión de idioma con configuración de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="64263-338">This property can be set only when right to left language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula"><span data-ttu-id="64263-339">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-339">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-340">Cadena <b>que</b> contiene la fórmula que desea convertir.</span><span class="sxs-lookup"><span data-stu-id="64263-340">A <b>String</b> that contains the formula you want to convert.</span></span> <span data-ttu-id="64263-341">Debe ser una fórmula válida y empezar con un signo igual.</span><span class="sxs-lookup"><span data-stu-id="64263-341">This must be a valid formula, and it must begin with an equal sign.</span></span></param>
        <param name="FromReferenceStyle"><span data-ttu-id="64263-342">Obligatorio <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-342">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="64263-343">Estilo de referencia de la fórmula. <b>XlReferenceStyle</b> puede ser una de estas <b>constantes XlReferenceStyle:</b> <b>xlA1</b><b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="64263-343">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span></span></param>
        <param name="ToReferenceStyle"><span data-ttu-id="64263-344">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-344">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="64263-345">Estilo de referencia que desea devolver.</span><span class="sxs-lookup"><span data-stu-id="64263-345">The reference style you want returned.</span></span> <span data-ttu-id="64263-346">Si se omite este argumento, no se cambia el estilo de referencia; la fórmula permanece en el estilo especificado por <paramref name="FromReferenceStyle" /> . XlReferenceStyle puede ser una de estas constantes XlReferenceStyle.</span><span class="sxs-lookup"><span data-stu-id="64263-346">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span></span> <span data-ttu-id="64263-347"><b>xlA1 </b> <b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="64263-347"><b>xlA1 </b><b>xlR1C1</b></span></span></param>
        <param name="ToAbsolute"><span data-ttu-id="64263-348">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-348">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="64263-349">Especifica el tipo de referencia convertido.</span><span class="sxs-lookup"><span data-stu-id="64263-349">Specifies the converted reference type.</span></span> <span data-ttu-id="64263-350">Si se omite este argumento, el tipo de referencia no cambia. <b>XlReferenceStyle</b> puede ser una de estas <b>constantes XlReferenceStyle:</b> <b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span><span class="sxs-lookup"><span data-stu-id="64263-350">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span></span></param>
        <param name="RelativeTo"><span data-ttu-id="64263-351">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-351">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-352">opcional.</span><span class="sxs-lookup"><span data-stu-id="64263-352">Optional <b>Variant</b>.</span></span> <span data-ttu-id="64263-353">Objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> que contiene una celda.</span><span class="sxs-lookup"><span data-stu-id="64263-353">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span></span> <span data-ttu-id="64263-354">Las referencias relativas hacen referencia a esta celda.</span><span class="sxs-lookup"><span data-stu-id="64263-354">Relative references relate to this cell.</span></span></param>
        <summary><span data-ttu-id="64263-355">Convierte las referencias a celdas de una fórmula entre los estilos de referencia A1 y F1C1, entre referencias absolutas y relativas o ambas.</span><span class="sxs-lookup"><span data-stu-id="64263-355">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-356"><b>True</b> si los objetos se cortan, copian, extraen y ordenan con celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-356"><b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-357">Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-357">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="64263-358">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="64263-358">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-359">La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="64263-359">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="64263-360">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="64263-360">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-361">Devuelve o establece el aspecto del puntero del mouse en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-361">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" />puede ser una de estas <b>constantes XlMousePointer:</b></span><span class="sxs-lookup"><span data-stu-id="64263-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-363">
            <b>xlDefault</b> Puntero predeterminado.</span><span class="sxs-lookup"><span data-stu-id="64263-363">
            <b>xlDefault</b> The default pointer.</span></span></para>
          <para><span data-ttu-id="64263-364">
            <b>xlIBeam</b> Puntero de puntero de I.</span><span class="sxs-lookup"><span data-stu-id="64263-364">
            <b>xlIBeam</b> The I-beam pointer.</span></span></para>
          <para><span data-ttu-id="64263-365">
            <b>xlNorthwestArrow</b> Puntero de flecha del noroccidental.</span><span class="sxs-lookup"><span data-stu-id="64263-365">
            <b>xlNorthwestArrow</b> The northwest arrow pointer.</span></span></para>
          <para><span data-ttu-id="64263-366">
            <b>xlWait</b> Puntero de reloj de arena.</span><span class="sxs-lookup"><span data-stu-id="64263-366">
            <b>xlWait</b> The hourglass pointer.</span></span></para>
          <para><span data-ttu-id="64263-367">La <b>propiedad Cursor</b> no se restablece automáticamente cuando la macro deja de ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="64263-367">The <b>Cursor</b> property isn't reset automatically when the macro stops running.</span></span> <span data-ttu-id="64263-368">Debe restablecer el puntero a <b>xlDefault</b> antes de que la macro deje de ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="64263-368">You should reset the pointer to <b>xlDefault</b> before your macro stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-369">Devuelve o establece un valor que indica si se utiliza un cursor visual o un cursor lógico.</span><span class="sxs-lookup"><span data-stu-id="64263-369">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span></span> <span data-ttu-id="64263-370">Puede ser una de las siguientes constantes: <b>xlVisualCursor</b> o <b>xlLogicalCursor</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-370">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-371">Estas constantes pueden no estar disponibles, según el idioma instalado o seleccionado (por ejemplo, inglés de EE.UU.).</span><span class="sxs-lookup"><span data-stu-id="64263-371">These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-372">Devuelve el número de listas personalizadas que se han definido (incluye las listas integradas).</span><span class="sxs-lookup"><span data-stu-id="64263-372">Returns the number of defined custom lists (including built-in lists).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-373">Devuelve o establece el estado del modo Cortar o Copiar.</span><span class="sxs-lookup"><span data-stu-id="64263-373">Returns or sets the status of Cut or Copy mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />puede ser una de estas <b>constantes XlCutCopyMode.</b></span><span class="sxs-lookup"><span data-stu-id="64263-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-375">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-375">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="64263-376">No en modo cortar o copiar</span><span class="sxs-lookup"><span data-stu-id="64263-376">Not in Cut or Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-377">
                <b>xlCopy</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-377">
                <b>xlCopy</b>
              </span></span></term>
              <description><span data-ttu-id="64263-378">En el modo Copiar</span><span class="sxs-lookup"><span data-stu-id="64263-378">In Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-379">
                <b>xlCut</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-379">
                <b>xlCut</b>
              </span></span></term>
              <description><span data-ttu-id="64263-380">En el modo Cortar</span><span class="sxs-lookup"><span data-stu-id="64263-380">In Cut mode</span></span></description>
            </item>
          </list>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-381">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-381">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="64263-382">Cancela el modo Cortar o Copiar y elimina el borde móvil.</span><span class="sxs-lookup"><span data-stu-id="64263-382">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-383">
                <b>True</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-383">
                <b>True</b>
              </span></span></term>
              <description><span data-ttu-id="64263-384">Cancela el modo Cortar o Copiar y elimina el borde móvil.</span><span class="sxs-lookup"><span data-stu-id="64263-384">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-385">Devuelve o establece el modo de entrada de datos, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="64263-385">Returns or sets Data Entry mode, as shown in the table below.</span></span> <span data-ttu-id="64263-386">En el modo de entrada de datos sólo pueden escribirse datos en las celdas desbloqueadas del rango seleccionado.</span><span class="sxs-lookup"><span data-stu-id="64263-386">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="64263-387">
                <b>xlOn</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-387">
                <b>xlOn</b>
              </span></span></term>
              <description><span data-ttu-id="64263-388">El modo de entrada de datos está activado.</span><span class="sxs-lookup"><span data-stu-id="64263-388">Data Entry mode is turned on.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-389">
                <b>xlOff</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-389">
                <b>xlOff</b>
              </span></span></term>
              <description><span data-ttu-id="64263-390">El modo de entrada de datos está desactivado.</span><span class="sxs-lookup"><span data-stu-id="64263-390">Data Entry mode is turned off.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-391">
                <b>xlStrict</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-391">
                <b>xlStrict</b>
              </span></span></term>
              <description><span data-ttu-id="64263-392">El modo de entrada de datos está activado y presionar ESC no lo desactivará.</span><span class="sxs-lookup"><span data-stu-id="64263-392">Data Entry mode is turned on and pressing ESC won't turn it off.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-393">Devuelve el código de devolución DDE específico de la aplicación que se encontraba en el último mensaje de confirmación DDE recibido por Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-393">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="64263-394">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-394">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-395">Número de canal devuelto por el <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> método.</span><span class="sxs-lookup"><span data-stu-id="64263-395">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="String"><span data-ttu-id="64263-396"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-396">Required <b>String</b>.</span></span> <span data-ttu-id="64263-397">El mensaje definido en la aplicación receptora.</span><span class="sxs-lookup"><span data-stu-id="64263-397">The message defined in the receiving application.</span></span></param>
        <summary><span data-ttu-id="64263-398">Ejecuta un comando o realiza otra acción o acciones en otra aplicación por medio del canal de DDE especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-398">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-399">El método <b>DDEExecute</b> envía comandos a otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-399">The <b>DDEExecute</b> method is designed to send commands to another application.</span></span> <span data-ttu-id="64263-400">También puede usarlo para enviar pulsaciones de teclas a otra aplicación, aunque el método es la forma preferida de enviar <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> pulsaciones de teclas.</span><span class="sxs-lookup"><span data-stu-id="64263-400">You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes.</span></span> <span data-ttu-id="64263-401">El <paramref name="String" /> argumento puede especificar cualquier tecla única combinada con ALT, CTRL o MAYÚS, o cualquier combinación de dichas teclas.</span><span class="sxs-lookup"><span data-stu-id="64263-401">The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys.</span></span> <span data-ttu-id="64263-402">Cada tecla se representa mediante uno o varios caracteres, como "a" para el carácter a, o "{ENTER}" para la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="64263-402">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="64263-p159">Para especificar caracteres que no se muestran al pulsar la tecla correspondiente (por ejemplo, ENTRAR o TAB), use los códigos que se muestran en la tabla siguiente. Cada código de la tabla representa una tecla del teclado.</span><span class="sxs-lookup"><span data-stu-id="64263-p159">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-405">RETROCESO</span><span class="sxs-lookup"><span data-stu-id="64263-405">BACKSPACE</span></span></term>
              <description><span data-ttu-id="64263-406">{RETROCESO} o {BS}</span><span class="sxs-lookup"><span data-stu-id="64263-406">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-407">INTER</span><span class="sxs-lookup"><span data-stu-id="64263-407">BREAK</span></span></term>
              <description><span data-ttu-id="64263-408">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="64263-408">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-409">BLOQ MAYÚS</span><span class="sxs-lookup"><span data-stu-id="64263-409">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="64263-410">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-410">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-411">BORRAR</span><span class="sxs-lookup"><span data-stu-id="64263-411">CLEAR</span></span></term>
              <description><span data-ttu-id="64263-412">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="64263-412">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-413">SUPRIMIR o SUPR</span><span class="sxs-lookup"><span data-stu-id="64263-413">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="64263-414">{DELETE} o {DEL}</span><span class="sxs-lookup"><span data-stu-id="64263-414">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-415">FLECHA ABAJO</span><span class="sxs-lookup"><span data-stu-id="64263-415">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="64263-416">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="64263-416">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-417">FIN</span><span class="sxs-lookup"><span data-stu-id="64263-417">END</span></span></term>
              <description><span data-ttu-id="64263-418">{END}</span><span class="sxs-lookup"><span data-stu-id="64263-418">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-419">ENTRAR</span><span class="sxs-lookup"><span data-stu-id="64263-419">ENTER</span></span></term>
              <description><span data-ttu-id="64263-420">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="64263-420">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-421">ENTRAR (teclado numérico)</span><span class="sxs-lookup"><span data-stu-id="64263-421">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="64263-422">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="64263-422">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-423">ESC</span><span class="sxs-lookup"><span data-stu-id="64263-423">ESC</span></span></term>
              <description><span data-ttu-id="64263-424">{ESCAPE} o {ESC}</span><span class="sxs-lookup"><span data-stu-id="64263-424">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-425">F1 a F15</span><span class="sxs-lookup"><span data-stu-id="64263-425">F1 through F15</span></span></term>
              <description><span data-ttu-id="64263-426">{F1} a {F15}</span><span class="sxs-lookup"><span data-stu-id="64263-426">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-427">AYUDA</span><span class="sxs-lookup"><span data-stu-id="64263-427">HELP</span></span></term>
              <description><span data-ttu-id="64263-428">{HELP}</span><span class="sxs-lookup"><span data-stu-id="64263-428">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-429">INICIO</span><span class="sxs-lookup"><span data-stu-id="64263-429">HOME</span></span></term>
              <description><span data-ttu-id="64263-430">{INICIO}</span><span class="sxs-lookup"><span data-stu-id="64263-430">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-431">INS</span><span class="sxs-lookup"><span data-stu-id="64263-431">INS</span></span></term>
              <description><span data-ttu-id="64263-432">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="64263-432">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-433">FLECHA IZQUIERDA</span><span class="sxs-lookup"><span data-stu-id="64263-433">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="64263-434">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="64263-434">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-435">BLOQ NUM</span><span class="sxs-lookup"><span data-stu-id="64263-435">NUM LOCK</span></span></term>
              <description><span data-ttu-id="64263-436">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-436">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-437">AV PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-437">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="64263-438">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="64263-438">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-439">RE PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-439">PAGE UP</span></span></term>
              <description><span data-ttu-id="64263-440">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="64263-440">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-441">VOLVER</span><span class="sxs-lookup"><span data-stu-id="64263-441">RETURN</span></span></term>
              <description><span data-ttu-id="64263-442">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="64263-442">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-443">FLECHA DERECHA</span><span class="sxs-lookup"><span data-stu-id="64263-443">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="64263-444">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="64263-444">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-445">BLOQ DESPL</span><span class="sxs-lookup"><span data-stu-id="64263-445">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="64263-446">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-446">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-447">TAB</span><span class="sxs-lookup"><span data-stu-id="64263-447">TAB</span></span></term>
              <description><span data-ttu-id="64263-448">{TAB}</span><span class="sxs-lookup"><span data-stu-id="64263-448">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-449">FLECHA ARRIBA</span><span class="sxs-lookup"><span data-stu-id="64263-449">UP ARROW</span></span></term>
              <description><span data-ttu-id="64263-450">{UP}</span><span class="sxs-lookup"><span data-stu-id="64263-450">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-p160">También puede especificar teclas combinadas con MAYÚS o CTRL o ALT. Para especificar una combinación de teclas con alguna o varias de las teclas mencionadas, use la siguiente tabla:</span><span class="sxs-lookup"><span data-stu-id="64263-p160">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-453">MAYÚSCULAS</span><span class="sxs-lookup"><span data-stu-id="64263-453">SHIFT</span></span></term>
              <description><span data-ttu-id="64263-454">+ (signo más)</span><span class="sxs-lookup"><span data-stu-id="64263-454">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-455">CTRL</span><span class="sxs-lookup"><span data-stu-id="64263-455">CTRL</span></span></term>
              <description><span data-ttu-id="64263-456">^ (intercalación)</span><span class="sxs-lookup"><span data-stu-id="64263-456">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-457">ALT</span><span class="sxs-lookup"><span data-stu-id="64263-457">ALT</span></span></term>
              <description><span data-ttu-id="64263-458">% (signo porcentual)</span><span class="sxs-lookup"><span data-stu-id="64263-458">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App"><span data-ttu-id="64263-459"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-459">Required <b>String</b>.</span></span> <span data-ttu-id="64263-460">Nombre de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-460">The application name.</span></span></param>
        <param name="Topic"><span data-ttu-id="64263-461"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-461">Required <b>String</b>.</span></span> <span data-ttu-id="64263-462">Describe un elemento de la aplicación a la que se va a abrir un canal, generalmente un documento de esa aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-462">Describes something in the application to which you're opening a channel — usually a document of that application.</span></span></param>
        <summary><span data-ttu-id="64263-463">Abre un canal de DDE a una aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-463">Opens a DDE channel to an application.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-464">Si tiene éxito, el método <b>DDEInitiate</b> devolverá el número del canal abierto.</span><span class="sxs-lookup"><span data-stu-id="64263-464">If successful, the <b>DDEInitiate</b> method returns the number of the open channel.</span></span> <span data-ttu-id="64263-465">Todas las funciones DDE subsiguientes utilizan este número para especificar el canal.</span><span class="sxs-lookup"><span data-stu-id="64263-465">All subsequent DDE functions use this number to specify the channel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="64263-466">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-466">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-467">Número de canal devuelto por el <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> método.</span><span class="sxs-lookup"><span data-stu-id="64263-467">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="64263-468">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-468">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-469">Elemento al que se enviarán los datos.</span><span class="sxs-lookup"><span data-stu-id="64263-469">The item to which the data is to be sent.</span></span></param>
        <param name="Data"><span data-ttu-id="64263-470">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-470">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-471">Datos que se enviarán a la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-471">The data to be sent to the application.</span></span></param>
        <summary><span data-ttu-id="64263-472">Envía datos a una aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-472">Sends data to an application.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-473">Si la llamada al método no se realiza correctamente, se producirá un error.</span><span class="sxs-lookup"><span data-stu-id="64263-473">An error occurs if the method call doesn't succeed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="64263-474">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-474">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-475">Número de canal devuelto por el <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> método.</span><span class="sxs-lookup"><span data-stu-id="64263-475">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="64263-476"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-476">Required <b>String</b>.</span></span> <span data-ttu-id="64263-477">El elemento que se solicita.</span><span class="sxs-lookup"><span data-stu-id="64263-477">The item to be requested.</span></span></param>
        <summary><span data-ttu-id="64263-478">Solicita información de la aplicación especificada.</span><span class="sxs-lookup"><span data-stu-id="64263-478">Requests information from the specified application.</span></span> <span data-ttu-id="64263-479">Este método siempre devuelve una matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-479">This method always returns an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="64263-480">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-480">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-481">Número de canal devuelto por el <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> método.</span><span class="sxs-lookup"><span data-stu-id="64263-481">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <summary><span data-ttu-id="64263-482">Cierra un canal a otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-482">Closes a channel to another application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-483">Establece o devuelve el carácter utilizado como separador decimal como una <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-483">Sets or returns the character used for the decimal separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-484">Devuelve o establece la ruta de acceso predeterminada utilizada por Microsoft Excel para abrir archivos.</span><span class="sxs-lookup"><span data-stu-id="64263-484">Returns or sets the default path that Microsoft Excel uses when it opens files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-485">Devuelve o establece el formato predeterminado con el que se guardan los archivos.</span><span class="sxs-lookup"><span data-stu-id="64263-485">Returns or sets the default format for saving files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-486">Devuelve o establece la dirección predeterminada en la que Microsoft Excel muestra las ventanas y hojas de cálculo nuevas.</span><span class="sxs-lookup"><span data-stu-id="64263-486">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span></span> <span data-ttu-id="64263-487">Puede ser una de las constantes siguientes: <b>xlRTL</b> (de derecha a izquierda) o <b>xlLTR</b> (de izquierda a derecha).</span><span class="sxs-lookup"><span data-stu-id="64263-487">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-488">Algunas de estas constantes pueden no estar disponibles, según el idioma instalado o seleccionado (por ejemplo, inglés de EE.UU.).</span><span class="sxs-lookup"><span data-stu-id="64263-488">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-489">Devuelve el objeto que contiene atributos globales de nivel de aplicación usados por Microsoft Excel cada vez que guarda un documento como página web o <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> abre una página web.</span><span class="sxs-lookup"><span data-stu-id="64263-489">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-490">Devuelve o establece si se ejecutan las consultas asincrónicas a orígenes de datos OLAP cuando se actualiza una hoja de cálculo mediante código de VBA.</span><span class="sxs-lookup"><span data-stu-id="64263-490">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span></span> <span data-ttu-id="64263-491">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-491">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-492"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-492"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-493">Si se <b>establece la propiedad DeferAsyncQueries</b> en <b>True,</b> se impide que se ejecute cualquier formulario de consultas asincrónicas hasta que <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> se llame al método.</span><span class="sxs-lookup"><span data-stu-id="64263-493">Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="64263-494"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-494">Required <b>String</b>.</span></span> <span data-ttu-id="64263-495">Nombre del formato automático personalizado que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="64263-495">The name of the custom autoformat to be removed.</span></span></param>
        <summary><span data-ttu-id="64263-496">Elimina un formato automático de gráfico personalizado de la lista de formatos automáticos de gráfico disponibles.</span><span class="sxs-lookup"><span data-stu-id="64263-496">Removes a custom chart autoformat from the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="64263-497">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-497">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-498">Número de la lista personalizada.</span><span class="sxs-lookup"><span data-stu-id="64263-498">The custom list number.</span></span> <span data-ttu-id="64263-499">Debe ser mayor o igual que 5 (Microsoft Excel tiene cuatro listas personalizadas integradas, que no pueden eliminarse).</span><span class="sxs-lookup"><span data-stu-id="64263-499">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span></span></param>
        <summary><span data-ttu-id="64263-500">Elimina una lista personalizada.</span><span class="sxs-lookup"><span data-stu-id="64263-500">Deletes a custom list.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-501">Este método produce un error si el número de la lista es menor que 5 o si hace referencia a una lista personalizada inexistente.</span><span class="sxs-lookup"><span data-stu-id="64263-501">This method generates an error if the list number is less than 5 or if there's no matching custom list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-502">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> colección que representa todos los cuadros de diálogo integrados.</span><span class="sxs-lookup"><span data-stu-id="64263-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-503">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-503">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-504"><b>True</b> si Microsoft Excel muestra alertas y mensajes determinados mientras se ejecuta una macro.</span><span class="sxs-lookup"><span data-stu-id="64263-504"><b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-505">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-505">The default value is <b>True</b>.</span></span> <span data-ttu-id="64263-506">Establezca esta propiedad en <b>False</b> si no desea que los mensajes de aviso y los mensajes de alerta se desfilarán mientras se ejecuta un programa; cada vez que un mensaje requiere una respuesta, Microsoft Excel elige la respuesta predeterminada.</span><span class="sxs-lookup"><span data-stu-id="64263-506">Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</span></span></para>
          <para><span data-ttu-id="64263-507">Si establece esta propiedad en <b>False</b>, Microsoft Excel establece esta propiedad en <b>True</b> cuando finaliza el código, a menos que ejecute código entre procesos.</span><span class="sxs-lookup"><span data-stu-id="64263-507">If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</span></span></para>
          <para><span data-ttu-id="64263-508">Al usar el método para que los libros sobrescriban un archivo existente, la alerta "Sobrescribir" tiene el valor predeterminado "No", mientras que Excel selecciona la respuesta "Sí" cuando la propiedad <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>DisplayAlerts</b> está establecida en <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-508">When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-509">Devuelve <b>True</b> si es posible mostrar el Portapapeles de Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-509">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-510">Devuelve o establece el modo en el que se muestran comentarios e indicadores.</span><span class="sxs-lookup"><span data-stu-id="64263-510">Returns or sets the way cells display comments and indicators.</span></span> <span data-ttu-id="64263-511">Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constantes: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>o <b>xlCommentAndIndicator</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-511">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-512">Establecer en <b>True para</b> mostrar el panel de tareas Acciones de documento; se establece en <b>False</b> para ocultar el panel de tareas Acciones del documento.</span><span class="sxs-lookup"><span data-stu-id="64263-512">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-513">Si establece esta propiedad en <b>True</b>, se generará un error en tiempo de ejecución si el libro activo no es un documento inteligente.</span><span class="sxs-lookup"><span data-stu-id="64263-513">Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-514">Devuelve o establece un <b>valor Boolean</b> que representa si se muestra el panel de propiedades de documento.</span><span class="sxs-lookup"><span data-stu-id="64263-514">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed.</span></span> <span data-ttu-id="64263-515">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-515">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-516"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-516"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-517"><b>True</b> si Microsoft Excel muestra las barras de menús de la versión 4.0.</span><span class="sxs-lookup"><span data-stu-id="64263-517"><b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-518">Obtiene o establece si se debe mostrar una lista de las funciones y nombres definidos relevantes al generar fórmulas de celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-518">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span></span> <span data-ttu-id="64263-519">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-519">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-520"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-520"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-521"><b>True</b> si está visible la barra de fórmulas.</span><span class="sxs-lookup"><span data-stu-id="64263-521"><b>True</b> if the formula bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-522"><b>True</b> si Microsoft Excel está en el modo de pantalla completa.</span><span class="sxs-lookup"><span data-stu-id="64263-522"><b>True</b> if Microsoft Excel is in full-screen mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-p179">El modo de pantalla completa maximiza la ventana de la aplicación, para que ocupe toda la pantalla y oculte la barra de título de la aplicación. Las barras de herramientas, la barra de estado y la barra de fórmulas mantienen configuraciones de presentación independientes en los modos de pantalla completa y normal.</span><span class="sxs-lookup"><span data-stu-id="64263-p179">Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-525"><b>True</b> si se puede mostrar al función de información sobre herramientas.</span><span class="sxs-lookup"><span data-stu-id="64263-525"><b>True</b> if function ToolTips can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-526">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-526">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-527"><b>True</b> si se debe mostrar el botón Insertar opciones.</span><span class="sxs-lookup"><span data-stu-id="64263-527"><b>True</b> if the Insert Options button should be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-528"><b>True</b> si en las celdas que contienen notas se muestran sugerencias de celda y contienen indicadores de notas (pequeños puntos en la esquina superior derecha).</span><span class="sxs-lookup"><span data-stu-id="64263-528"><b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-529"><b>True</b> si se puede mostrar el botón Opciones de pegado.</span><span class="sxs-lookup"><span data-stu-id="64263-529"><b>True</b> if the Paste Options button can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-530">Se trata de un valor que afecta a Microsoft Office en su conjunto.</span><span class="sxs-lookup"><span data-stu-id="64263-530">This is a Microsoft Office-wide setting.</span></span> <span data-ttu-id="64263-531">Por ello, afectará a todas las demás aplicaciones de Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-531">This setting affects all other Microsoft Office applications.</span></span> <span data-ttu-id="64263-532">Si se <b>establece la propiedad DisplayPasteOptions</b> en <b>True,</b> se desactiva el botón Opciones de relleno automático en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-532">Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel.</span></span> <span data-ttu-id="64263-533">El botón <b>Opciones de autorrelleno</b> sólo existe en Excel, pero el botón Opciones de pegado figura en todas las demás aplicaciones de Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-533">The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-534"><b>True</b> si la lista de archivos usados recientemente se muestra en el menú Archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-534"><b>True</b> if the list of recently used files is displayed on the File menu.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-535"><b>True</b> si las barras de desplazamiento están visibles en todos los libros.</span><span class="sxs-lookup"><span data-stu-id="64263-535"><b>True</b> if scroll bars are visible for all workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-536">Es <b>True</b> si se muestra la barra de estado.</span><span class="sxs-lookup"><span data-stu-id="64263-536"><b>True</b> if the status bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap"><span data-ttu-id="64263-537">Objeto <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> opcional.</span><span class="sxs-lookup"><span data-stu-id="64263-537">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="64263-538">Asignación XML que se va a mostrar en el panel de tareas.</span><span class="sxs-lookup"><span data-stu-id="64263-538">The XML map to display in the task pane.</span></span></param>
        <summary><span data-ttu-id="64263-539">Abre el panel de tareas Origen XML y muestra la asignación XML especificada por el <paramref name="XmlMap" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="64263-539">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-540">Las características XML, excepto para guardar archivos en formato de hoja de cálculo XML, solo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="64263-540">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-541">Equivale a hacer doble clic en la celda activa.</span><span class="sxs-lookup"><span data-stu-id="64263-541">Equivalent to double-clicking the active cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary><span data-ttu-id="64263-542">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-542">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="64263-543">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-543">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-544">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-544">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-545">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-545">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary><span data-ttu-id="64263-546">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-546">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="64263-547">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-547">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-548">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-548">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary><span data-ttu-id="64263-549">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-549">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary><span data-ttu-id="64263-550">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-550">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="64263-551"><b>s</b></span><span class="sxs-lookup"><span data-stu-id="64263-551"><b>s</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-552">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-552">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary><span data-ttu-id="64263-553">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-553">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary><span data-ttu-id="64263-554">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-554">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-555">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-555">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-556">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-556">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="64263-557">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-557">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-558">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-558">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-559"><b>True</b> si Microsoft Excel permite realizar operaciones de edición en las celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-559"><b>True</b> if Microsoft Excel allows editing in cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-560">Este objeto, miembro o enumeración está en desuso y no debería usarse en el código.</span><span class="sxs-lookup"><span data-stu-id="64263-560">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-561"><b>True</b> si está activada la característica Autocompletar.</span><span class="sxs-lookup"><span data-stu-id="64263-561"><b>True</b> if the AutoComplete feature is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-562">Controla la forma en que Microsoft Excel administra las interrupciones del usuario CTRL+INTER (o ESC o COMANDO+PUNTO) en el procedimiento que se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="64263-562">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span></span> <span data-ttu-id="64263-563">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-563">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-564">
            <b>XlEnableCancelKey</b> puede ser una de estas <b>constantes XlEnableCancelKey:</b></span><span class="sxs-lookup"><span data-stu-id="64263-564">
            <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="64263-565">
                <b>xlDisabled</b>    La captura de teclas de cancelación está completamente deshabilitada.</span><span class="sxs-lookup"><span data-stu-id="64263-565">
                <b>xlDisabled</b>  Cancel key trapping is completely disabled.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-566">
                <b>xlErrorHandler</b>    La interrupción se envía al procedimiento en ejecución como un error, capturable por un controlador de errores configurado con una instrucción On Error GoTo.</span><span class="sxs-lookup"><span data-stu-id="64263-566">
                <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement.</span></span> <span data-ttu-id="64263-567">El código de error interceptable es 18.</span><span class="sxs-lookup"><span data-stu-id="64263-567">The trappable error code is 18.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-568">
                <b>xlInterrupt</b>    El procedimiento actual se interrumpe y el usuario puede depurar o finalizar el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-568">
                <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-569">Utilice esta propiedad con mucho cuidado.</span><span class="sxs-lookup"><span data-stu-id="64263-569">Use this property very carefully.</span></span> <span data-ttu-id="64263-570">Si <b>usas xlDisabled,</b>no hay forma de interrumpir un bucle desprotegido u otro código que no termine por sí mismo.</span><span class="sxs-lookup"><span data-stu-id="64263-570">If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating.</span></span> <span data-ttu-id="64263-571">Del mismo modo, si utiliza <b>xlErrorHandler</b> pero las devoluciones del controlador de errores siempre tienen lugar mediante la instrucción <b>Resume</b>, no podrá detener código en continua ejecución de ninguna manera.</span><span class="sxs-lookup"><span data-stu-id="64263-571">Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</span></span></para>
          <para><span data-ttu-id="64263-572">La propiedad <b>EnableCancelKey</b> siempre se restablece en <b>xlInterrupt</b> cuando Microsoft Excel vuelve al estado inactivo y no se está ejecutando ningún código.</span><span class="sxs-lookup"><span data-stu-id="64263-572">The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running.</span></span> <span data-ttu-id="64263-573">Para interceptar o deshabilitar la cancelación de un procedimiento, se debe cambiar explícitamente la propiedad <b>EnableCancelKey</b> cada vez que se llame al procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-573">To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-574">True para habilitar el cuadro de diálogo Información si Microsoft Excel no es el programa predeterminado para ver y editar hojas de cálculo.</span><span class="sxs-lookup"><span data-stu-id="64263-574">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-575"><b>True</b> si los eventos se activan para el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-575"><b>True</b> if events are enabled for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-576">Devuelve o establece un valor <b>Boolean</b> que representa si se debe mostrar un mensaje de aviso cuando un usuario intenta realizar una operación que afecta a un número de celdas mayor que el especificado en la interfaz de usuario central de Office.</span><span class="sxs-lookup"><span data-stu-id="64263-576">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span></span> <span data-ttu-id="64263-577">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-577">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-578"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-578"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-579">El valor predeterminado de esta propiedad es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-579">The default value of this property is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-580">Establece o devuelve un <b>valor Boolean</b> que representa si se va a mostrar u ocultar vistas previas de la galería que aparecen al utilizar galerías que permiten obtener vistas previas.</span><span class="sxs-lookup"><span data-stu-id="64263-580">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span></span> <span data-ttu-id="64263-581">Al establecer esta propiedad en <b>True</b> se muestra una vista previa de su libro antes de aplicar el comando.</span><span class="sxs-lookup"><span data-stu-id="64263-581">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span></span> <span data-ttu-id="64263-582">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-582">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-583"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-583"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-584">Esta propiedad corresponde a la casilla de verificación Habilitar vistas previas activas del cuadro de diálogo Opciones de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-584">This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-585">Controla si las animaciones de macro están habilitadas.</span><span class="sxs-lookup"><span data-stu-id="64263-585">Controls whether macro animations are enabled.</span></span> <span data-ttu-id="64263-586"><b>True</b> si las animaciones de interfaz de usuario o las animaciones de gráfico están habilitadas.</span><span class="sxs-lookup"><span data-stu-id="64263-586"><b>True</b> if user interface animations or chart animations are enabled.</span></span> <span data-ttu-id="64263-587">Se establece en <b>False</b> (sin animación) de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="64263-587">Is set to <b>False</b> (no animation) by default.</span></span> <span data-ttu-id="64263-588">Si se establece en <b>True</b> durante la ejecución de una macro, habilitará la animación y, a continuación, se restablecerá a <b>False</b> después de que se ejecute la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-588">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span></span> <span data-ttu-id="64263-589">Boolean de <b>lectura y escritura</b> (<b>bool</b> en C#).</span><span class="sxs-lookup"><span data-stu-id="64263-589">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-590"><b>True</b> para habilitar el sonido en Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-590"><b>True</b> if sound is enabled for Microsoft Office.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-591">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-591">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-592">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> objeto, que representa las opciones de comprobación de errores de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-592">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="64263-593">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-593">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-594">Nombre del objeto, en el que se usan las convenciones de nomenclatura de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-594">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="64263-595">Convierte un nombre de Microsoft Excel en un objeto o un valor.</span><span class="sxs-lookup"><span data-stu-id="64263-595">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-596">Los siguientes tipos de nombres de Microsoft Excel se pueden usar con este método:</span><span class="sxs-lookup"><span data-stu-id="64263-596">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="64263-p190">Referencias estilo A1. Puede usar cualquier referencia a una sola celda en la notación de estilo A1. Todas las referencias se consideran absolutas.</span><span class="sxs-lookup"><span data-stu-id="64263-p190">A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-p191">Rangos. Con las referencias puede usar los operadores de rango, intersección y unión (dos puntos, espacio y punto y coma, respectivamente).</span><span class="sxs-lookup"><span data-stu-id="64263-p191">Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-p192">Nombres definidos. Puede especificar cualquier nombre en el lenguaje de la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-p192">Defined names. You can specify any name in the language of the macro.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-604">Referencias externas.</span><span class="sxs-lookup"><span data-stu-id="64263-604">External references.</span></span> <span data-ttu-id="64263-605">Puede usar !</span><span class="sxs-lookup"><span data-stu-id="64263-605">You can use the !</span></span> <span data-ttu-id="64263-606">para hacer referencia a una celda o un nombre definido en otro libro; por ejemplo, Evaluate("[BOOK1.XLS]Sheet1!A1").</span><span class="sxs-lookup"><span data-stu-id="64263-606">operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-607">
            <b>Nota:</b>El uso de corchetes (por ejemplo, "[A1:C5]") es idéntico a llamar al método <b>Evaluate</b> con un argumento de cadena.</span><span class="sxs-lookup"><span data-stu-id="64263-607">
            <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument.</span></span> <span data-ttu-id="64263-608">La ventaja de usar corchetes es que el código es más corto.</span><span class="sxs-lookup"><span data-stu-id="64263-608">The advantage of using square brackets is that the code is shorter.</span></span> <span data-ttu-id="64263-609">La ventaja de usar <b>Evaluate es</b> que el argumento es una cadena, por lo que puede construir la cadena en el código o usar una variable.</span><span class="sxs-lookup"><span data-stu-id="64263-609">The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-610">Devuelve una colección que representa todas las hojas <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> de macros internacionales de Microsoft Excel 4.0 del libro especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-611">Devuelve una colección que representa todas las hojas de macros de <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> Microsoft Excel 4.0 del libro especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-611">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="64263-612"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-612">Required <b>String</b>.</span></span> <span data-ttu-id="64263-613">Función de lenguaje macro de Microsoft Excel 4.0 sin el signo igual.</span><span class="sxs-lookup"><span data-stu-id="64263-613">A Microsoft Excel 4.0 macro language function without the equal sign.</span></span> <span data-ttu-id="64263-614">Todas las referencias deberán darse como cadenas R1C1.</span><span class="sxs-lookup"><span data-stu-id="64263-614">All references must be given as R1C1 strings.</span></span> <span data-ttu-id="64263-615">Si <paramref name="String" /> contiene comillas dobles incrustadas, debe duplicarlas.</span><span class="sxs-lookup"><span data-stu-id="64263-615">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span></span> <span data-ttu-id="64263-616">Por ejemplo, para ejecutar la función de macro =MID("sometext",1,4), tendría que ser <paramref name="String" /> "MID(""sometext"",1,4)".</span><span class="sxs-lookup"><span data-stu-id="64263-616">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span></span></param>
        <summary><span data-ttu-id="64263-617">Ejecuta una función de macro de Microsoft Excel 4.0 y, a continuación, devuelve el resultado de la función.</span><span class="sxs-lookup"><span data-stu-id="64263-617">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span></span> <span data-ttu-id="64263-618">El tipo devuelto depende de la función.</span><span class="sxs-lookup"><span data-stu-id="64263-618">The return type depends on the function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-619">La macro de Microsoft Excel 4.0 no se evalúa en el contexto del libro o de la hoja actuales.</span><span class="sxs-lookup"><span data-stu-id="64263-619">The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet.</span></span> <span data-ttu-id="64263-620">Es decir, que cualquier referencia deberá ser externa y deberá especificar un nombre de libro explícito.</span><span class="sxs-lookup"><span data-stu-id="64263-620">This means that any references should be external and should specify an explicit workbook name.</span></span> <span data-ttu-id="64263-621">Por ejemplo, para ejecutar la macro de Microsoft Excel 4.0 "My_Macro" en Book1, debe usar "Book1! My_Macro()".</span><span class="sxs-lookup"><span data-stu-id="64263-621">For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()".</span></span> <span data-ttu-id="64263-622">Si no especifica el nombre del libro, este método fallará.</span><span class="sxs-lookup"><span data-stu-id="64263-622">If you don't specify the workbook name, this method fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-623"><b>True</b> si Microsoft Excel extiende automáticamente el formato y las fórmulas de los nuevos datos que se agregan a una lista.</span><span class="sxs-lookup"><span data-stu-id="64263-623"><b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-624">Para ampliarlos, los formatos y las fórmulas deben aparecer al menos en tres de las cinco filas o columnas de lista anteriores a la nueva fila o columna, y los datos deben agregarse al final o al lado derecho de la lista.</span><span class="sxs-lookup"><span data-stu-id="64263-624">To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-625">Devuelve o establece un valor (constante) que especifica cómo Microsoft Excel controla las llamadas a métodos y propiedades que requieren características que no están instaladas todavía.</span><span class="sxs-lookup"><span data-stu-id="64263-625">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span></span> <span data-ttu-id="64263-626">Lectura y <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-626">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-627">
            <b>MsoFeatureInstall</b> puede ser una de estas constantes <b>MsoFeatureInstall:</b></span><span class="sxs-lookup"><span data-stu-id="64263-627">
            <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="64263-628">
                <b>msoFeatureInstallNone</b>    Genera un error genérico de automatización en tiempo de ejecución cuando se llama a las características desinstaladas.</span><span class="sxs-lookup"><span data-stu-id="64263-628">
                <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called.</span></span> <span data-ttu-id="64263-629">Ésta es la constante predeterminada.</span><span class="sxs-lookup"><span data-stu-id="64263-629">This is the default constant.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-630">
                <b>msoFeatureInstallOnDemand</b>    Solicita al usuario que instale nuevas características.</span><span class="sxs-lookup"><span data-stu-id="64263-630">
                <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-631">
                <b>msoFeatureInstallOnDemandWithUI</b>    Muestra un indicador de progreso durante la instalación; no solicita al usuario que instale nuevas características.</span><span class="sxs-lookup"><span data-stu-id="64263-631">
                <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-632">Puede utilizar la constante <b>msoFeatureInstallOnDemandWithUI</b> para evitar que los usuarios piensen que la aplicación no responde mientras se instala una característica.</span><span class="sxs-lookup"><span data-stu-id="64263-632">You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed.</span></span> <span data-ttu-id="64263-633">Utilice la constante <b>msoFeatureInstallNone</b> si desea que el programador sea la única persona que pueda instalar las características.</span><span class="sxs-lookup"><span data-stu-id="64263-633">Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</span></span></para>
          <para><span data-ttu-id="64263-634">Si tiene la propiedad establecida en False , no se pedirá a los usuarios que instalen nuevas características incluso si la propiedad FeatureInstall está establecida en <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>msoFeatureInstallOnDemand</b>. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-634">If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span> <span data-ttu-id="64263-635">Si la propiedad se establece en True , aparecerá un indicador de progreso de la instalación si la propiedad FeatureInstall está establecida en <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>msoFeatureInstallOnDemand</b>. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-635">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="64263-636">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-637">El nombre largo del convertidor, incluida la cadena de búsqueda de tipo de archivo en Windows, por ejemplo, "Lotus 1-2-3 Files (*.wk*)".</span><span class="sxs-lookup"><span data-stu-id="64263-637">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span></span></param>
        <param name="Index2"><span data-ttu-id="64263-638">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-638">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-639">Ruta de acceso de la biblioteca DLL del convertidor o del recurso de código.</span><span class="sxs-lookup"><span data-stu-id="64263-639">The path of the converter DLL or code resource.</span></span></param>
        <summary><span data-ttu-id="64263-640">Devuelve información sobre los convertidores de archivos instalados.</span><span class="sxs-lookup"><span data-stu-id="64263-640">Returns information about installed file converters.</span></span> <span data-ttu-id="64263-641">Devuelve <b>Null</b> si no hay ningún convertidor instalado.</span><span class="sxs-lookup"><span data-stu-id="64263-641">Returns <b>Null</b> if there are no converters installed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-642">Si no especifica argumentos, esta propiedad devuelve una matriz que contiene información sobre todos los convertidores de archivos instalados.</span><span class="sxs-lookup"><span data-stu-id="64263-642">If you don’t specify arguments, this property returns an array that contains information about all the installed file converters.</span></span> <span data-ttu-id="64263-643">Cada fila de la matriz contiene información acerca de un solo convertidor, como se muestra en la siguiente tabla.</span><span class="sxs-lookup"><span data-stu-id="64263-643">Each row in the array contains information about a single file converter, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-644">1 </span><span class="sxs-lookup"><span data-stu-id="64263-644">1</span></span></term>
              <description><span data-ttu-id="64263-645">Nombre largo del convertidor.</span><span class="sxs-lookup"><span data-stu-id="64263-645">The long name of the converter</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-646">2 </span><span class="sxs-lookup"><span data-stu-id="64263-646">2</span></span></term>
              <description><span data-ttu-id="64263-647">Ruta de acceso de la biblioteca DLL del convertidor o del recurso de código.</span><span class="sxs-lookup"><span data-stu-id="64263-647">The path of the converter DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-648">3</span><span class="sxs-lookup"><span data-stu-id="64263-648">3</span></span></term>
              <description><span data-ttu-id="64263-649">Cadena de búsqueda de la extensión de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-649">The file-extension search string</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType"><span data-ttu-id="64263-650">Obligatorio <see cref="T:Microsoft.Office.Core.MsoFileDialogType" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-650">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span></span> <span data-ttu-id="64263-651">El tipo de cuadro de diálogo de archivo. <b>MsoFileDialogType</b> puede ser una de estas constantes <b>MsoFileDialogType:</b> <b>msoFileDialogFilePicker</b> Permite al usuario seleccionar un archivo. <b>msoFileDialogFolderPicker</b> Permite al usuario seleccionar una carpeta. <b>msoFileDialogOpen</b> Permite al usuario abrir un archivo. <b>msoFileDialogSaveAs</b> Permite al usuario guardar un archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-651">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span></span></param>
        <summary><span data-ttu-id="64263-652">Devuelve un <see cref="T:Microsoft.Office.Core.FileDialog" /> objeto que representa una instancia del cuadro de diálogo de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-652">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-653">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> colección que representa todos los convertidores de archivos para guardar archivos disponibles para Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-653">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span></span> <span data-ttu-id="64263-654">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-654">Read-only.</span></span></summary>
        <value><span data-ttu-id="64263-655">Devuelve <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-655">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-p208">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span><span class="sxs-lookup"><span data-stu-id="64263-p208">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-658">Devuelve un <see cref="T:Microsoft.Office.Core.FileSearch" /> objeto para su uso con búsquedas de archivos.</span><span class="sxs-lookup"><span data-stu-id="64263-658">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span></span> <span data-ttu-id="64263-659">Esta propiedad solo está disponible en Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="64263-659">This property is available only in Microsoft Windows.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-660">Obtiene o establece cómo validará Microsoft Excel los archivos antes de abrirlos.</span><span class="sxs-lookup"><span data-stu-id="64263-660">Gets or sets how Microsoft Excel will validate files before opening them.</span></span></summary>
        <value><span data-ttu-id="64263-661">Un <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-661">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="64263-662">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-662">Read/write.</span></span></para>
          <para><span data-ttu-id="64263-663">Archivos que no pasan la validación se abrirá en una ventana Vista protegida.</span><span class="sxs-lookup"><span data-stu-id="64263-663">Files that do not pass validation will be opened in a Protected View window.</span></span> <span data-ttu-id="64263-664">Si establece la propiedad, esa configuración permanecerá en vigor durante toda la sesión en la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> que la aplicación esté abierta.</span><span class="sxs-lookup"><span data-stu-id="64263-664">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-665">Obtiene o establece cómo validará Microsoft Excel el contenido de las memorias caché de datos para los informes de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="64263-665">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span></span></summary>
        <value><span data-ttu-id="64263-666">Un <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-666">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="64263-667">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-667">Read/write.</span></span></para>
          <para><span data-ttu-id="64263-668">Los archivos que contienen memorias caché de datos que no se validan se abrirán en una ventana Vista protegida.</span><span class="sxs-lookup"><span data-stu-id="64263-668">Files that contain data caches that do not validate will be opened in a Protected View window.</span></span> <span data-ttu-id="64263-669">Si establece la propiedad, esa configuración permanecerá en vigor durante toda la sesión en la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> que la aplicación esté abierta.</span><span class="sxs-lookup"><span data-stu-id="64263-669">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-670">Muestra el cuadro de diálogo Abrir.</span><span class="sxs-lookup"><span data-stu-id="64263-670">Displays the Open dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-671">Este método muestra el cuadro de diálogo Abrir y permite al usuario abrir un archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-671">This method displays the Open dialog box and allows the user to open a file.</span></span> <span data-ttu-id="64263-672">Si se abre un archivo nuevo correctamente, este método devolverá <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-672">If a new file is opened successfully, this method returns <b>True</b>.</span></span> <span data-ttu-id="64263-673">Si el usuario cancela el cuadro de diálogo, el método devolverá <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-673">If the user cancels the dialog box, this method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-674">Establece o devuelve los criterios de búsqueda del tipo de formatos de celda que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="64263-674">Sets or returns the search criteria for the type of cell formats to find.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-675">Todos los datos especificados después de establecer esta propiedad en <b>True</b> tendrán el formato de número de posiciones decimales fijas establecidas por la <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-675">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-676">Devuelve o establece el número de posiciones decimales fijas utilizadas cuando <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> la propiedad se establece en <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-676">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-677"><b>TRUE</b> indica que la característica Relleno de Flash de Excel se ha habilitado y activo.</span><span class="sxs-lookup"><span data-stu-id="64263-677"><b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span></span> <span data-ttu-id="64263-678"><b>Booleano</b> (<b>bool</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="64263-678"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-679">Relleno rápido detecta cuándo se modifican los datos que se ajusta a un patrón que se puede rellenar y aplicar a datos adicionales en el libro y, a continuación, rellena automáticamente la columna con los resultados.</span><span class="sxs-lookup"><span data-stu-id="64263-679">Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-680"><b>True</b> si la característica Destello está habilitada.</span><span class="sxs-lookup"><span data-stu-id="64263-680"><b>True</b> if the Flash Fill feature is enabled.</span></span> <span data-ttu-id="64263-681"><b>Booleano</b> (<b>bool</b> en C#) Lectura y escritura</span><span class="sxs-lookup"><span data-stu-id="64263-681"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-682">Permite al usuario especificar en líneas el alto de la barra de fórmulas.</span><span class="sxs-lookup"><span data-stu-id="64263-682">Allows the user to specify the height of the formula bar in lines.</span></span> <span data-ttu-id="64263-683">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-683">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-684"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="64263-684"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-685">Si el valor especificado de <b>FormulaBarHeight</b> es mayor que el espacio de la ventana que se puede ver, se cambia el tamaño de la barra de fórmulas para que sea igual al alto de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-685">If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-686">Devuelve <b>True</b> cuando Microsoft Excel puede obtener datos de un informe de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="64263-686">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-687">La propiedad determina si se usa el método de notación tradicional o el nuevo método de notación de referencia estructurado para hacer referencia a <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> tablas en fórmulas.</span><span class="sxs-lookup"><span data-stu-id="64263-687">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span></span> <span data-ttu-id="64263-688">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-688">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="64263-689">Required <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-689">Required <b>Integer</b>.</span></span> <span data-ttu-id="64263-690">El número de la lista.</span><span class="sxs-lookup"><span data-stu-id="64263-690">The list number.</span></span></param>
        <summary><span data-ttu-id="64263-691">Devuelve el número de la lista personalizada (una matriz de cadenas de caracteres).</span><span class="sxs-lookup"><span data-stu-id="64263-691">Returns a custom list (an array of strings).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="64263-692">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-692">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-693">Matriz de cadenas de caracteres.</span><span class="sxs-lookup"><span data-stu-id="64263-693">An array of strings.</span></span></param>
        <summary><span data-ttu-id="64263-694">Devuelve el número de la lista personalizada correspondiente a una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="64263-694">Returns the custom list number for an array of strings.</span></span> <span data-ttu-id="64263-695">Puede usar este método para buscar listas integradas y listas definidas por el usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-695">You can use this method to match both built-in lists and custom-defined lists.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-696">Este método produce un error si no existe una lista correspondiente.</span><span class="sxs-lookup"><span data-stu-id="64263-696">This method generates an error if there's no corresponding list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter"><span data-ttu-id="64263-697">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-697">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-698">Cadena que especifica criterios de filtrado de archivos. Esta cadena consta de pares de cadenas de filtro de archivos seguidas por la especificación de filtro de archivos comodín MS-DOS, con cada parte y cada par separados por comas.</span><span class="sxs-lookup"><span data-stu-id="64263-698">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="64263-699">Cada par individual se muestra en el cuadro de la lista desplegable Tipos de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-699">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="64263-700">Por ejemplo, la siguiente cadena especifica dos filtros de archivo: texto y complemento: "Archivos de texto (*.txt),*.txt,Archivos de complemento (*.xla),*.xla". Para usar varias expresiones comodín de MS-DOS para un único tipo de filtro de archivo, separe las expresiones comodín con punto y coma, por ejemplo, "Visual Basic Files (*.bas; *.txt),*.bas;*. txt". Si se omite, el valor predeterminado de este argumento es "Todos los archivos (*.*),*".*</span><span class="sxs-lookup"><span data-stu-id="64263-700">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="64263-701">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-701">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-702">Especifica los números de índice de los criterios de filtrado de archivos predeterminados, de 1 al número de filtros especificado en <paramref name="FileFilter" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-702">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="64263-703">Si este argumento se omite o es mayor que el número de filtros presentes, se utiliza el primer filtro de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-703">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="64263-704">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-704">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-705">Especifica el título del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-705">Specifies the title of the dialog box.</span></span> <span data-ttu-id="64263-706">Si este argumento se omite, el título es "Abrir".</span><span class="sxs-lookup"><span data-stu-id="64263-706">If this argument is omitted, the title is "Open."</span></span></param>
        <param name="ButtonText"><span data-ttu-id="64263-707">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-707">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-708">Solo Macintosh.</span><span class="sxs-lookup"><span data-stu-id="64263-708">Macintosh only.</span></span></param>
        <param name="MultiSelect"><span data-ttu-id="64263-709">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-709">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-710"><b>True</b> para permitir la selección de varios nombres de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-710"><b>True</b> to allow multiple file names to be selected.</span></span> <span data-ttu-id="64263-711"><b>False</b> para permitir la selección de un solo archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-711"><b>False</b> to allow only one file name to be selected.</span></span> <span data-ttu-id="64263-712">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-712">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="64263-713">Muestra el cuadro de diálogo Abrir estándar y obtiene un nombre de archivo del usuario sin abrir los archivos.</span><span class="sxs-lookup"><span data-stu-id="64263-713">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-714">Este método devuelve el nombre de archivo seleccionado o el nombre que ha especificado el usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-714">This method returns the selected file name or the name entered by the user.</span></span> <span data-ttu-id="64263-715">El nombre devuelto puede incluir una especificación de ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="64263-715">The returned name may include a path specification.</span></span> <span data-ttu-id="64263-716">Si es True , el valor devuelto es una matriz de los nombres de archivo seleccionados (incluso si solo se selecciona un <paramref name="MultiSelect" /> nombre de archivo). <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-716">If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected).</span></span> <span data-ttu-id="64263-717">Devuelve <b>False</b> si el usuario cancela el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-717">Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="64263-718">Este método puede cambiar la unidad o la carpeta actual.</span><span class="sxs-lookup"><span data-stu-id="64263-718">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="64263-719">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-719">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-720">Especifica el texto que se convertirá en texto fonético.</span><span class="sxs-lookup"><span data-stu-id="64263-720">Specifies the text to be converted to phonetic text.</span></span> <span data-ttu-id="64263-721">Si omite este argumento, se devuelve la siguiente cadena de texto fonético posible (si existe) de la especificada <paramref name="Text" /> anteriormente.</span><span class="sxs-lookup"><span data-stu-id="64263-721">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span></span> <span data-ttu-id="64263-722">Si no hay más cadenas posibles de texto fonético, se devolverá una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="64263-722">If there are no more possible phonetic text strings, an empty string is returned.</span></span></param>
        <summary><span data-ttu-id="64263-p227">Devuelve el texto fonético en japonés de la cadena de texto especificada. Este método sólo está disponible si se ha seleccionado o instalado la versión de idioma japonés de Microsoft Office.</span><span class="sxs-lookup"><span data-stu-id="64263-p227">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename"><span data-ttu-id="64263-725">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-725">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-726">Especifica el nombre de archivo sugerido.</span><span class="sxs-lookup"><span data-stu-id="64263-726">Specifies the suggested file name.</span></span> <span data-ttu-id="64263-727">Si se omite este argumento, Microsoft Excel usa el nombre del libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-727">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span></span></param>
        <param name="FileFilter"><span data-ttu-id="64263-728">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-728">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-729">Cadena que especifica criterios de filtrado de archivos. Esta cadena consta de pares de cadenas de filtro de archivos seguidas por la especificación de filtro de archivos comodín MS-DOS, con cada parte y cada par separados por comas.</span><span class="sxs-lookup"><span data-stu-id="64263-729">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="64263-730">Cada par individual se muestra en el cuadro de la lista desplegable Tipos de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-730">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="64263-731">Por ejemplo, la siguiente cadena especifica dos filtros de archivo, texto y complemento: "Archivos de texto (*.txt), *.txt, Add-In Files (*.xla), *.xla". Para usar* varias expresiones comodín de MS-DOS para un único tipo de filtro de archivo, separe las expresiones comodín con punto y coma, por ejemplo, "Visual Basic Files ( .bas; *.txt),*.bas;*. txt". Si se omite, el valor predeterminado de este argumento es "Todos los archivos (*.*),*".*</span><span class="sxs-lookup"><span data-stu-id="64263-731">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="64263-732">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-732">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-733">Especifica el número de índice de los criterios de filtrado de archivos predeterminados, de 1 al número de filtros especificado en <paramref name="FileFilter" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-733">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="64263-734">Si este argumento se omite o es mayor que el número de filtros presentes, se utiliza el primer filtro de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-734">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="64263-735">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-735">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-736">Especifica el título del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-736">Specifies the title of the dialog box.</span></span> <span data-ttu-id="64263-737">Si se omite este argumento, se usa el título predeterminado.</span><span class="sxs-lookup"><span data-stu-id="64263-737">If this argument is omitted, the default title is used.</span></span></param>
        <param name="ButtonText"><span data-ttu-id="64263-738">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-738">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-739">Solo Macintosh.</span><span class="sxs-lookup"><span data-stu-id="64263-739">Macintosh only.</span></span></param>
        <summary><span data-ttu-id="64263-740">Muestra el cuadro de diálogo estándar Guardar como y solicita al usuario un nombre de archivo sin guardar realmente ningún archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-740">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-p233">Este método devuelve el nombre de archivo seleccionado o el nombre especificado por el usuario. El nombre devuelto podría incluir una especificación de ruta. Devuelve <b>False</b> si el usuario cancela el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-p233">This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="64263-744">Este método puede cambiar la unidad o la carpeta actual.</span><span class="sxs-lookup"><span data-stu-id="64263-744">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference"><span data-ttu-id="64263-745">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-745">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-746">El destino.</span><span class="sxs-lookup"><span data-stu-id="64263-746">The destination.</span></span> <span data-ttu-id="64263-747">Puede ser un objeto, una cadena que contiene una referencia de celda en notación de estilo R1C1 o una cadena que contiene un nombre Visual Basic <see cref="T:Microsoft.Office.Interop.Excel.Range" /> procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-747">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span></span> <span data-ttu-id="64263-748">Si se omite este argumento, el destino es el último rango que usó el método <b>Goto</b> para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="64263-748">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span></span></param>
        <param name="Scroll"><span data-ttu-id="64263-749">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-749">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-750"><b>True</b> para desplazarse por la ventana de modo que el vértice superior izquierdo del rango aparezca en el vértice superior izquierdo de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-750"><b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span></span> <span data-ttu-id="64263-751"><b>False</b> para no desplazarse por la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-751"><b>False</b> to not scroll through the window.</span></span> <span data-ttu-id="64263-752">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-752">The default is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="64263-753">Selecciona cualquier intervalo o procedimiento Visual Basic en cualquier libro y activa dicho libro si aún no está activo.</span><span class="sxs-lookup"><span data-stu-id="64263-753">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-754">Este método difiere del método <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> de las siguientes maneras:</span><span class="sxs-lookup"><span data-stu-id="64263-754">This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="64263-p236">Si se especifica un rango en una hoja que no esté en la parte superior, Microsoft Excel cambiará a dicha hoja antes de seleccionar. (Si usa <b>Select</b> con un rango en una hoja que no esté en la parte superior, el rango se seleccionará, pero la hoja no se activará).</span><span class="sxs-lookup"><span data-stu-id="64263-p236">If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting. (If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-757">Este método tiene un <paramref name="Scroll" /> argumento que permite desplazarse por la ventana de destino.</span><span class="sxs-lookup"><span data-stu-id="64263-757">This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-758">Cuando se usa el <b>método Goto,</b> la selección anterior (antes de que se ejecute el método <b>Goto)</b> se agrega a la matriz de selecciones anteriores (para obtener más información, vea la <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> propiedad).</span><span class="sxs-lookup"><span data-stu-id="64263-758">When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property).</span></span> <span data-ttu-id="64263-759">Puede usar esta característica para saltar rápidamente hasta por cuatro selecciones.</span><span class="sxs-lookup"><span data-stu-id="64263-759">You can use this feature to quickly jump between as many as four selections.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="64263-760">El <b>método Select</b> tiene un <paramref name="Replace" /> argumento; el método <b>Goto</b> no.</span><span class="sxs-lookup"><span data-stu-id="64263-760">The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-761">Alto, en puntos, de la ventana principal de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-761">The height, in points, of the main application window.</span></span> <span data-ttu-id="64263-762">Si la ventana está minimizada, esta propiedad es de sólo lectura y se refiere al alto del icono.</span><span class="sxs-lookup"><span data-stu-id="64263-762">If the window is minimized, this property is read-only and refers to the height of the icon.</span></span> <span data-ttu-id="64263-763">Si la ventana está maximizada, no se puede establecer la propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-763">If the window is maximized, this property cannot be set.</span></span> <span data-ttu-id="64263-764">Use la <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> propiedad para determinar el estado de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-764">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile"><span data-ttu-id="64263-765">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-765">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-766">Nombre del archivo de Ayuda en pantalla que desee mostrar.</span><span class="sxs-lookup"><span data-stu-id="64263-766">The name of the online Help file you want to display.</span></span> <span data-ttu-id="64263-767">Si este argumento no se especifica, se usará el archivo de la Ayuda de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-767">If this argument isn't specified, Microsoft Excel Help is used.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="64263-768">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-768">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-769">Especifica el número de identificación de contexto para el tema de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="64263-769">Specifies the context ID number for the Help topic.</span></span> <span data-ttu-id="64263-770">Si este argumento no se especifica, se mostrará el cuadro de diálogo de Temas de la ayuda.</span><span class="sxs-lookup"><span data-stu-id="64263-770">If this argument isn't specified, the Help Topics dialog box is displayed.</span></span></param>
        <summary><span data-ttu-id="64263-771">Muestra un tema de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="64263-771">Displays a Help topic.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-772">Obtiene o establece si Excel usa el modo de alta calidad para imprimir gráficos.</span><span class="sxs-lookup"><span data-stu-id="64263-772">Gets or sets whether Excel uses high quality mode to print graphics.</span></span></summary>
        <value><span data-ttu-id="64263-773"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-773"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-774">Esta propiedad se corresponde con el valor de la casilla de verificación Modo de alta calidad para gráficos en la sección Imprimir de la categoría Avanzadas del cuadro de diálogo Opciones de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-774">This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-775">Devuelve el identificador de instancia de la instancia que llama a Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-775">Returns the instance handle of the instance that is calling Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-776">Obtiene un identificador para la instancia de Microsoft Excel 2010 representada por el objeto <see cref="T:Microsoft.Office.Interop.Excel._Application" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-776">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></summary>
        <value><span data-ttu-id="64263-777">Identificador de la instancia de Microsoft Excel 2010 representada por el objeto <see cref="T:Microsoft.Office.Interop.Excel._Application" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-777">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="64263-778"><b>Variant</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-778">Read-only <b>Variant</b>.</span></span></para>
          <para><span data-ttu-id="64263-779">Esta propiedad devuelve un controlador correcto en versiones de Excel de 32 y 64 bits.</span><span class="sxs-lookup"><span data-stu-id="64263-779">This property returns a correct handle in both the 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="64263-780">Amplía la funcionalidad de la propiedad del objeto, que solo funciona correctamente en la versión de <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 32 bits de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-780">It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</span></span></para>
          <para><span data-ttu-id="64263-781">El tipo ideal de datos para usar con esta propiedad es el tipo de datos <b>LongPtr</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-781">The ideal data type to use with this property is the <b>LongPtr</b> data type.</span></span> <span data-ttu-id="64263-782">Asignar el valor devuelto por esta propiedad a una variable <b>LongPtr</b> funcionará según lo esperado en versiones de Excel de 32 y 64 bits.</span><span class="sxs-lookup"><span data-stu-id="64263-782">Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="64263-783">La propiedad se define como <b>Variant</b> por motivos de implementación interna.</span><span class="sxs-lookup"><span data-stu-id="64263-783">The property is defined as <b>Variant</b> for internal implementation reasons.</span></span> <span data-ttu-id="64263-784">Sin embargo, siempre devuelve un valor de 32 bits en sistemas de 32 bits y un valor de 64 bits en sistemas de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="64263-784">However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</span></span></para>
          <para><span data-ttu-id="64263-785">Esta propiedad solo funciona a partir de Excel 2010 y solo es necesaria con la versión de 64 bits de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-785">This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel.</span></span> <span data-ttu-id="64263-786">Si debe escribir código que también funcione con versiones anteriores de Excel, para evitar errores de compilación, lea esta propiedad en una directiva de compilación condicional de #if Win64 y use la propiedad en la directiva <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> #else.</span><span class="sxs-lookup"><span data-stu-id="64263-786">If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</span></span></para>
          <para><span data-ttu-id="64263-787">
            <b>Nota:</b>Esta propiedad funciona bien en entornos de 32 y 64 bits a partir de Excel 2010.</span><span class="sxs-lookup"><span data-stu-id="64263-787">
            <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010.</span></span> <span data-ttu-id="64263-788">Por lo tanto, si el código está pensado para usarse solo con Excel 2010 o versiones posteriores, ya sea de 32 o 64 bits, puede leer esta propiedad sin compilación condicional.</span><span class="sxs-lookup"><span data-stu-id="64263-788">Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-789">Devuelve un <b>entero</b> que indica el controlador de ventana de nivel superior de la ventana de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-789">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-790"><b>True</b> si se hace caso omiso de las solicitudes remotas del DDE.</span><span class="sxs-lookup"><span data-stu-id="64263-790"><b>True</b> if remote DDE requests are ignored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches"><span data-ttu-id="64263-791">Required <b>Double</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-791">Required <b>Double</b>.</span></span> <span data-ttu-id="64263-792">Especifica el valor en pulgadas que se convertirá a puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-792">Specifies the inch value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="64263-793">Convierte una medida de pulgadas a puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-793">Converts a measurement from inches to points.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="64263-794">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-794">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-795">Mensaje que se mostrará en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-795">The message to be displayed in the dialog box.</span></span> <span data-ttu-id="64263-796">Puede ser una cadena, un número, una fecha o un <b>valor booleano.</b></span><span class="sxs-lookup"><span data-stu-id="64263-796">This can be a string, a number, a date, or a <b>Boolean</b> value.</span></span></param>
        <param name="Title"><span data-ttu-id="64263-797">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-797">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-798">Título para el cuadro de entrada.</span><span class="sxs-lookup"><span data-stu-id="64263-798">The title for the input box.</span></span> <span data-ttu-id="64263-799">Si este argumento se omite, el título predeterminado será "Entrada".</span><span class="sxs-lookup"><span data-stu-id="64263-799">If this argument is omitted, the default title is "Input."</span></span></param>
        <param name="Default"><span data-ttu-id="64263-800">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-800">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-801">Especifica un valor que aparecerá en el cuadro de texto cuando se muestre inicialmente el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-801">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span></span> <span data-ttu-id="64263-802">Si este argumento se omite, el cuadro de texto permanecerá vacío.</span><span class="sxs-lookup"><span data-stu-id="64263-802">If this argument is omitted, the text box is left empty.</span></span> <span data-ttu-id="64263-803">Este valor puede ser un objeto <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-803">This value can be a <b>Range</b> object.</span></span></param>
        <param name="Left"><span data-ttu-id="64263-804">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-804">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-805">Especifica una posición x para el cuadro de diálogo en relación con la esquina superior izquierda de la pantalla en puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-805">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="Top"><span data-ttu-id="64263-806">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-806">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-807">Especifica una posición y para el cuadro de diálogo en relación con la esquina superior izquierda de la pantalla en puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-807">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="64263-808">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-809">Nombre del archivo de Ayuda para este cuadro de entrada.</span><span class="sxs-lookup"><span data-stu-id="64263-809">The name of the Help file for this input box.</span></span> <span data-ttu-id="64263-810">Si los <paramref name="HelpFile" /> argumentos y están presentes, aparecerá un botón <paramref name="HelpContextID" /> Ayuda en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-810">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="64263-811">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-811">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-812">El número de identificador de contexto del tema de ayuda en <paramref name="HelpFile" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-812">The context ID number of the Help topic in <paramref name="HelpFile" />.</span></span></param>
        <param name="Type"><span data-ttu-id="64263-813">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-813">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-814">Especifica el tipo de datos que se devuelve.</span><span class="sxs-lookup"><span data-stu-id="64263-814">Specifies the return data type.</span></span> <span data-ttu-id="64263-815">Si se omite este argumento, el cuadro de diálogo devolverá texto.</span><span class="sxs-lookup"><span data-stu-id="64263-815">If this argument is omitted, the dialog box returns text.</span></span> <span data-ttu-id="64263-816">Puede ser uno o una suma de los siguientes valores. Puede usar la suma de los valores permitidos para <paramref name="Type" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-816">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span></span> <span data-ttu-id="64263-817">Por ejemplo, para un cuadro de entrada que puede aceptar texto y números, establezca <paramref name="Type" /> en 1 + 2.</span><span class="sxs-lookup"><span data-stu-id="64263-817">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span></span></param>
        <summary><span data-ttu-id="64263-818">Muestra un cuadro de diálogo para la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-818">Displays a dialog box for user input.</span></span> <span data-ttu-id="64263-819">Devuelve la información introducida en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-819">Returns the information entered in the dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-820">Use <b>InputBox</b> para mostrar un cuadro de diálogo sencillo que permite escribir información para usarla en una macro.</span><span class="sxs-lookup"><span data-stu-id="64263-820">Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro.</span></span> <span data-ttu-id="64263-821">El cuadro de diálogo tiene un botón Aceptar y un botón Cancelar.</span><span class="sxs-lookup"><span data-stu-id="64263-821">The dialog box has an OK button and a Cancel button.</span></span> <span data-ttu-id="64263-822">Si elige el botón Aceptar, <b>InputBox</b> devolverá el valor escrito en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-822">If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box.</span></span> <span data-ttu-id="64263-823">Si elige el botón Cancelar, <b>InputBox</b> devolverá <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-823">If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</span></span></para>
          <para><span data-ttu-id="64263-824">Si es 0, InputBox devuelve la fórmula en forma de texto, por <paramref name="Type" /> ejemplo, "=2\*PI()/360". <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-824">If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360".</span></span> <span data-ttu-id="64263-825">Si existen referencias en la fórmula, estas se devuelven como referencias de estilo A1.</span><span class="sxs-lookup"><span data-stu-id="64263-825">If there are any references in the formula, they are returned as A1-style references.</span></span> <span data-ttu-id="64263-826">(Se <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> usa para convertir entre estilos de referencia).</span><span class="sxs-lookup"><span data-stu-id="64263-826">(Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</span></span></para>
          <para><span data-ttu-id="64263-827">Si <paramref name="Type" /> es 8, <b>InputBox devuelve</b> un objeto <b>Range</b> .</span><span class="sxs-lookup"><span data-stu-id="64263-827">If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</span></span></para>
          <para><span data-ttu-id="64263-828">Si usa el <b>método InputBox</b> para solicitar al usuario una fórmula, debe usar la propiedad para asignar la fórmula <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> a un objeto <b>Range.</b></span><span class="sxs-lookup"><span data-stu-id="64263-828">If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object.</span></span> <span data-ttu-id="64263-829">La fórmula de entrada estará en el idioma del usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-829">The input formula will be in the user's language.</span></span></para>
          <para><span data-ttu-id="64263-830">El <b>método InputBox</b> difiere de la función <b>InputBox</b> en que permite la validación selectiva de la entrada del usuario y se puede usar con objetos, valores de error y fórmulas de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-830">The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas.</span></span> <span data-ttu-id="64263-831">InputBox sin calificador de objeto llama a <b>la función InputBox.</b></span><span class="sxs-lookup"><span data-stu-id="64263-831">InputBox with no object qualifier calls the <b>InputBox</b> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-832"><b>True</b> si Microsoft Excel está en modo interactivo; esta propiedad suele ser <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-832"><b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span></span> <span data-ttu-id="64263-833">Si establece esta propiedad en <b>False,</b>Microsoft Excel bloqueará todas las entradas del teclado y el mouse (excepto la entrada a los cuadros de diálogo que se muestran en el código).</span><span class="sxs-lookup"><span data-stu-id="64263-833">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span></span> <span data-ttu-id="64263-834">El bloqueo de la entrada del usuario impedirá que el usuario interfiera con el código a medida que mueve o activa objetos de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-834">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-835">Esta propiedad es útil si está escribiendo código para comunicarse con Microsoft Excel desde otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-835">This property is useful if you're writing code to communicate with Microsoft Excel from another application.</span></span></para>
          <para><span data-ttu-id="64263-836">Si establece la propiedad como <b>False</b>, no olvide volver a darle el valor <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-836">If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>.</span></span> <span data-ttu-id="64263-837">Microsoft Excel no volverá a establecer automáticamente esta propiedad en <b>True</b> cuando el código deje de ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="64263-837">Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="64263-838">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-838">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-839">Configuración que se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="64263-839">The setting to be returned.</span></span> <span data-ttu-id="64263-840">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constantes enumeradas en las tablas siguientes.</span><span class="sxs-lookup"><span data-stu-id="64263-840">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span></span></param>
        <summary><span data-ttu-id="64263-841">Devuelve información sobre la configuración internacional y el país o región actual.</span><span class="sxs-lookup"><span data-stu-id="64263-841">Returns information about the current country/region and international settings.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-842">Corchetes y llaves</span><span class="sxs-lookup"><span data-stu-id="64263-842">Brackets and Braces</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-843">
                <b>xlLeftBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-843">
                <b>xlLeftBrace</b>
              </span></span></term>
              <description><span data-ttu-id="64263-844">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-844">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-845">Carácter que se emplea en lugar de la llave izquierda ({) en los literales de matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-845">Character used instead of the left brace ({) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-846">
                <b>xlLeftBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-846">
                <b>xlLeftBracket</b>
              </span></span></term>
              <description><span data-ttu-id="64263-847">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-847">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-848">Carácter empleado en lugar del corchete izquierdo ([) en las referencias relativas de estilo F1C1.</span><span class="sxs-lookup"><span data-stu-id="64263-848">Character used instead of the left bracket ([) in R1C1-style relative references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-849">
                <b>xlLowerCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-849">
                <b>xlLowerCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="64263-850">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-850">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-851">Letra de columna en minúsculas.</span><span class="sxs-lookup"><span data-stu-id="64263-851">Lowercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-852">
                <b>xlLowerCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-852">
                <b>xlLowerCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="64263-853">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-853">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-854">Letra de fila en minúsculas.</span><span class="sxs-lookup"><span data-stu-id="64263-854">Lowercase row letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-855">
                <b>xlRightBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-855">
                <b>xlRightBrace</b>
              </span></span></term>
              <description><span data-ttu-id="64263-856">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-856">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-857">Carácter que se emplea en lugar de la llave derecha (}) en los literales de matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-857">Character used instead of the right brace (}) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-858">
                <b>xlRightBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-858">
                <b>xlRightBracket</b>
              </span></span></term>
              <description><span data-ttu-id="64263-859">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-859">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-860">Carácter empleado en lugar del corchete derecho (]) en las referencias de estilo F1C1.</span><span class="sxs-lookup"><span data-stu-id="64263-860">Character used instead of the right bracket (]) in R1C1-style references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-861">
                <b>xlUpperCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-861">
                <b>xlUpperCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="64263-862">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-862">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-863">Letra de columna en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="64263-863">Uppercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-864">
                <b>xlUpperCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-864">
                <b>xlUpperCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="64263-865">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-865">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-866">Letra de fila en mayúsculas (para las referencias de estilo F1C1).</span><span class="sxs-lookup"><span data-stu-id="64263-866">Uppercase row letter (for R1C1-style references).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-867">Configuración de país o región</span><span class="sxs-lookup"><span data-stu-id="64263-867">Country/Region Settings</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-868">
                <b>xlCountryCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-868">
                <b>xlCountryCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-869">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-869">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-870">Versión de país o región de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-870">Country/Region version of Microsoft Excel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-871">
                <b>xlCountrySetting</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-871">
                <b>xlCountrySetting</b>
              </span></span></term>
              <description><span data-ttu-id="64263-872">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-872">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-873">Configuración actual de país o región en el Panel de control de Windows.</span><span class="sxs-lookup"><span data-stu-id="64263-873">Current country/region setting in the Windows Control Panel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-874">
                <b>xlGeneralFormatName</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-874">
                <b>xlGeneralFormatName</b>
              </span></span></term>
              <description><span data-ttu-id="64263-875">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-875">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-876">Nombre del formato numérico General.</span><span class="sxs-lookup"><span data-stu-id="64263-876">Name of the General number format.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-877">Divisa</span><span class="sxs-lookup"><span data-stu-id="64263-877">Currency</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-878">
                <b>xlCurrencyBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-878">
                <b>xlCurrencyBefore</b>
              </span></span></term>
              <description><span data-ttu-id="64263-879">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-879">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-880">
                <b>True</b> si el símbolo de moneda precede a los valores monetarios; <b>False</b> si los sitúa a continuación.</span><span class="sxs-lookup"><span data-stu-id="64263-880">
                <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-881">
                <b>xlCurrencyCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-881">
                <b>xlCurrencyCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-882">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-882">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-883">Símbolo de moneda.</span><span class="sxs-lookup"><span data-stu-id="64263-883">Currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-884">
                <b>xlCurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-884">
                <b>xlCurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="64263-885">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-885">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-886">Número de decimales que van a utilizarse en los formatos de moneda.</span><span class="sxs-lookup"><span data-stu-id="64263-886">Number of decimal digits to be used in currency formats.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-887">
                <b>xlCurrencyLeadingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-887">
                <b>xlCurrencyLeadingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="64263-888">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-888">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-889">
                <b>True</b> si se muestran los ceros a la izquierda en los valores monetarios cero.</span><span class="sxs-lookup"><span data-stu-id="64263-889">
                <b>True</b> if leading zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-890">
                <b>xlCurrencyMinusSign</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-890">
                <b>xlCurrencyMinusSign</b>
              </span></span></term>
              <description><span data-ttu-id="64263-891">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-891">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-892">
                <b>True</b> si se usa un signo menos para los números negativos; <b>False</b> si se utilizan paréntesis.</span><span class="sxs-lookup"><span data-stu-id="64263-892">
                <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-893">
                <b>xlCurrencyNegative</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-893">
                <b>xlCurrencyNegative</b>
              </span></span></term>
              <description><span data-ttu-id="64263-894">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-894">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-895">Formato de moneda para los valores negativos: 0 = (symbolx) o (xsymbol) 1 = -symbolx o -xsymbol 2 = symbol-x o x-symbol 3 = symbolx- o xsymbol- donde symbol es el símbolo de moneda del país o región.</span><span class="sxs-lookup"><span data-stu-id="64263-895">Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region.</span></span> <span data-ttu-id="64263-896">Tenga en cuenta que la posición del símbolo de moneda está determinada por <b>xlCurrencyBefore</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-896">Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-897">
                <b>xlCurrencySpaceBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-897">
                <b>xlCurrencySpaceBefore</b>
              </span></span></term>
              <description><span data-ttu-id="64263-898">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-898">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-899">
                <b>True</b> si se agrega un espacio antes del símbolo de moneda.</span><span class="sxs-lookup"><span data-stu-id="64263-899">
                <b>True</b> if a space is added before the currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-900">
                <b>xlCurrencyTrailingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-900">
                <b>xlCurrencyTrailingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="64263-901">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-901">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-902">
                <b>True</b> si se muestran los ceros a la derecha en los valores monetarios cero.</span><span class="sxs-lookup"><span data-stu-id="64263-902">
                <b>True</b> if trailing zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-903">
                <b>xlNoncurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-903">
                <b>xlNoncurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="64263-904">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-904">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-905">Número de dígitos decimales que se usarán en formatos que no sean de moneda.</span><span class="sxs-lookup"><span data-stu-id="64263-905">Number of decimal digits to be used in non-currency formats.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-906">Fecha y hora</span><span class="sxs-lookup"><span data-stu-id="64263-906">Date and Time</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-907">
                <b>xl24HourClock</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-907">
                <b>xl24HourClock</b>
              </span></span></term>
              <description><span data-ttu-id="64263-908">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-908">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-909">
                <b>True</b> si el formato de hora que se utiliza es de 24 horas y <b>False</b> si es de 12 horas.</span><span class="sxs-lookup"><span data-stu-id="64263-909">
                <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-910">
                <b>xl4DigitYears</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-910">
                <b>xl4DigitYears</b>
              </span></span></term>
              <description><span data-ttu-id="64263-911">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-911">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-912">
                <b>True</b> si los años se expresan con cuatro dígitos, <b>False</b> si tienen dos.</span><span class="sxs-lookup"><span data-stu-id="64263-912">
                <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-913">
                <b>xlDateOrder</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-913">
                <b>xlDateOrder</b>
              </span></span></term>
              <description><span data-ttu-id="64263-914">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-914">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-915">Orden de los elementos de la fecha: 0 = mes-día-año 1 = día-mes-año 2 = año-mes-día</span><span class="sxs-lookup"><span data-stu-id="64263-915">Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-916">
                <b>xlDateSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-916">
                <b>xlDateSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-917">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-917">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-918">Separador de fecha (/).</span><span class="sxs-lookup"><span data-stu-id="64263-918">Date separator (/).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-919">
                <b>xlDayCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-919">
                <b>xlDayCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-920">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-920">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-921">Símbolo de día (d).</span><span class="sxs-lookup"><span data-stu-id="64263-921">Day symbol (d).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-922">
                <b>xlDayLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-922">
                <b>xlDayLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="64263-923">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-923">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-924">True si se muestra un cero a la izquierda de los días.</span><span class="sxs-lookup"><span data-stu-id="64263-924">True if a leading zero is displayed in days.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-925">
                <b>xlHourCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-925">
                <b>xlHourCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-926">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-926">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-927">Símbolo de hora (h).</span><span class="sxs-lookup"><span data-stu-id="64263-927">Hour symbol (h).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-928">
                <b>xlMDY</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-928">
                <b>xlMDY</b>
              </span></span></term>
              <description><span data-ttu-id="64263-929">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-929">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-930">
                <b>True</b> si el orden de las fechas que tienen formato largo es mes-día-año, <b>False</b> si el orden es día-mes-año.</span><span class="sxs-lookup"><span data-stu-id="64263-930">
                <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-931">
                <b>xlMinuteCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-931">
                <b>xlMinuteCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-932">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-932">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-933">Símbolo de minuto (m).</span><span class="sxs-lookup"><span data-stu-id="64263-933">Minute symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-934">
                <b>xlMonthCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-934">
                <b>xlMonthCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-935">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-935">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-936">Símbolo de mes (m).</span><span class="sxs-lookup"><span data-stu-id="64263-936">Month symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-937">
                <b>xlMonthLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-937">
                <b>xlMonthLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="64263-938">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-938">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-939">
                <b>True</b> si se muestra un cero a la izquierda de los meses (cuando éstos se muestran como números).</span><span class="sxs-lookup"><span data-stu-id="64263-939">
                <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-940">
                <b>xlMonthNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-940">
                <b>xlMonthNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="64263-941">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-941">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-942">Siempre devuelve tres caracteres por compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="64263-942">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="64263-943">Los nombres de meses se leen desde Microsoft Windows y pueden tener cualquier longitud.</span><span class="sxs-lookup"><span data-stu-id="64263-943">Abbreviated month names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-944">
                <b>xlSecondCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-944">
                <b>xlSecondCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-945">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-945">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-946">Símbolo de segundo (s).</span><span class="sxs-lookup"><span data-stu-id="64263-946">Second symbol (s).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-947">
                <b>xlTimeSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-947">
                <b>xlTimeSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-948">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-948">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-949">Separador de hora (:).</span><span class="sxs-lookup"><span data-stu-id="64263-949">Time separator (:).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-950">
                <b>xlTimeLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-950">
                <b>xlTimeLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="64263-951">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-951">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-952">
                <b>True</b> si se muestra un cero a la izquierda de las horas.</span><span class="sxs-lookup"><span data-stu-id="64263-952">
                <b>True</b> if a leading zero is displayed in times.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-953">
                <b>xlWeekdayNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-953">
                <b>xlWeekdayNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="64263-954">
                <b>Integer</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-954">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="64263-955">Siempre devuelve tres caracteres por compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="64263-955">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="64263-956">Los nombres de días de la semana se leen desde Microsoft Windows y pueden tener cualquier longitud.</span><span class="sxs-lookup"><span data-stu-id="64263-956">Abbreviated weekday names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-957">
                <b>xlYearCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-957">
                <b>xlYearCode</b>
              </span></span></term>
              <description><span data-ttu-id="64263-958">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-958">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-959">Símbolo de año en formatos numéricos (y).</span><span class="sxs-lookup"><span data-stu-id="64263-959">Year symbol in number formats (y).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-960">Sistemas de medida</span><span class="sxs-lookup"><span data-stu-id="64263-960">Measurement Systems</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-961">
                <b>xlMetric</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-961">
                <b>xlMetric</b>
              </span></span></term>
              <description><span data-ttu-id="64263-962">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-962">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-963">
                <b>True</b> si se usa el sistema métrico y <b>False</b> si se usa el sistema de medidas inglés.</span><span class="sxs-lookup"><span data-stu-id="64263-963">
                <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-964">
                <b>xlNonEnglishFunctions</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-964">
                <b>xlNonEnglishFunctions</b>
              </span></span></term>
              <description><span data-ttu-id="64263-965">
                <b>Booleano</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-965">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="64263-966">
                <b>True</b> si las funciones no se van a mostrar en inglés.</span><span class="sxs-lookup"><span data-stu-id="64263-966">
                <b>True</b> if you’re not displaying functions in English.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-967">Separadores</span><span class="sxs-lookup"><span data-stu-id="64263-967">Separators</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-968">
                <b>xlAlternateArraySeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-968">
                <b>xlAlternateArraySeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-969">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-969">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-970">Separador de elementos de matriz alternativo que va a utilizarse si el separador actual es el mismo que el separador decimal.</span><span class="sxs-lookup"><span data-stu-id="64263-970">Alternate array item separator to be used if the current array separator is the same as the decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-971">
                <b>xlColumnSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-971">
                <b>xlColumnSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-972">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-972">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-973">Carácter que se emplea para separar las columnas en los literales de matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-973">Character used to separate columns in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-974">
                <b>xlDecimalSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-974">
                <b>xlDecimalSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-975">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-975">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-976">Separador de decimales.</span><span class="sxs-lookup"><span data-stu-id="64263-976">Decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-977">
                <b>xlListSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-977">
                <b>xlListSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-978">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-978">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-979">Separador de lista.</span><span class="sxs-lookup"><span data-stu-id="64263-979">List separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-980">
                <b>xlRowSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-980">
                <b>xlRowSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-981">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-981">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-982">Carácter que se emplea para separar las filas en los literales de matriz.</span><span class="sxs-lookup"><span data-stu-id="64263-982">Character used to separate rows in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-983">
                <b>xlThousandsSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-983">
                <b>xlThousandsSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="64263-984">
                <b>String</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-984">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="64263-985">Separador de miles o cero.</span><span class="sxs-lookup"><span data-stu-id="64263-985">Zero or thousands separator.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-986">Los símbolos, separadores y formatos de moneda mostrados en la tabla anterior pueden ser distintos de los utilizados en su idioma o ubicación geográfica y su disponibilidad depende del idioma que haya seleccionado o instalado (por ejemplo, inglés de Estados Unidos).</span><span class="sxs-lookup"><span data-stu-id="64263-986">Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="64263-987">Intervalo <b>requerido.</b></span><span class="sxs-lookup"><span data-stu-id="64263-987">Required <b>Range</b>.</span></span> <span data-ttu-id="64263-988">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-988">The intersecting ranges.</span></span> <span data-ttu-id="64263-989">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-989">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="64263-990">Intervalo <b>requerido.</b></span><span class="sxs-lookup"><span data-stu-id="64263-990">Required <b>Range</b>.</span></span> <span data-ttu-id="64263-991">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-991">The intersecting ranges.</span></span> <span data-ttu-id="64263-992">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-992">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="64263-993">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-993">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-994">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-994">The intersecting ranges.</span></span> <span data-ttu-id="64263-995">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-995">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="64263-996">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-996">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-997">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-997">The intersecting ranges.</span></span> <span data-ttu-id="64263-998">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-998">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="64263-999">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-999">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1000">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1000">The intersecting ranges.</span></span> <span data-ttu-id="64263-1001">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1001">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="64263-1002">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1002">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1003">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1003">The intersecting ranges.</span></span> <span data-ttu-id="64263-1004">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1004">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="64263-1005">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1005">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1006">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1006">The intersecting ranges.</span></span> <span data-ttu-id="64263-1007">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1007">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="64263-1008">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1008">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1009">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1009">The intersecting ranges.</span></span> <span data-ttu-id="64263-1010">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1010">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="64263-1011">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1011">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1012">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1012">The intersecting ranges.</span></span> <span data-ttu-id="64263-1013">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1013">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="64263-1014">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1014">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1015">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1015">The intersecting ranges.</span></span> <span data-ttu-id="64263-1016">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1016">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="64263-1017">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1017">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1018">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1018">The intersecting ranges.</span></span> <span data-ttu-id="64263-1019">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1019">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="64263-1020">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1020">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1021">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1021">The intersecting ranges.</span></span> <span data-ttu-id="64263-1022">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1022">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="64263-1023">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1023">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1024">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1024">The intersecting ranges.</span></span> <span data-ttu-id="64263-1025">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1025">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="64263-1026">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1026">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1027">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1027">The intersecting ranges.</span></span> <span data-ttu-id="64263-1028">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1028">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="64263-1029">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1029">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1030">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1030">The intersecting ranges.</span></span> <span data-ttu-id="64263-1031">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1031">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="64263-1032">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1032">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1033">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1033">The intersecting ranges.</span></span> <span data-ttu-id="64263-1034">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1034">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="64263-1035">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1035">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1036">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1036">The intersecting ranges.</span></span> <span data-ttu-id="64263-1037">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1037">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="64263-1038">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1038">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1039">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1039">The intersecting ranges.</span></span> <span data-ttu-id="64263-1040">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1040">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="64263-1041">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1041">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1042">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1042">The intersecting ranges.</span></span> <span data-ttu-id="64263-1043">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1043">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="64263-1044">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1044">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1045">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1045">The intersecting ranges.</span></span> <span data-ttu-id="64263-1046">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1046">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="64263-1047">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1047">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1048">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1048">The intersecting ranges.</span></span> <span data-ttu-id="64263-1049">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1049">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="64263-1050">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1050">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1051">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1051">The intersecting ranges.</span></span> <span data-ttu-id="64263-1052">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1052">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="64263-1053">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1053">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1054">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1054">The intersecting ranges.</span></span> <span data-ttu-id="64263-1055">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1055">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="64263-1056">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1056">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1057">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1057">The intersecting ranges.</span></span> <span data-ttu-id="64263-1058">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1058">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="64263-1059">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1059">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1060">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1060">The intersecting ranges.</span></span> <span data-ttu-id="64263-1061">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1061">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="64263-1062">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1062">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1063">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1063">The intersecting ranges.</span></span> <span data-ttu-id="64263-1064">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1064">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="64263-1065">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1065">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1066">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1066">The intersecting ranges.</span></span> <span data-ttu-id="64263-1067">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1067">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="64263-1068">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1068">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1069">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1069">The intersecting ranges.</span></span> <span data-ttu-id="64263-1070">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1070">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="64263-1071">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1071">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1072">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1072">The intersecting ranges.</span></span> <span data-ttu-id="64263-1073">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1073">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="64263-1074">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1074">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1075">Rangos de intersección.</span><span class="sxs-lookup"><span data-stu-id="64263-1075">The intersecting ranges.</span></span> <span data-ttu-id="64263-1076">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1076">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="64263-1077">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa la intersección rectangular de dos o más intervalos.</span><span class="sxs-lookup"><span data-stu-id="64263-1077">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1078">Obtiene si el libro especificado está abierto en una ventana vista protegida.</span><span class="sxs-lookup"><span data-stu-id="64263-1078">Gets whether the specified workbook is open in a Protected View window.</span></span></summary>
        <value><span data-ttu-id="64263-1079"><b>true</b> si el libro especificado está abierto en una ventana vista protegida; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1079"><b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1080">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="64263-1080">Read-only</span></span></para>
          <para><span data-ttu-id="64263-1081">Use la <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> propiedad para determinar si un libro está abierto en una ventana Vista protegida.</span><span class="sxs-lookup"><span data-stu-id="64263-1081">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1082"><b>True</b> si Microsoft Excel usa iteración para resolver referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="64263-1082"><b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1083">Devuelve el <see cref="T:Microsoft.Office.Core.LanguageSettings" /> objeto, que contiene información sobre la configuración de idioma en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1083">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1084">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1084">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1085">Devuelve o establece el número máximo de celdas necesarias para que se desencadene un aviso al realizar una operación.</span><span class="sxs-lookup"><span data-stu-id="64263-1085">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span></span> <span data-ttu-id="64263-1086">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1086">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-1087"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="64263-1087"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1088">Distancia, en puntos, desde el borde izquierdo de la pantalla hasta el borde izquierdo de la ventana principal de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1088">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1089">Si la ventana está maximizada, esta propiedad devuelve un número negativo que varía según el ancho del borde de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-1089">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="64263-1090">Si se establece esta propiedad en 0 (cero), la ventana será un poco más pequeña de lo que sería si se maximizara la ventana de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1090">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="64263-1091">En otras palabras, si esta propiedad es 0 (cero), el borde izquierdo de la ventana principal de Microsoft Excel apenas estará visible en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="64263-1091">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1092">Devuelve la ruta de acceso a la carpeta Library pero sin el separador final.</span><span class="sxs-lookup"><span data-stu-id="64263-1092">Returns the path to the Library folder but without the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="64263-1093">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1093">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1094">Nombre de la macro o nombre de una función definida por el usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1094">The macro name or the name of a user defined function (UDF).</span></span></param>
        <param name="Description"><span data-ttu-id="64263-1095">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1095">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1096">Descripción de la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1096">The macro description.</span></span></param>
        <param name="HasMenu"><span data-ttu-id="64263-1097">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1097">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1098">Este argumento se omite.</span><span class="sxs-lookup"><span data-stu-id="64263-1098">This argument is ignored.</span></span></param>
        <param name="MenuText"><span data-ttu-id="64263-1099">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1099">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1100">Este argumento se omite.</span><span class="sxs-lookup"><span data-stu-id="64263-1100">This argument is ignored.</span></span></param>
        <param name="HasShortcutKey"><span data-ttu-id="64263-1101">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1101">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1102"><b>True</b> para asignar una tecla de método abreviado a la macro ( <paramref name="ShortcutKey" /> también debe especificarse).</span><span class="sxs-lookup"><span data-stu-id="64263-1102"><b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span></span> <span data-ttu-id="64263-1103">Si el argumento es  <b>False</b>, no se asignará ninguna tecla de método abreviado a la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1103">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span></span> <span data-ttu-id="64263-1104">Si la macro ya tiene tecla de método abreviado, esta se eliminará al establecer el valor del argumento en <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1104">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span></span> <span data-ttu-id="64263-1105">El valor predeterminado es <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1105">The default value is <b>False</b>.</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="64263-1106">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1106">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1107">Obligatorio si <paramref name="HasShortcutKey" /> es <b>True;</b>de lo contrario, se omite.</span><span class="sxs-lookup"><span data-stu-id="64263-1107">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span></span> <span data-ttu-id="64263-1108">La tecla de método abreviado</span><span class="sxs-lookup"><span data-stu-id="64263-1108">The shortcut key.</span></span></param>
        <param name="Category"><span data-ttu-id="64263-1109">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1109">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span><span class="sxs-lookup"><span data-stu-id="64263-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span></span> <span data-ttu-id="64263-1111">Vea la sección de comentarios para determinar los enteros asignados a las categorías integradas.</span><span class="sxs-lookup"><span data-stu-id="64263-1111">See the remarks section to determine the integers that are mapped to the built-in categories.</span></span> <span data-ttu-id="64263-1112">También puede especificar una cadena para una categoría personalizada.</span><span class="sxs-lookup"><span data-stu-id="64263-1112">You can also specify a string for a custom category.</span></span> <span data-ttu-id="64263-1113">Si proporciona una cadena, se tratará como el nombre de categoría que se muestra en el cuadro de diálogo Insertar función.</span><span class="sxs-lookup"><span data-stu-id="64263-1113">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span></span> <span data-ttu-id="64263-1114">Si el nombre de categoría nunca se ha usado, se define una nueva categoría con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="64263-1114">If the category name has never been used, a new category is defined with that name.</span></span> <span data-ttu-id="64263-1115">Si usa un nombre de categoría que sea el mismo que un nombre integrado, Excel asignará la función definida por el usuario a esa categoría integrada.</span><span class="sxs-lookup"><span data-stu-id="64263-1115">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span></span></param>
        <param name="StatusBar"><span data-ttu-id="64263-1116">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1116">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1117">Texto de la barra de estado para la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1117">The status bar text for the macro.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="64263-1118">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1118">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1119">Entero que especifica el número de Id. de contexto del tema de la Ayuda asignado a la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1119">An integer that specifies the context ID for the Help topic assigned to the macro.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="64263-1120">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1121">El nombre del archivo de Ayuda que contiene el tema de Ayuda definido por <paramref name="HelpContextId" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-1121">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span></span></param>
        <summary><span data-ttu-id="64263-1122">Corresponde a las opciones del cuadro de diálogo Opciones de macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1122">Corresponds to options in the Macro Options dialog box.</span></span> <span data-ttu-id="64263-1123">También puede utilizar este método para mostrar una función definida por el usuario (UDF) en una categoría integrada o nueva dentro del cuadro de diálogo Insertar función.</span><span class="sxs-lookup"><span data-stu-id="64263-1123">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1124">En la tabla siguiente se indican los enteros asignados a las categorías integradas que se pueden utilizar en el parámetro Category.</span><span class="sxs-lookup"><span data-stu-id="64263-1124">The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1125">1 </span><span class="sxs-lookup"><span data-stu-id="64263-1125">1</span></span></term>
              <description><span data-ttu-id="64263-1126">
                <b>Financiero</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1126">
                <b>Financial</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1127">2 </span><span class="sxs-lookup"><span data-stu-id="64263-1127">2</span></span></term>
              <description><span data-ttu-id="64263-1128">
                <b>Fecha &amp; y hora</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1128">
                <b>Date &amp; Time</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1129">3</span><span class="sxs-lookup"><span data-stu-id="64263-1129">3</span></span></term>
              <description><span data-ttu-id="64263-1130">
                <b>Trig &amp; de matemáticas</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1130">
                <b>Math &amp; Trig</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1131">4 </span><span class="sxs-lookup"><span data-stu-id="64263-1131">4</span></span></term>
              <description><span data-ttu-id="64263-1132">
                <b>Estadística</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1132">
                <b>Statistical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1133">5 </span><span class="sxs-lookup"><span data-stu-id="64263-1133">5</span></span></term>
              <description><span data-ttu-id="64263-1134">
                <b>Referencia de &amp; búsqueda</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1134">
                <b>Lookup &amp; Reference</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1135">6 </span><span class="sxs-lookup"><span data-stu-id="64263-1135">6</span></span></term>
              <description><span data-ttu-id="64263-1136">
                <b>Base de datos</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1136">
                <b>Database</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1137">7 </span><span class="sxs-lookup"><span data-stu-id="64263-1137">7</span></span></term>
              <description><span data-ttu-id="64263-1138">
                <b>Texto</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1138">
                <b>Text</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1139">8 </span><span class="sxs-lookup"><span data-stu-id="64263-1139">8</span></span></term>
              <description><span data-ttu-id="64263-1140">
                <b>Lógico</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1140">
                <b>Logical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1141">9 </span><span class="sxs-lookup"><span data-stu-id="64263-1141">9</span></span></term>
              <description><span data-ttu-id="64263-1142">
                <b>Información</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1142">
                <b>Information</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1143">10 </span><span class="sxs-lookup"><span data-stu-id="64263-1143">10</span></span></term>
              <description><span data-ttu-id="64263-1144">
                <b>Comandos</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1144">
                <b>Commands</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1145">11 </span><span class="sxs-lookup"><span data-stu-id="64263-1145">11</span></span></term>
              <description><span data-ttu-id="64263-1146">
                <b>Personalización</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1146">
                <b>Customizing</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1147">12 </span><span class="sxs-lookup"><span data-stu-id="64263-1147">12</span></span></term>
              <description><span data-ttu-id="64263-1148">
                <b>Control de macros</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1148">
                <b>Macro Control</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1149">13 </span><span class="sxs-lookup"><span data-stu-id="64263-1149">13</span></span></term>
              <description><span data-ttu-id="64263-1150">
                <b>DDE/External</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1150">
                <b>DDE/External</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1151">14 </span><span class="sxs-lookup"><span data-stu-id="64263-1151">14</span></span></term>
              <description><span data-ttu-id="64263-1152">
                <b>Definido por el usuario</b>
              </span><span class="sxs-lookup"><span data-stu-id="64263-1152">
                <b>User Defined</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1153">15 </span><span class="sxs-lookup"><span data-stu-id="64263-1153">15</span></span></term>
              <description><span data-ttu-id="64263-1154">Primera categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1154">First custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1155">16 </span><span class="sxs-lookup"><span data-stu-id="64263-1155">16</span></span></term>
              <description><span data-ttu-id="64263-1156">Segunda categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1156">Second custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1157">17 </span><span class="sxs-lookup"><span data-stu-id="64263-1157">17</span></span></term>
              <description><span data-ttu-id="64263-1158">Tercera categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1158">Third custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1159">18 </span><span class="sxs-lookup"><span data-stu-id="64263-1159">18</span></span></term>
              <description><span data-ttu-id="64263-1160">Cuarta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1160">Fourth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1161">19</span><span class="sxs-lookup"><span data-stu-id="64263-1161">19</span></span></term>
              <description><span data-ttu-id="64263-1162">Quinta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1162">Fifth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1163">20</span><span class="sxs-lookup"><span data-stu-id="64263-1163">20</span></span></term>
              <description><span data-ttu-id="64263-1164">Sexta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1164">Sixth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1165"> 21</span><span class="sxs-lookup"><span data-stu-id="64263-1165">21</span></span></term>
              <description><span data-ttu-id="64263-1166">Séptima categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1166">Seventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1167">22</span><span class="sxs-lookup"><span data-stu-id="64263-1167">22</span></span></term>
              <description><span data-ttu-id="64263-1168">Octava categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1168">Eighth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1169">23</span><span class="sxs-lookup"><span data-stu-id="64263-1169">23</span></span></term>
              <description><span data-ttu-id="64263-1170">Novena categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1170">Ninth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1171">24</span><span class="sxs-lookup"><span data-stu-id="64263-1171">24</span></span></term>
              <description><span data-ttu-id="64263-1172">Décima categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1172">Tenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1173">25</span><span class="sxs-lookup"><span data-stu-id="64263-1173">25</span></span></term>
              <description><span data-ttu-id="64263-1174">Undécima categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1174">Eleventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1175">26</span><span class="sxs-lookup"><span data-stu-id="64263-1175">26</span></span></term>
              <description><span data-ttu-id="64263-1176">Duodécima categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1176">Twelfth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1177">27</span><span class="sxs-lookup"><span data-stu-id="64263-1177">27</span></span></term>
              <description><span data-ttu-id="64263-1178">Decimotercera categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1178">Thirteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1179">28</span><span class="sxs-lookup"><span data-stu-id="64263-1179">28</span></span></term>
              <description><span data-ttu-id="64263-1180">Decimocuarta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1180">Fourteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1181">29</span><span class="sxs-lookup"><span data-stu-id="64263-1181">29</span></span></term>
              <description><span data-ttu-id="64263-1182">Decimoquinta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1182">Fifteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1183">30</span><span class="sxs-lookup"><span data-stu-id="64263-1183">30</span></span></term>
              <description><span data-ttu-id="64263-1184">Decimosexta categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1184">Sixteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1185">31</span><span class="sxs-lookup"><span data-stu-id="64263-1185">31</span></span></term>
              <description><span data-ttu-id="64263-1186">Decimoséptima categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1186">Seventeenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1187">32</span><span class="sxs-lookup"><span data-stu-id="64263-1187">32</span></span></term>
              <description><span data-ttu-id="64263-1188">Decimoctava categoría personalizada</span><span class="sxs-lookup"><span data-stu-id="64263-1188">Eighteenth custom category</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary><span data-ttu-id="64263-1189">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1189">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-1190">Cierra una sesión de correo MAPI establecida por Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1190">Closes a MAPI mail session established by Microsoft Excel.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="64263-1191">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1191">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1192">Nombre de la cuenta de correo o del perfil de Microsoft Exchange.</span><span class="sxs-lookup"><span data-stu-id="64263-1192">The mail account name or Microsoft Exchange profile name.</span></span> <span data-ttu-id="64263-1193">Si este argumento se omite, se usará el nombre de la cuenta de correo predeterminada.</span><span class="sxs-lookup"><span data-stu-id="64263-1193">If this argument is omitted, the default mail account name is used.</span></span></param>
        <param name="Password"><span data-ttu-id="64263-1194">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1194">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1195">Contraseña de la cuenta de correo.</span><span class="sxs-lookup"><span data-stu-id="64263-1195">The mail account password.</span></span> <span data-ttu-id="64263-1196">Este argumento se omite en Microsoft Exchange.</span><span class="sxs-lookup"><span data-stu-id="64263-1196">This argument is ignored in Microsoft Exchange.</span></span></param>
        <param name="DownloadNewMail"><span data-ttu-id="64263-1197">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1198"><b>True</b> para descargar inmediatamente el correo nuevo.</span><span class="sxs-lookup"><span data-stu-id="64263-1198"><b>True</b> to download new mail immediately.</span></span></param>
        <summary><span data-ttu-id="64263-p311">Inicia MAPI Mail o Microsoft Exchange y establece una sesión de correo. Si todavía no se está ejecutando Microsoft Mail, deberá emplear este método para establecer una sesión de correo que le permita usar las funciones de correo o de distribución de documentos.</span><span class="sxs-lookup"><span data-stu-id="64263-p311">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1201">Microsoft Excel abandonará las sesiones de correo que previamente estableció antes de intentar establecer la nueva sesión.</span><span class="sxs-lookup"><span data-stu-id="64263-1201">Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</span></span></para>
          <para><span data-ttu-id="64263-1202">Para entrar en la sesión de correo predeterminada del sistema, omita los parámetros de nombre y contraseña.</span><span class="sxs-lookup"><span data-stu-id="64263-1202">To piggyback on the system default mail session, omit both the name and password parameters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1203">Devuelve el número de sesión de correo MAPI como una cadena hexadecimal (si hay una sesión activa) o devuelve <b>Null</b> si no hay ninguna sesión.</span><span class="sxs-lookup"><span data-stu-id="64263-1203">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1204">Esta propiedad sólo se aplica a sesiones de correo creadas por Microsoft Excel (no devuelve un número de sesión para Microsoft Mail).</span><span class="sxs-lookup"><span data-stu-id="64263-1204">This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</span></span></para>
          <para><span data-ttu-id="64263-1205">Esta propiedad no se usa en sistemas de correo PowerTalk.</span><span class="sxs-lookup"><span data-stu-id="64263-1205">This property isn't used on PowerTalk mail systems.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1206">Devuelve el sistema de correo instalado en el equipo host.</span><span class="sxs-lookup"><span data-stu-id="64263-1206">Returns the mail system that's installed on the host machine.</span></span> <span data-ttu-id="64263-1207">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1207">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1208">
            <b>XlMailSystem</b> puede ser una de estas <b>constantes XlMailSystem:</b></span><span class="sxs-lookup"><span data-stu-id="64263-1208">
            <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-1209">
            <b>xlMAPI</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1209">
            <b>xlMAPI</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1210">
            <b>xlNoMailSystem</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1210">
            <b>xlNoMailSystem</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1211">
            <b>xlPowerTalk</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1211">
            <b>xlPowerTalk</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1212"><b>True</b> si los documentos cuyo formato está establecido en el tamaño de papel estándar de otro país o región (por ejemplo, Carta) de modo que se impriman correctamente en el tamaño de papel estándar del país o región del usuario (por ejemplo, A4).</span><span class="sxs-lookup"><span data-stu-id="64263-1212"><b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1213"><b>True</b> si se dispone de un coprocesador matemático.</span><span class="sxs-lookup"><span data-stu-id="64263-1213"><b>True</b> if a math coprocessor is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1214">Devuelve o establece el cambio máximo entre cada iteración cuando Microsoft Excel resuelve referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="64263-1214">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1215">La <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> propiedad establece el número máximo de iteraciones que Microsoft Excel puede usar al resolver referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="64263-1215">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1216">Devuelve o establece el número máximo de iteraciones que puede usar Microsoft Excel para resolver una referencia circular.</span><span class="sxs-lookup"><span data-stu-id="64263-1216">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1217">La <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> propiedad establece la cantidad máxima de cambio entre cada iteración cuando Microsoft Excel está resolviendo referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="64263-1217">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1218">Especifica la unidad de medida usada en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1218">Specifies the measurement unit used in the application.</span></span> <span data-ttu-id="64263-1219">Valor integer <b>de</b> lectura y escritura correspondiente a las constantes de la <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeración.</span><span class="sxs-lookup"><span data-stu-id="64263-1219">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="64263-1220"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="64263-1220"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1221">Devuelve la cantidad de memoria que sigue disponible para que Microsoft Excel la use, en bytes.</span><span class="sxs-lookup"><span data-stu-id="64263-1221">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1222">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-1222">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1223">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1223">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1224">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1224">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1225">True para combinar varias instancias de la aplicación en una sola instancia.</span><span class="sxs-lookup"><span data-stu-id="64263-1225">True to merge multiple instances of the application into a single instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1226">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1226">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1227"><b>True</b> si hay un mouse disponible.</span><span class="sxs-lookup"><span data-stu-id="64263-1227"><b>True</b> if a mouse is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1228"><b>True</b> si la celda activa se desplaza después de presionar la tecla ENTRAR (RETORNO).</span><span class="sxs-lookup"><span data-stu-id="64263-1228"><b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1229">Utilice la propiedad para especificar la dirección a la que se va a mover la <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> celda activa.</span><span class="sxs-lookup"><span data-stu-id="64263-1229">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1230">Devuelve o establece el sentido en el que se desplaza la celda activa cuando el usuario presiona la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="64263-1230">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span></span> <span data-ttu-id="64263-1231">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1231">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1232">
            <b>XlDirection</b> puede ser una de estas <b>constantes XlDirection:</b></span><span class="sxs-lookup"><span data-stu-id="64263-1232">
            <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-1233">
            <b>xlDown</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1233">
            <b>xlDown</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1234">
            <b>xlToLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1234">
            <b>xlToLeft</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1235">
            <b>xlToRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1235">
            <b>xlToRight</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1236">
            <b>xlUp</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1236">
            <b>xlUp</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1237">Si la propiedad es False , la selección no se mueve en absoluto, independientemente de cómo se establezca la <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> propiedad <b></b> <b>MoveAfterReturnDirection</b> .</span><span class="sxs-lookup"><span data-stu-id="64263-1237">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1238">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> objeto que controla la configuración de actualización multiproceso que es nueva en Excel 2007.</span><span class="sxs-lookup"><span data-stu-id="64263-1238">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span></span> <span data-ttu-id="64263-1239">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1239">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1240">Devuelve el nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1240">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1241">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Names" /> colección que representa todos los nombres del libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1241">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1242">Devuelve la ruta de red en la que están almacenadas las plantillas.</span><span class="sxs-lookup"><span data-stu-id="64263-1242">Returns the network path where templates are stored.</span></span> <span data-ttu-id="64263-1243">Si la ruta de red no existe, la propiedad devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="64263-1243">If the network path doesn’t exist, this property returns an empty string.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1244">Devuelve un <b>objeto NewFile</b> .</span><span class="sxs-lookup"><span data-stu-id="64263-1244">Returns a <b>NewFile</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-p317">Ha solicitado ayuda sobre una palabra clave de Visual Basic que sólo se utiliza en Macintosh. Para obtener información sobre esta palabra clave, vea la ayuda de referencia de idiomas incluida en Microsoft Office para Macintosh.</span><span class="sxs-lookup"><span data-stu-id="64263-p317">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1247">Devuelve una colección que contiene todos los errores ODBC generados por la operación de informe de tabla dinámica o tabla de consulta <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> más reciente.</span><span class="sxs-lookup"><span data-stu-id="64263-1247">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1248">Si hay más de una consulta ejecutándose al mismo tiempo, la colección contiene los errores ODBC de la consulta que <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> finalizó en último lugar.</span><span class="sxs-lookup"><span data-stu-id="64263-1248">If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1249">Devuelve o establece el límite de tiempo de consulta ODBC en segundos.</span><span class="sxs-lookup"><span data-stu-id="64263-1249">Returns or sets the ODBC query time limit in seconds.</span></span> <span data-ttu-id="64263-1250">El valor predeterminado es 45 segundos.</span><span class="sxs-lookup"><span data-stu-id="64263-1250">The default value is 45 seconds.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1251">El valor 0 (cero) indica un tiempo límite indefinido.</span><span class="sxs-lookup"><span data-stu-id="64263-1251">The value 0 (zero) indicates an indefinite time limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1252">Devuelve la <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> colección, que representa la información de error devuelta por la consulta OLE DB más reciente.</span><span class="sxs-lookup"><span data-stu-id="64263-1252">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1253">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-1253">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1254">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1254">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1255">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1255">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1256">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1256">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="64263-1257"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1257">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1258">Cadena que indica la tecla que se va a presionar.</span><span class="sxs-lookup"><span data-stu-id="64263-1258">A string indicating the key to be pressed.</span></span></param>
        <param name="Procedure"><span data-ttu-id="64263-1259">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1259">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1260">Cadena que indica el nombre del procedimiento que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="64263-1260">A string indicating the name of the procedure to be run.</span></span> <span data-ttu-id="64263-1261">Si <paramref name="Procedure" /> es "" (texto vacío), no sucede nada cuando <paramref name="Key" /> se presiona.</span><span class="sxs-lookup"><span data-stu-id="64263-1261">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span></span> <span data-ttu-id="64263-1262">Esta forma de <b>OnKey</b> cambia el resultado normal de las pulsaciones de tecla en Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1262">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span></span> <span data-ttu-id="64263-1263">Si se omite, vuelve a su resultado normal en Microsoft Excel y se borran todas las asignaciones de teclas especiales realizadas con <paramref name="Procedure" /> <paramref name="Key" /> métodos <b>OnKey</b> anteriores.</span><span class="sxs-lookup"><span data-stu-id="64263-1263">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span></span></param>
        <summary><span data-ttu-id="64263-1264">Ejecuta un procedimiento especificado cuando se presiona una tecla o combinación de teclas concreta.</span><span class="sxs-lookup"><span data-stu-id="64263-1264">Runs a specified procedure when a particular key or key combination is pressed.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1265">El <paramref name="Key" /> argumento puede especificar cualquier tecla única combinada con ALT, CTRL o MAYÚS, o cualquier combinación de estas teclas.</span><span class="sxs-lookup"><span data-stu-id="64263-1265">The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys.</span></span> <span data-ttu-id="64263-1266">Cada tecla se representa mediante uno o más caracteres, tal como "a" para el carácter "a" o "{ENTER}" para la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="64263-1266">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="64263-p322">Para especificar caracteres que no se muestran al presionar la tecla correspondiente (por ejemplo ENTRAR o TAB), use los códigos que se indican en la tabla siguiente. Cada código de la tabla representa una tecla del teclado.</span><span class="sxs-lookup"><span data-stu-id="64263-p322">To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1269">RETROCESO</span><span class="sxs-lookup"><span data-stu-id="64263-1269">BACKSPACE</span></span></term>
              <description><span data-ttu-id="64263-1270">{RETROCESO} o {BS}</span><span class="sxs-lookup"><span data-stu-id="64263-1270">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1271">INTER</span><span class="sxs-lookup"><span data-stu-id="64263-1271">BREAK</span></span></term>
              <description><span data-ttu-id="64263-1272">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="64263-1272">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1273">BLOQ MAYÚS</span><span class="sxs-lookup"><span data-stu-id="64263-1273">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="64263-1274">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1274">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1275">BORRAR</span><span class="sxs-lookup"><span data-stu-id="64263-1275">CLEAR</span></span></term>
              <description><span data-ttu-id="64263-1276">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="64263-1276">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1277">SUPRIMIR o SUPR</span><span class="sxs-lookup"><span data-stu-id="64263-1277">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="64263-1278">{DELETE} o {DEL}</span><span class="sxs-lookup"><span data-stu-id="64263-1278">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1279">FLECHA ABAJO</span><span class="sxs-lookup"><span data-stu-id="64263-1279">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="64263-1280">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="64263-1280">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1281">FIN</span><span class="sxs-lookup"><span data-stu-id="64263-1281">END</span></span></term>
              <description><span data-ttu-id="64263-1282">{END}</span><span class="sxs-lookup"><span data-stu-id="64263-1282">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1283">ENTRAR</span><span class="sxs-lookup"><span data-stu-id="64263-1283">ENTER</span></span></term>
              <description><span data-ttu-id="64263-1284">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="64263-1284">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1285">ENTRAR (teclado numérico)</span><span class="sxs-lookup"><span data-stu-id="64263-1285">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="64263-1286">{ENTRAR}</span><span class="sxs-lookup"><span data-stu-id="64263-1286">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1287">ESC</span><span class="sxs-lookup"><span data-stu-id="64263-1287">ESC</span></span></term>
              <description><span data-ttu-id="64263-1288">{ESCAPE} o {ESC}</span><span class="sxs-lookup"><span data-stu-id="64263-1288">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1289">F1 a F15</span><span class="sxs-lookup"><span data-stu-id="64263-1289">F1 through F15</span></span></term>
              <description><span data-ttu-id="64263-1290">{F1} a {F15}</span><span class="sxs-lookup"><span data-stu-id="64263-1290">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1291">AYUDA</span><span class="sxs-lookup"><span data-stu-id="64263-1291">HELP</span></span></term>
              <description><span data-ttu-id="64263-1292">{HELP}</span><span class="sxs-lookup"><span data-stu-id="64263-1292">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1293">INICIO</span><span class="sxs-lookup"><span data-stu-id="64263-1293">HOME</span></span></term>
              <description><span data-ttu-id="64263-1294">{HOME}</span><span class="sxs-lookup"><span data-stu-id="64263-1294">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1295">INS</span><span class="sxs-lookup"><span data-stu-id="64263-1295">INS</span></span></term>
              <description><span data-ttu-id="64263-1296">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="64263-1296">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1297">FLECHA IZQUIERDA</span><span class="sxs-lookup"><span data-stu-id="64263-1297">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="64263-1298">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="64263-1298">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1299">BLOQ NUM</span><span class="sxs-lookup"><span data-stu-id="64263-1299">NUM LOCK</span></span></term>
              <description><span data-ttu-id="64263-1300">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1300">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1301">AV PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-1301">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="64263-1302">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="64263-1302">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1303">RE PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-1303">PAGE UP</span></span></term>
              <description><span data-ttu-id="64263-1304">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="64263-1304">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1305">VOLVER</span><span class="sxs-lookup"><span data-stu-id="64263-1305">RETURN</span></span></term>
              <description><span data-ttu-id="64263-1306">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="64263-1306">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1307">FLECHA DERECHA</span><span class="sxs-lookup"><span data-stu-id="64263-1307">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="64263-1308">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="64263-1308">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1309">BLOQ DESPL</span><span class="sxs-lookup"><span data-stu-id="64263-1309">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="64263-1310">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1310">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1311">TAB</span><span class="sxs-lookup"><span data-stu-id="64263-1311">TAB</span></span></term>
              <description><span data-ttu-id="64263-1312">{TAB}</span><span class="sxs-lookup"><span data-stu-id="64263-1312">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1313">FLECHA ARRIBA</span><span class="sxs-lookup"><span data-stu-id="64263-1313">UP ARROW</span></span></term>
              <description><span data-ttu-id="64263-1314">{UP}</span><span class="sxs-lookup"><span data-stu-id="64263-1314">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-p323">También puede especificar teclas combinadas con MAYÚS y/o CTRL y/o ALT. Para especificar una tecla combinada con otra u otras teclas, use la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="64263-p323">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1317">MAYÚSCULAS</span><span class="sxs-lookup"><span data-stu-id="64263-1317">SHIFT</span></span></term>
              <description><span data-ttu-id="64263-1318">+ (signo más)</span><span class="sxs-lookup"><span data-stu-id="64263-1318">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1319">CTRL</span><span class="sxs-lookup"><span data-stu-id="64263-1319">CTRL</span></span></term>
              <description><span data-ttu-id="64263-1320">^ (intercalación)</span><span class="sxs-lookup"><span data-stu-id="64263-1320">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1321">ALT</span><span class="sxs-lookup"><span data-stu-id="64263-1321">ALT</span></span></term>
              <description><span data-ttu-id="64263-1322">% (signo porcentual)</span><span class="sxs-lookup"><span data-stu-id="64263-1322">% (percent sign)</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-1323">Para asignar un procedimiento a uno de los caracteres especiales (+, ^, %, etc.), encierre el carácter en llaves.</span><span class="sxs-lookup"><span data-stu-id="64263-1323">To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="64263-1324"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1324">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1325">Especifica el texto que aparece con el comando Repetir del menú Edición.</span><span class="sxs-lookup"><span data-stu-id="64263-1325">The text that appears with the Repeat command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="64263-1326"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1326">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1327">Nombre del procedimiento que se ejecutará cuando se elija Repetir en el menú Edición.</span><span class="sxs-lookup"><span data-stu-id="64263-1327">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="64263-1328">Establece el elemento de menú Repetir y el nombre del procedimiento que se ejecutará si se elige Repetir en el menú Edición después de ejecutar el procedimiento que establece esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-1328">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1329">Si un procedimiento no usa el <b>método OnRepeat,</b> el comando Repetir repite el procedimiento que se ha ejecutado más recientemente.</span><span class="sxs-lookup"><span data-stu-id="64263-1329">If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</span></span></para>
          <para><span data-ttu-id="64263-1330">El procedimiento debe usar <b>onrepeat</b> y los métodos en último lugar, para evitar que los procedimientos de repetición y deshacer se sobrescriban mediante acciones posteriores <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> en el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1330">The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1331">Reservado para uso interno. </span><span class="sxs-lookup"><span data-stu-id="64263-1331">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1332">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1332">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime"><span data-ttu-id="64263-1333">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1333">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1334">Hora a la que se desea ejecutar este procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1334">The time when you want this procedure to be run.</span></span></param>
        <param name="Procedure"><span data-ttu-id="64263-1335"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1335">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1336">Nombre del procedimiento que se ejecutará.</span><span class="sxs-lookup"><span data-stu-id="64263-1336">The name of the procedure to be run.</span></span></param>
        <param name="LatestTime"><span data-ttu-id="64263-1337">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1337">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1338">La última hora a la que se puede ejecutar el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1338">The latest time at which the procedure can be run.</span></span> <span data-ttu-id="64263-1339">Por ejemplo, si se establece en + 30 y Microsoft Excel no está en modo Listo, Copiar, Cortar o Buscar porque se está ejecutando otro procedimiento, Microsoft Excel esperará 30 segundos para que se complete el primer <paramref name="LatestTime" /> <paramref name="EarliestTime" /> <paramref name="EarliestTime" /> procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1339">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span></span> <span data-ttu-id="64263-1340">Si Microsoft Excel no está en modo Listo en un plazo de 30 segundos, no se ejecutará el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1340">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span></span> <span data-ttu-id="64263-1341">Si omite este argumento, Microsoft Excel esperará hasta que se pueda ejecutar el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1341">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span></span></param>
        <param name="Schedule"><span data-ttu-id="64263-1342">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1342">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1343"><b>True</b> para programar un nuevo <b>procedimiento OnTime.</b></span><span class="sxs-lookup"><span data-stu-id="64263-1343"><b>True</b> to schedule a new <b>OnTime</b> procedure.</span></span> <span data-ttu-id="64263-1344"><b>False</b> para borrar un procedimiento establecido previamente.</span><span class="sxs-lookup"><span data-stu-id="64263-1344"><b>False</b> to clear a previously set procedure.</span></span> <span data-ttu-id="64263-1345">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1345">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="64263-1346">Programa la ejecución de un procedimiento a una hora especificada, ya sea a una hora específica o después del transcurso de un período de tiempo específico.</span><span class="sxs-lookup"><span data-stu-id="64263-1346">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1347">Usa Now+TimeValue(time) para programar algo que se ejecutará cuando haya transcurrido un período de tiempo específico (contando a partir de ahora).</span><span class="sxs-lookup"><span data-stu-id="64263-1347">Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed.</span></span> <span data-ttu-id="64263-1348">Utilice TimeValue(hora) para planear la ejecución de un procedimiento a una hora específica.</span><span class="sxs-lookup"><span data-stu-id="64263-1348">Use TimeValue(time) to schedule something to be run a specific time.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="64263-1349"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1349">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1350">El texto que aparece con el comando Deshacer del menú Edición.</span><span class="sxs-lookup"><span data-stu-id="64263-1350">The text that appears with the Undo command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="64263-1351"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1351">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1352">Nombre del procedimiento que se ejecutará cuando se elija Deshacer en el menú Edición.</span><span class="sxs-lookup"><span data-stu-id="64263-1352">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="64263-1353">Establece el texto del elemento de menú Deshacer y el nombre del procedimiento que se ejecutará si se elige Deshacer en el menú Edición después de ejecutar el procedimiento que establece esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-1353">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1354">Si un procedimiento no usa el <b>método OnUndo,</b> se deshabilita el comando Deshacer.</span><span class="sxs-lookup"><span data-stu-id="64263-1354">If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</span></span></para>
          <para><span data-ttu-id="64263-1355">El procedimiento debe usar los métodos <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> <b>OnUndo y onundo</b> en último lugar, para evitar que los procedimientos de repetición y deshacer se sobrescriban mediante acciones posteriores en el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1355">The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1356">Devuelve o establece el nombre del procedimiento que se ejecuta cuando se activa una ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-1356">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1357">El procedimiento especificado por esta propiedad no se ejecuta cuando otros procedimientos cambian a la ventana o cuando un comando para cambiar a la ventana se recibe a través de un canal DDE.</span><span class="sxs-lookup"><span data-stu-id="64263-1357">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="64263-1358">En su lugar, el procedimiento responde a las acciones del usuario, como hacer clic en una ventana con el mouse, hacer clic en Ir a en el menú Editar, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="64263-1358">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="64263-1359">Si una hoja de cálculo o una hoja de macros tiene definida una macro Auto_activar o Auto_desactivar, éstas se ejecutarán después del procedimiento especificado por la propiedad <b>OnWindow</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1359">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1360">Devuelve el nombre y el número de versión del sistema operativo actual, por ejemplo, "Windows (32 bits) 4.00" o "Macintosh 7.00".</span><span class="sxs-lookup"><span data-stu-id="64263-1360">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1361">Devuelve el nombre registrado de la organización.</span><span class="sxs-lookup"><span data-stu-id="64263-1361">Returns the registered organization name.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1362">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-1362">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1363">Devuelve la ruta de acceso completa a la aplicación, excluyendo el separador final y el nombre de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1363">Returns the complete path to the application, excluding the final separator and name of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1364">Devuelve el carácter separador de ruta de acceso (" \" ).</span><span class="sxs-lookup"><span data-stu-id="64263-1364">Returns the path separator character ("\").</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1365"><b>True</b> si los informes de tabla dinámica utilizan selección estructurada.</span><span class="sxs-lookup"><span data-stu-id="64263-1365"><b>True</b> if PivotTable reports use structured selection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="64263-1366">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1366">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1367">El número de índice (de 1 a 4) del rango o el nombre anterior.</span><span class="sxs-lookup"><span data-stu-id="64263-1367">The index number (from 1 to 4) of the previous range or name.</span></span></param>
        <summary><span data-ttu-id="64263-1368">Devuelve una matriz con los cuatro últimos rangos o nombres seleccionados.</span><span class="sxs-lookup"><span data-stu-id="64263-1368">Returns an array of the last four ranges or names selected.</span></span> <span data-ttu-id="64263-1369">Cada elemento de la matriz es un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1369">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1370">Cada vez que se va a un rango o celda mediante el cuadro Nombre o el comando Ir a (menú Edición), o cada vez que una macro llama al método, el rango anterior se agrega a esta matriz como el elemento número 1 y los demás elementos de la matriz se mueven hacia <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> abajo.</span><span class="sxs-lookup"><span data-stu-id="64263-1370">Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1371">Obtiene o establece si la comunicación con la impresora está activada.</span><span class="sxs-lookup"><span data-stu-id="64263-1371">Gets or sets whether communication with the printer is turned on.</span></span></summary>
        <value><span data-ttu-id="64263-1372"><b>true</b> si la comunicación con la impresora está activada; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1372"><b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1373">
            <b>boolean</b> Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1373">
            <b>boolean</b> Read/write.</span></span></para>
          <para><span data-ttu-id="64263-1374">Establezca la propiedad en false para acelerar la ejecución <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> del código que establece las propiedades pageSetup. <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-1374">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties.</span></span> <span data-ttu-id="64263-1375">Establezca la <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> propiedad en true <b>después</b> de establecer las propiedades para confirmar todos los comandos PageSetup almacenados en caché.</span><span class="sxs-lookup"><span data-stu-id="64263-1375">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1376">Devuelve el identificador único global (GUID) de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1376">Returns the globally unique identifier (GUID) for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1377"><b>True</b> si Microsoft Excel solicita la información de resumen la primera vez que se guardan los archivos.</span><span class="sxs-lookup"><span data-stu-id="64263-1377"><b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1378">Obtiene una <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> colección que representa todas las ventanas vista protegida que están abiertas en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1378">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></summary>
        <value><span data-ttu-id="64263-1379">Colección <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> que representa todas las ventanas vista protegida que están abiertas en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1379">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1380">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1380">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1381">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> objeto que representa las opciones de análisis rápido de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-1382">Sale de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1382">Quits Microsoft Excel.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1383">Si los libros no guardados están abiertos cuando se usa este método, Microsoft Excel muestra un cuadro de diálogo que le pregunta si desea guardar los cambios.</span><span class="sxs-lookup"><span data-stu-id="64263-1383">If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes.</span></span> <span data-ttu-id="64263-1384">Puede evitar esto guardando todos los libros antes de usar el método <b>Quit</b> o estableciendo la <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propiedad en <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1384">You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="64263-1385">Si la propiedad tiene el valor <b>False</b>, Microsoft Excel no mostrará el cuadro de diálogo antes de cerrar los libros no guardados, sino que los cerrará sin guardarlos.</span><span class="sxs-lookup"><span data-stu-id="64263-1385">When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</span></span></para>
          <para><span data-ttu-id="64263-1386">Si establece la propiedad de un libro en True sin guardar el libro en el disco, Microsoft Excel se cerrará sin pedirle que <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> guarde el libro. <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-1386">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1387">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1387">Reserved for internal use.</span></span></summary>
        <value><span data-ttu-id="64263-1388">Devuelve <see cref="T:System.Boolean" /> .</span><span class="sxs-lookup"><span data-stu-id="64263-1388">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="64263-1389">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1389">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1390">El nombre del intervalo.</span><span class="sxs-lookup"><span data-stu-id="64263-1390">The name of the range.</span></span> <span data-ttu-id="64263-1391">Debe ser una referencia de estilo A1 en el lenguaje de la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1391">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="64263-1392">Puede incluir el operador de rangos (un punto y coma), el operador de intersección (un espacio) o el operador de unión (una coma).</span><span class="sxs-lookup"><span data-stu-id="64263-1392">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="64263-1393">También puede incluir signos dólar, pero se pasan por alto.</span><span class="sxs-lookup"><span data-stu-id="64263-1393">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="64263-1394">Se puede usar un nombre definido local en cualquier parte del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-1394">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="64263-1395">Si se usa un nombre, se da por supuesto que está en el lenguaje de la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1395">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="64263-1396">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1396">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1397">La celda del vértice superior izquierdo e inferior derecho del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-1397">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="64263-1398">Puede ser un objeto a <b>Range</b> que contenga una sola celda, una columna completa o una fila completa, o bien ser una cadena que asigna nombre a una sola celda en el lenguaje de la  macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1398">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="64263-1399">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa una celda o un rango de celdas.</span><span class="sxs-lookup"><span data-stu-id="64263-1399">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1400">La propiedad es relativa al <b>objeto Range</b> .</span><span class="sxs-lookup"><span data-stu-id="64263-1400">The property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="64263-1401">Por ejemplo, si la selección es la celda C3, Selection.Range("B1") devuelve la celda D3 porque es relativa al objeto <b>Range</b> devuelto por la <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="64263-1401">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="64263-1402">Por otro lado, el código ActiveSheet.Range("B1") siempre devuelve la celda B1.</span><span class="sxs-lookup"><span data-stu-id="64263-1402">On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1403">Devuelve <b>True</b> cuando la aplicación Microsoft Excel está preparada; <b>False</b> cuando no lo está.</span><span class="sxs-lookup"><span data-stu-id="64263-1403">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1404">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> colección que representa la lista de archivos usados recientemente.</span><span class="sxs-lookup"><span data-stu-id="64263-1404">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode"><span data-ttu-id="64263-1405">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1405">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1406">Cadena que especifica el código de Visual Basic que se grabará si la grabadora de macros está grabando en un módulo de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="64263-1406">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span></span> <span data-ttu-id="64263-1407">La cadena se grabará en una sola línea.</span><span class="sxs-lookup"><span data-stu-id="64263-1407">The string will be recorded on one line.</span></span> <span data-ttu-id="64263-1408">Si la cadena contiene un retorno de carro (carácter ASCII 10 o Chr$(10) en código), se grabará en varias líneas.</span><span class="sxs-lookup"><span data-stu-id="64263-1408">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span></span></param>
        <param name="XlmCode"><span data-ttu-id="64263-1409">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1409">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1410">Este argumento se omite.</span><span class="sxs-lookup"><span data-stu-id="64263-1410">This argument is ignored.</span></span></param>
        <summary><span data-ttu-id="64263-1411">Graba código si está activada la grabadora de macros.</span><span class="sxs-lookup"><span data-stu-id="64263-1411">Records code if the macro recorder is on.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1412">El método <b>RecordMacro</b> no puede grabar en el módulo activo (el módulo en el que reside el método <b>RecordMacro</b>).</span><span class="sxs-lookup"><span data-stu-id="64263-1412">The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</span></span></para>
          <para><span data-ttu-id="64263-1413">Para impedir la grabación (por ejemplo, si el usuario cancela el cuadro de diálogo), use dos cadenas vacías cuando llame a esta función.</span><span class="sxs-lookup"><span data-stu-id="64263-1413">To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1414"><b>True</b> si las macros se graban usando referencias relativas; <b>False</b> si la grabación usa referencias absolutas.</span><span class="sxs-lookup"><span data-stu-id="64263-1414"><b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1415">Devuelve o establece si Microsoft Excel debe mostrar las referencias a las celdas y los encabezados de filas y columnas con el estilo de referencia A1 o F1C1.</span><span class="sxs-lookup"><span data-stu-id="64263-1415">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span></span> <span data-ttu-id="64263-1416">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1416">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1417">
            <b>XlReferenceStyle</b> puede ser una de estas <b>constantes XlReferenceStyle:</b></span><span class="sxs-lookup"><span data-stu-id="64263-1417">
            <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-1418">
            <b>xlA1</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1418">
            <b>xlA1</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1419">
            <b>xlR1C1</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1419">
            <b>xlR1C1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="64263-1420">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1420">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1421">El nombre de la DLL o del recurso de código.</span><span class="sxs-lookup"><span data-stu-id="64263-1421">The name of the DLL or code resource.</span></span></param>
        <param name="Index2"><span data-ttu-id="64263-1422">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1422">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1423">Nombre de la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1423">The name of the function.</span></span></param>
        <summary><span data-ttu-id="64263-1424">Devuelve información acerca de las funciones de las bibliotecas de vínculos dinámicos (DLL) o los recursos de código registrados mediante las funciones de macro REGISTER o REGISTER.ID.</span><span class="sxs-lookup"><span data-stu-id="64263-1424">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1425">Si no especifica estos argumentos, esta propiedad devuelve una matriz que contiene una lista de todas las funciones registradas.</span><span class="sxs-lookup"><span data-stu-id="64263-1425">If you don’t specify these arguments, this property returns an array that contains a list of all registered functions.</span></span> <span data-ttu-id="64263-1426">Cada fila de la matriz contiene información acerca de una sola función, como se muestra en la siguiente tabla.</span><span class="sxs-lookup"><span data-stu-id="64263-1426">Each row in the array contains information about a single function, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1427">1 </span><span class="sxs-lookup"><span data-stu-id="64263-1427">1</span></span></term>
              <description><span data-ttu-id="64263-1428">El nombre de la DLL o del recurso de código.</span><span class="sxs-lookup"><span data-stu-id="64263-1428">The name of the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1429">2 </span><span class="sxs-lookup"><span data-stu-id="64263-1429">2</span></span></term>
              <description><span data-ttu-id="64263-1430">El nombre del procedimiento de la DLL o el recurso de código.</span><span class="sxs-lookup"><span data-stu-id="64263-1430">The name of the procedure in the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1431">3</span><span class="sxs-lookup"><span data-stu-id="64263-1431">3</span></span></term>
              <description><span data-ttu-id="64263-1432">Cadenas que especifican los tipos de datos de los valores devueltos y el número y los tipos de datos de los argumentos</span><span class="sxs-lookup"><span data-stu-id="64263-1432">Strings specifying the data types of the return values and the number and data types of the arguments</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-1433">Si no hay funciones registradas, esta propiedad devuelve <b>Null</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1433">If there are no registered functions, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="64263-1434"><b>String</b> requerida.</span><span class="sxs-lookup"><span data-stu-id="64263-1434">Required <b>String</b>.</span></span> <span data-ttu-id="64263-1435">Especifica el nombre del XLL que se cargará.</span><span class="sxs-lookup"><span data-stu-id="64263-1435">Specifies the name of the XLL to be loaded.</span></span></param>
        <summary><span data-ttu-id="64263-1436">Carga un recurso de código XLL y registra automáticamente las funciones y comandos que contiene.</span><span class="sxs-lookup"><span data-stu-id="64263-1436">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-1437">Este método devuelve <b>True</b> si el recurso de código se carga correctamente; de lo contrario, devuelve <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1437">This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-1438">Repite la última acción de la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1438">Repeats the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1439">Este método repite solo la última acción realizada por el usuario antes de ejecutar el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1439">This method repeats only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="64263-1440">Debe ser la primera línea del procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1440">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1441">Establece los criterios de reemplazo que se emplean para sustituir formatos de celda.</span><span class="sxs-lookup"><span data-stu-id="64263-1441">Sets the replacement criteria to use in replacing cell formats.</span></span> <span data-ttu-id="64263-1442">A continuación, los criterios de reemplazo se usan en una llamada posterior al <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método del <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1442">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-p350">Restablece la lista de distribución para que se pueda iniciar una nueva distribución con la misma lista (usando la misma lista de destinatarios e información de entrega). Para poder utilizar este método debe haberse completado la distribución. El uso de este método en otras ocasiones causa un error.</span><span class="sxs-lookup"><span data-stu-id="64263-p350">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="64263-1446">Este ejemplo restablece la lista de distribución del Book1.xls si la distribución ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="64263-1446">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="64263-1447">Este ejemplo restablece la lista de distribución del Book1.xls si la distribución ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="64263-1447">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="64263-1448">Este ejemplo restablece la lista de distribución del Book1.xls si la distribución ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="64263-1448">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1449"><b>True</b> si el IntelliMouse acerca o aleja, en lugar de desplazarse.</span><span class="sxs-lookup"><span data-stu-id="64263-1449"><b>True</b> if the IntelliMouse zooms instead of scrolling.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1450">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todas las filas de la hoja de cálculo activa.</span><span class="sxs-lookup"><span data-stu-id="64263-1450">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span></span> <span data-ttu-id="64263-1451">Si el documento activo no es una hoja de cálculo, la propiedad <b>Rows</b> devuelve un error.</span><span class="sxs-lookup"><span data-stu-id="64263-1451">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1452">Si se aplica a un objeto <b>Range</b> que es una selección de varias áreas, la propiedad únicamente devuelve las filas de la primera área del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-1452">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span> <span data-ttu-id="64263-1453">Por ejemplo, si el objeto <b>Range</b> tiene dos áreas, A1:B2 y C3:D4, Selection.Rows.Count devuelve 2, no 4.</span><span class="sxs-lookup"><span data-stu-id="64263-1453">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4.</span></span> <span data-ttu-id="64263-1454">Si quiere usar esta propiedad en un rango que puede contener una selección múltiple, compruebe <b>Areas.Count</b> para determinar si el rango es una selección múltiple.</span><span class="sxs-lookup"><span data-stu-id="64263-1454">To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection.</span></span> <span data-ttu-id="64263-1455">Si es así, recorre cada área del rango.</span><span class="sxs-lookup"><span data-stu-id="64263-1455">If it is, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1456">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1456">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="64263-1457">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1457">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1458">Macro que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="64263-1458">The macro to run.</span></span> <span data-ttu-id="64263-1459">Puede ser una cadena con el nombre de macro, un objeto que indica dónde se encuentra la función o un identificador de registro para una función <see cref="T:Microsoft.Office.Interop.Excel.Range" /> dll registrada (XLL).</span><span class="sxs-lookup"><span data-stu-id="64263-1459">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span></span> <span data-ttu-id="64263-1460">Si se emplea una cadena, se evaluará en el contexto de la hoja activa.</span><span class="sxs-lookup"><span data-stu-id="64263-1460">If a string is used, the string will be evaluated in the context of the active sheet.</span></span></param>
        <param name="Arg1"><span data-ttu-id="64263-1461">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1461">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1462">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1462">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="64263-1463">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1463">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1464">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1464">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="64263-1465">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1465">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1466">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1466">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="64263-1467">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1467">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1468">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1468">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="64263-1469">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1469">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1470">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1470">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="64263-1471">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1471">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1472">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1472">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="64263-1473">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1473">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1474">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1474">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="64263-1475">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1475">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1476">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1476">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="64263-1477">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1477">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1478">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1478">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="64263-1479">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1479">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1480">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1480">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="64263-1481">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1481">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1482">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1482">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="64263-1483">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1483">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1484">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1484">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="64263-1485">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1485">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1486">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1486">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="64263-1487">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1487">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1488">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1488">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="64263-1489">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1489">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1490">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1490">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="64263-1491">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1491">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1492">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1492">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="64263-1493">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1493">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1494">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1494">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="64263-1495">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1495">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1496">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1496">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="64263-1497">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1497">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1498">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1498">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="64263-1499">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1499">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1500">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1500">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="64263-1501">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1501">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1502">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1502">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="64263-1503">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1503">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1504">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1504">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="64263-1505">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1505">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1506">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1506">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="64263-1507">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1507">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1508">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1508">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="64263-1509">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1509">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1510">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1510">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="64263-1511">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1511">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1512">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1512">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="64263-1513">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1513">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1514">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1514">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="64263-1515">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1515">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1516">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1516">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="64263-1517">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1517">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1518">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1518">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="64263-1519">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1519">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1520">Argumentos que se pasan a la función.</span><span class="sxs-lookup"><span data-stu-id="64263-1520">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="64263-1521">Ejecuta una macro o llama a una función.</span><span class="sxs-lookup"><span data-stu-id="64263-1521">Runs a macro or calls a function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-1522">No pueden usarse argumentos con nombre en este método.</span><span class="sxs-lookup"><span data-stu-id="64263-1522">You cannot use named arguments with this method.</span></span> <span data-ttu-id="64263-1523">Los argumentos deben pasarse por posición.</span><span class="sxs-lookup"><span data-stu-id="64263-1523">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="64263-1524">El método <b>Run</b> devuelve el resultado de la macro a la que se haya llamado. </span><span class="sxs-lookup"><span data-stu-id="64263-1524">The <b>Run</b> method returns whatever the called macro returns.</span></span> <span data-ttu-id="64263-1525">Los objetos pasados como argumentos a la macro se convierten en valores (aplicando la <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> propiedad al objeto).</span><span class="sxs-lookup"><span data-stu-id="64263-1525">Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object).</span></span> <span data-ttu-id="64263-1526">Es decir, no es posible pasar objetos a macros mediante el método <b>Run</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1526">This means that you cannot pass objects to macros by using the <b>Run</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="64263-1527">Guarda los cambios del libro especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-1527">Saves changes to the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1528">Para abrir un archivo de libro, use el <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> método.</span><span class="sxs-lookup"><span data-stu-id="64263-1528">To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="64263-1529">Para marcar un libro como guardado sin escribirlo en un disco, establezca su <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> propiedad en <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1529">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="64263-1530">La primera vez que guarde un libro, use <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> el método para especificar un nombre para el archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-1530">The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="64263-1531">En este ejemplo se guarda el libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1531">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="64263-1532">En este ejemplo se guardan todos los libros abiertos y, a continuación, se cierra Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1532">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="64263-1533">En este ejemplo se guarda el libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1533">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="64263-1534">En este ejemplo se guardan todos los libros abiertos y, a continuación, se cierra Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1534">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="64263-1535">En este ejemplo se guarda el libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1535">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="64263-1536">En este ejemplo se guardan todos los libros abiertos y, a continuación, se cierra Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1536">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1537">Este objeto, miembro o enumeración está en desuso y no debería usarse en el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1537">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="64263-1538">Este objeto, miembro o enumeración está en desuso y no debería usarse en el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1538">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1539"><b>True</b> si la actualización de pantallas está activada.</span><span class="sxs-lookup"><span data-stu-id="64263-1539"><b>True</b> if screen updating is turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1540">Desactiva la actualización de pantalla para acelerar el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1540">Turn screen updating off to speed up your code.</span></span> <span data-ttu-id="64263-1541">No podrá ver lo que hace el código, pero se ejecutará más rápido.</span><span class="sxs-lookup"><span data-stu-id="64263-1541">You won't be able to see what the code is doing, but it will run faster.</span></span></para>
          <para><span data-ttu-id="64263-1542">Recuerda volver a establecer <b>la propiedad ScreenUpdating</b> en <b>True</b> cuando finalice el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1542">Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1543">Devuelve el objeto seleccionado en la ventana activa.</span><span class="sxs-lookup"><span data-stu-id="64263-1543">Returns the selected object in the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1544">El tipo de objeto devuelto depende de la selección actual (por ejemplo, si se selecciona una celda, esta propiedad devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto).</span><span class="sxs-lookup"><span data-stu-id="64263-1544">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="64263-1545">Si no hay nada seleccionado, la propiedad <b>Selection</b> devuelve <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1545">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys"><span data-ttu-id="64263-1546">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1546">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1547">La tecla o combinación de teclas que desea enviar a la aplicación como texto.</span><span class="sxs-lookup"><span data-stu-id="64263-1547">The key or key combination you want to send to the application as text.</span></span></param>
        <param name="Wait"><span data-ttu-id="64263-1548">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1548">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1549"><b>True</b> para que Microsoft Excel espere a que se procesen las teclas antes devolver el control a la macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1549"><b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span></span> <span data-ttu-id="64263-1550"><b>False</b> (u omitido) para continuar ejecutando la macro sin esperar a que se procesen las teclas.</span><span class="sxs-lookup"><span data-stu-id="64263-1550"><b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span></span></param>
        <summary><span data-ttu-id="64263-1551">Envía pulsaciones de teclas a la aplicación activa.</span><span class="sxs-lookup"><span data-stu-id="64263-1551">Sends keystrokes to the active application.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-p390">Este método coloca pulsaciones de teclas en un búfer de teclas. En ciertos casos, deberá llamar a este método antes de llamar al método que vaya a usar las pulsaciones de teclas. Por ejemplo, para enviar una contraseña a un cuadro de diálogo, deberá llamar al método <b>SendKeys</b> antes de mostrar el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="64263-p390">This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</span></span></para>
          <para><span data-ttu-id="64263-1555">El argumento puede especificar cualquier tecla única o cualquier tecla combinada con <paramref name="Keys" /> ALT, CTRL o MAYÚS (o cualquier combinación de dichas teclas).</span><span class="sxs-lookup"><span data-stu-id="64263-1555">The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="64263-1556">Cada tecla se representa mediante uno o varios caracteres, como "a" para el carácter a, o "{ENTER}" para la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="64263-1556">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="64263-p392">Para especificar caracteres que no se muestran al pulsar la tecla correspondiente (por ejemplo, ENTRAR o TAB), use los códigos que se muestran en la tabla siguiente. Cada código de la tabla representa una tecla del teclado.</span><span class="sxs-lookup"><span data-stu-id="64263-p392">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1559">RETROCESO</span><span class="sxs-lookup"><span data-stu-id="64263-1559">BACKSPACE</span></span></term>
              <description><span data-ttu-id="64263-1560">{RETROCESO} o {BS}</span><span class="sxs-lookup"><span data-stu-id="64263-1560">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1561">INTER</span><span class="sxs-lookup"><span data-stu-id="64263-1561">BREAK</span></span></term>
              <description><span data-ttu-id="64263-1562">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="64263-1562">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1563">BLOQ MAYÚS</span><span class="sxs-lookup"><span data-stu-id="64263-1563">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="64263-1564">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1564">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1565">BORRAR</span><span class="sxs-lookup"><span data-stu-id="64263-1565">CLEAR</span></span></term>
              <description><span data-ttu-id="64263-1566">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="64263-1566">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1567">SUPRIMIR o SUPR</span><span class="sxs-lookup"><span data-stu-id="64263-1567">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="64263-1568">{DELETE} o {DEL}</span><span class="sxs-lookup"><span data-stu-id="64263-1568">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1569">FLECHA ABAJO</span><span class="sxs-lookup"><span data-stu-id="64263-1569">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="64263-1570">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="64263-1570">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1571">FIN</span><span class="sxs-lookup"><span data-stu-id="64263-1571">END</span></span></term>
              <description><span data-ttu-id="64263-1572">{END}</span><span class="sxs-lookup"><span data-stu-id="64263-1572">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1573">ENTRAR</span><span class="sxs-lookup"><span data-stu-id="64263-1573">ENTER</span></span></term>
              <description><span data-ttu-id="64263-1574">~ (tilde)</span><span class="sxs-lookup"><span data-stu-id="64263-1574">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1575">ENTRAR (teclado numérico)</span><span class="sxs-lookup"><span data-stu-id="64263-1575">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="64263-1576">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="64263-1576">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1577">ESC</span><span class="sxs-lookup"><span data-stu-id="64263-1577">ESC</span></span></term>
              <description><span data-ttu-id="64263-1578">{ESCAPE} o {ESC}</span><span class="sxs-lookup"><span data-stu-id="64263-1578">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1579">F1 a F15</span><span class="sxs-lookup"><span data-stu-id="64263-1579">F1 through F15</span></span></term>
              <description><span data-ttu-id="64263-1580">{F1} a {F15}</span><span class="sxs-lookup"><span data-stu-id="64263-1580">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1581">AYUDA</span><span class="sxs-lookup"><span data-stu-id="64263-1581">HELP</span></span></term>
              <description><span data-ttu-id="64263-1582">{HELP}</span><span class="sxs-lookup"><span data-stu-id="64263-1582">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1583">INICIO</span><span class="sxs-lookup"><span data-stu-id="64263-1583">HOME</span></span></term>
              <description><span data-ttu-id="64263-1584">{INICIO}</span><span class="sxs-lookup"><span data-stu-id="64263-1584">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1585">INS</span><span class="sxs-lookup"><span data-stu-id="64263-1585">INS</span></span></term>
              <description><span data-ttu-id="64263-1586">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="64263-1586">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1587">FLECHA IZQUIERDA</span><span class="sxs-lookup"><span data-stu-id="64263-1587">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="64263-1588">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="64263-1588">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1589">BLOQ NUM</span><span class="sxs-lookup"><span data-stu-id="64263-1589">NUM LOCK</span></span></term>
              <description><span data-ttu-id="64263-1590">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1590">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1591">AV PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-1591">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="64263-1592">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="64263-1592">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1593">RE PÁG</span><span class="sxs-lookup"><span data-stu-id="64263-1593">PAGE UP</span></span></term>
              <description><span data-ttu-id="64263-1594">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="64263-1594">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1595">VOLVER</span><span class="sxs-lookup"><span data-stu-id="64263-1595">RETURN</span></span></term>
              <description><span data-ttu-id="64263-1596">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="64263-1596">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1597">FLECHA DERECHA</span><span class="sxs-lookup"><span data-stu-id="64263-1597">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="64263-1598">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="64263-1598">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1599">BLOQ DESPL</span><span class="sxs-lookup"><span data-stu-id="64263-1599">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="64263-1600">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="64263-1600">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1601">TAB</span><span class="sxs-lookup"><span data-stu-id="64263-1601">TAB</span></span></term>
              <description><span data-ttu-id="64263-1602">{TAB}</span><span class="sxs-lookup"><span data-stu-id="64263-1602">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1603">FLECHA ARRIBA</span><span class="sxs-lookup"><span data-stu-id="64263-1603">UP ARROW</span></span></term>
              <description><span data-ttu-id="64263-1604">{UP}</span><span class="sxs-lookup"><span data-stu-id="64263-1604">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="64263-p393">También puede especificar teclas combinadas con MAYÚS y/o CTRL y/o ALT. Para especificar una tecla combinada con otra u otras teclas, use la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="64263-p393">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="64263-1607">MAYÚSCULAS</span><span class="sxs-lookup"><span data-stu-id="64263-1607">SHIFT</span></span></term>
              <description><span data-ttu-id="64263-1608">+ (signo más)</span><span class="sxs-lookup"><span data-stu-id="64263-1608">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1609">CTRL</span><span class="sxs-lookup"><span data-stu-id="64263-1609">CTRL</span></span></term>
              <description><span data-ttu-id="64263-1610">^ (intercalación)</span><span class="sxs-lookup"><span data-stu-id="64263-1610">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="64263-1611">ALT</span><span class="sxs-lookup"><span data-stu-id="64263-1611">ALT</span></span></term>
              <description><span data-ttu-id="64263-1612">% (signo porcentual)</span><span class="sxs-lookup"><span data-stu-id="64263-1612">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName"><span data-ttu-id="64263-1613">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1613">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1614">Especifica el nombre de un formato automático personalizado.</span><span class="sxs-lookup"><span data-stu-id="64263-1614">Specifies the name of a custom autoformat.</span></span> <span data-ttu-id="64263-1615">Este nombre puede ser una cadena que asigna nombre a un formato automático personalizado o puede ser la constante especial <b>xlBuiltIn</b> para especificar la plantilla de gráfico integrada.</span><span class="sxs-lookup"><span data-stu-id="64263-1615">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span></span></param>
        <param name="Gallery"><span data-ttu-id="64263-1616">Objeto opcional.</span><span class="sxs-lookup"><span data-stu-id="64263-1616">Optional Object.</span></span> <span data-ttu-id="64263-1617">Especifica el nombre de una galería.</span><span class="sxs-lookup"><span data-stu-id="64263-1617">Specifies the name of a gallery.</span></span></param>
        <summary><span data-ttu-id="64263-1618">Especifica el nombre de la plantilla de gráfico que Microsoft Excel usará al crear nuevos gráficos.</span><span class="sxs-lookup"><span data-stu-id="64263-1618">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl"><span data-ttu-id="64263-1619">URL del sitio por comprobar.</span><span class="sxs-lookup"><span data-stu-id="64263-1619">The URL of site to check.</span></span></param>
        <summary><span data-ttu-id="64263-1620">Devuelve el número de versión de copias de Windows SharePoint Foundation que se están ejecutando en el sitio para la dirección URL especificada.</span><span class="sxs-lookup"><span data-stu-id="64263-1620">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span></span></summary>
        <returns><span data-ttu-id="64263-1621"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="64263-1621"><b>Integer</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1622">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas del libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1622">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1623">Devuelve o establece el número de hojas de cálculo que Microsoft Excel insertará automáticamente en los libros nuevos.</span><span class="sxs-lookup"><span data-stu-id="64263-1623">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="64263-1624">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1624">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1625"><b>True</b> si en los gráficos se muestran los nombres de las sugerencias del gráfico.</span><span class="sxs-lookup"><span data-stu-id="64263-1625"><b>True</b> if charts show chart tip names.</span></span> <span data-ttu-id="64263-1626">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1626">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1627"><b>True</b> si en los gráficos se muestran valores de las sugerencias del gráfico.</span><span class="sxs-lookup"><span data-stu-id="64263-1627"><b>True</b> if charts show chart tip values.</span></span> <span data-ttu-id="64263-1628">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1628">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1629">Devuelve o establece un <b>valor Boolean</b> que representa si se muestra la ficha Programador en la cinta de opciones.</span><span class="sxs-lookup"><span data-stu-id="64263-1629">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span></span> <span data-ttu-id="64263-1630">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1630">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-1631"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-1631"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-1632">Esta propiedad corresponde a la casilla de verificación Mostrar ficha Programador en la cinta de opciones del cuadro de diálogo Opciones de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1632">This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1633">Devuelve o establece un <b>valor Boolean</b> que representa si se muestran las barras de herramientas Mini cuando el usuario hace clic con el botón secundario en la ventana del libro.</span><span class="sxs-lookup"><span data-stu-id="64263-1633">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span></span> <span data-ttu-id="64263-1634">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1634">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-1635"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-1635"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1636">Controla si la interfaz de usuario contextual de análisis rápido se muestra en la selección.</span><span class="sxs-lookup"><span data-stu-id="64263-1636">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span></span> <span data-ttu-id="64263-1637"><b>TRUE</b> significa que se mostrará el botón Análisis rápido.</span><span class="sxs-lookup"><span data-stu-id="64263-1637"><b>TRUE</b> means the Quick Analysis button will show.</span></span> <span data-ttu-id="64263-1638">Corresponde a la casilla Mostrar opciones de análisis rápido en la selección que se encuentra en el menú <b>Archivo, Opciones, Opciones</b>de Excel y, a continuación, ficha General. Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1638">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span></span> <span data-ttu-id="64263-1639"><b>Booleano</b> (<b>bool</b> en C#).</span><span class="sxs-lookup"><span data-stu-id="64263-1639"><b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1640">Devuelve o establece un <b>valor Boolean</b> que representa si se muestran las barras de herramientas Mini cuando un usuario selecciona texto.</span><span class="sxs-lookup"><span data-stu-id="64263-1640">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span></span> <span data-ttu-id="64263-1641">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1641">Read/write.</span></span></summary>
        <value><span data-ttu-id="64263-1642"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-1642"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="64263-1643">Corresponde a la casilla de verificación Mostrar minibarra de herramientas al seleccionar del cuadro de diálogo Opciones de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1643">Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1644">Devuelve <b>True</b> (valor predeterminado) cuando aparece el panel de tareas Nuevo libro para una aplicación de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1644">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1645"><b>True</b> si está activada la información sobre herramientas.</span><span class="sxs-lookup"><span data-stu-id="64263-1645"><b>True</b> if ToolTips are turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1646">Este objeto, miembro o enumeración está en desuso y no debería usarse en el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1646">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1647">Obtiene el conjunto de estilos de color que están cargados actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1647">Gets the set of color styles that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="64263-1648">Conjunto de estilos de color que se cargan actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1648">The set of color styles that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1649">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1649">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1650">Obtiene el conjunto de diseños SmartArt que están cargados actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1650">Gets the set of SmartArt layouts that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="64263-1651">Conjunto de diseños SmartArt cargados actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1651">The set of SmartArt layouts that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1652">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1652">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1653">Obtiene el conjunto de estilos rápidos de SmartArt que están cargados actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1653">Gets the set of SmartArt quick styles which are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="64263-1654">El conjunto de estilos rápidos de SmartArt que se cargan actualmente en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1654">The set of SmartArt quick styles which are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1655">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="64263-1655">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1656">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> colección para una aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1656">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1657">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1657">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1658">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> objeto que representa las opciones ortográficas de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1658">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1659">Devuelve o establece el nombre de la fuente estándar.</span><span class="sxs-lookup"><span data-stu-id="64263-1659">Returns or sets the name of the standard font.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1660">Si cambia la fuente estándar mediante esta propiedad, el cambio no será efectivo hasta que vuelva a abrir Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1660">If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1661">Devuelve o establece el tamaño de fuente estándar en puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-1661">Returns or sets the standard font size, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1662">Si cambia el tamaño de la fuente estándar mediante esta propiedad, el cambio no será efectivo hasta que vuelva a abrir Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1662">If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1663">Devuelve la ruta de acceso completa de la carpeta de inicio sin incluir el separador final.</span><span class="sxs-lookup"><span data-stu-id="64263-1663">Returns the complete path of the startup folder excluding the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1664">Devuelve o configura el texto de la barra de estado.</span><span class="sxs-lookup"><span data-stu-id="64263-1664">Returns or sets the text in the status bar.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-p402">Esta propiedad devuelve <b>False</b> si Microsoft Excel tiene el control de la barra de estado. Para restaurar el texto predeterminado de la barra de estado, configure la propiedad en <b>False</b>; esto funciona aunque la barra de estado esté oculta.</span><span class="sxs-lookup"><span data-stu-id="64263-p402">This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="64263-1667">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1667">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1668">Devuelve la ruta local en la que están almacenadas las plantillas.</span><span class="sxs-lookup"><span data-stu-id="64263-1668">Returns the local path where templates are stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1669">Devuelve la celda desde la que se llama a la función definida por el usuario como <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1669">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1670">Los usuarios no deben tener acceso a las propiedades o métodos del objeto <b>Range</b> cuando están dentro de la función definida por el usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1670">Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function.</span></span> <span data-ttu-id="64263-1671">Los usuarios pueden almacenar en memoria caché el objeto <b>Range</b> para su uso posterior y llevar a cabo acciones adicionales cuando se termine la actualización.</span><span class="sxs-lookup"><span data-stu-id="64263-1671">Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1672">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto que representa el libro donde se ejecuta el código de macro actual.</span><span class="sxs-lookup"><span data-stu-id="64263-1672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1673">Utilice esta propiedad para hacer referencia al libro que contiene el código de macro.</span><span class="sxs-lookup"><span data-stu-id="64263-1673">Use this property to refer to the workbook that contains your macro code.</span></span> <span data-ttu-id="64263-1674"><b>ThisWorkbook</b> es la única forma para hacer referencia a un libro de complemento desde el propio complemento.</span><span class="sxs-lookup"><span data-stu-id="64263-1674"><b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself.</span></span> <span data-ttu-id="64263-1675">La propiedad <b>ActiveWorkbook</b> no devolverá el libro de complemento; devuelve el libro que está llamando al complemento.</span><span class="sxs-lookup"><span data-stu-id="64263-1675">The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in.</span></span> <span data-ttu-id="64263-1676">Puede producirse un error en la propiedad, ya que el nombre del libro probablemente cambió <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> al crear el complemento.</span><span class="sxs-lookup"><span data-stu-id="64263-1676">The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in.</span></span> <span data-ttu-id="64263-1677"><b>ThisWorkbook</b> siempre devuelve el libro en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="64263-1677"><b>ThisWorkbook</b> always returns the workbook in which the code is running.</span></span></para>
          <para><span data-ttu-id="64263-1678">Esta propiedad solo se puede usar desde Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1678">This property can be used only from inside Excel.</span></span> <span data-ttu-id="64263-1679">No puede utilizarla para obtener acceso a un libro desde cualquier otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="64263-1679">You cannot use it to access a workbook from any other application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1680">Establece o devuelve el carácter utilizado como separador de miles como un valor de tipo <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1680">Sets or returns the character used for the thousands separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1681">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1681">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1682">Distancia, en puntos, desde el borde superior de la pantalla hasta el borde superior de la ventana principal de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1682">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span></span> <span data-ttu-id="64263-1683">Si la ventana de la aplicación está minimizada, esta propiedad controla la posición del icono de la ventana (en cualquier parte de la pantalla).</span><span class="sxs-lookup"><span data-stu-id="64263-1683">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1684">Devuelve o establece el menú o la tecla de ayuda de Microsoft Excel, que normalmente es "/".</span><span class="sxs-lookup"><span data-stu-id="64263-1684">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1685">Devuelve o establece la acción que se realiza al presionar la tecla de menú de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1685">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span></span> <span data-ttu-id="64263-1686">Puede ser <b>xlExcelMenus</b> o <b>xlLotusHelp</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1686">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1687"><b>True</b> si las teclas de desplazamiento de transición están activadas.</span><span class="sxs-lookup"><span data-stu-id="64263-1687"><b>True</b> if transition navigation keys are active.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1688">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="64263-1688">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64263-1689">Cancela la última acción de la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1689">Cancels the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="64263-1690">Este método deshace solo la última acción realizada por el usuario antes de ejecutar el procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1690">This method undoes only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="64263-1691">Debe ser la primera línea del procedimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1691">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="64263-1692">Intervalo <b>requerido.</b></span><span class="sxs-lookup"><span data-stu-id="64263-1692">Required <b>Range</b>.</span></span> <span data-ttu-id="64263-1693">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1693">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="64263-1694">Intervalo <b>requerido.</b></span><span class="sxs-lookup"><span data-stu-id="64263-1694">Required <b>Range</b>.</span></span> <span data-ttu-id="64263-1695">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1695">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="64263-1696">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1696">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1697">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1697">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="64263-1698">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1698">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1699">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1699">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="64263-1700">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1700">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1701">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1701">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="64263-1702">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1702">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1703">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1703">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="64263-1704">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1704">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1705">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1705">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="64263-1706">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1706">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1707">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1707">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="64263-1708">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1708">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1709">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1709">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="64263-1710">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1710">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1711">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1711">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="64263-1712">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1712">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1713">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1713">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="64263-1714">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1714">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1715">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1715">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="64263-1716">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1716">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1717">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1717">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="64263-1718">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1718">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1719">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1719">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="64263-1720">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1720">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1721">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1721">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="64263-1722">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1722">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1723">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1723">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="64263-1724">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1724">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1725">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1725">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="64263-1726">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1726">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1727">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1727">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="64263-1728">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1728">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1729">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1729">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="64263-1730">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1730">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1731">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1731">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="64263-1732">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1732">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1733">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1733">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="64263-1734">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1734">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1735">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1735">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="64263-1736">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1736">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1737">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1737">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="64263-1738">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1738">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1739">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1739">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="64263-1740">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1740">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1741">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1741">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="64263-1742">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1742">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1743">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1743">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="64263-1744">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1744">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1745">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1745">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="64263-1746">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1746">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1747">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1747">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="64263-1748">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1748">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1749">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1749">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="64263-1750">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1750">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1751">Se deben especificar al menos dos objetos <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1751">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="64263-1752">Devuelve la unión de dos o más rangos.</span><span class="sxs-lookup"><span data-stu-id="64263-1752">Returns the union of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1753">Devuelve el alto máximo del espacio que puede ocupar una ventana en el área de ventana de la aplicación, en puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-1753">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1754">Devuelve el ancho máximo del espacio que una ventana puede ocupar en el área de la ventana de la aplicación en puntos.</span><span class="sxs-lookup"><span data-stu-id="64263-1754">Returns the maximum width of the space that a window can occupy in the application window area in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1755">Obtiene o establece si Microsoft Excel permite que las funciones definidas por el usuario en los complementos XLL se ejecuten en un clúster de cálculo.</span><span class="sxs-lookup"><span data-stu-id="64263-1755">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span></span></summary>
        <value><span data-ttu-id="64263-1756"><b>true</b> si Excel permite que las funciones definidas por el usuario en los complementos XLL se ejecuten en un clúster de cálculo; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1756"><b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="64263-1757">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1757">Read/write.</span></span></para>
          <para><span data-ttu-id="64263-1758">
            <b>true</b> si Excel permite que las funciones definidas por el usuario en los complementos XLL se ejecuten en un clúster de cálculo; de lo <b>contrario, false</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1758">
            <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>.</span></span> <span data-ttu-id="64263-1759">El valor de la propiedad corresponde a la casilla Permitir que las funciones XLL definidas por el usuario se ejecuten en un clúster de cálculo en Fórmulas de la categoría Avanzadas del cuadro de diálogo Opciones <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> de Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1759">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="64263-1760">
            <b>Nota:</b>Para habilitar la propiedad, debe instalar un conector de clúster de informática de alto rendimiento <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> (HPC).</span><span class="sxs-lookup"><span data-stu-id="64263-1760">
            <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="64263-1761">El conector de clúster permite ejecutar funciones XLL seguras para clústeres de forma remota en un clúster HPC para aumentar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="64263-1761">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="64263-1762">Después de establecer la <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> propiedad, use la propiedad para especificar el conector de clúster <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> HPC que se usará.</span><span class="sxs-lookup"><span data-stu-id="64263-1762">After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1763">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> objeto que representa los objetos asignados en un libro.</span><span class="sxs-lookup"><span data-stu-id="64263-1763">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1764"><b>True</b> si la aplicación está visible o si fue creada o iniciada por el usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1764"><b>True</b> if the application is visible or if it was created or started by the user.</span></span> <span data-ttu-id="64263-1765"><b>False</b> si creó o inició la aplicación mediante programación mediante las funciones <b>CreateObject</b> o <b>GetObject</b> y la aplicación está oculta.</span><span class="sxs-lookup"><span data-stu-id="64263-1765"><b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1766">Cuando la propiedad <b>UserControl</b> de un objeto es <b>False</b>, dicho objeto se liberará cuando se libere la última referencia al objeto realizada mediante programación.</span><span class="sxs-lookup"><span data-stu-id="64263-1766">When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released.</span></span> <span data-ttu-id="64263-1767">Si esta propiedad es <b>False</b>, Microsoft Excel se cierra cuando se libera el último objeto de la sesión.</span><span class="sxs-lookup"><span data-stu-id="64263-1767">If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1768">Devuelve la ruta de acceso a la ubicación en la que están instalados los complementos COM en el equipo del usuario.</span><span class="sxs-lookup"><span data-stu-id="64263-1768">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1769">Devuelve o establece el nombre del usuario actual.</span><span class="sxs-lookup"><span data-stu-id="64263-1769">Returns or sets the name of the current user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1770"><b>True</b> (valor predeterminado) si los separadores del sistema de Microsoft Excel están habilitados.</span><span class="sxs-lookup"><span data-stu-id="64263-1770"><b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1771">Devuelve "Microsoft Excel".</span><span class="sxs-lookup"><span data-stu-id="64263-1771">Returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1772">Devuelve un objeto <b>VBE</b> que representa el Editor de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="64263-1772">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1773">Devuelve el número de versión de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1773">Returns the Microsoft Excel version number.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1774">Determina si el objeto es visible.</span><span class="sxs-lookup"><span data-stu-id="64263-1774">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile"><span data-ttu-id="64263-1775">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1775">Optional <b>Object</b>.</span></span> <span data-ttu-id="64263-1776"><b>True</b> para marcar la función como volátil.</span><span class="sxs-lookup"><span data-stu-id="64263-1776"><b>True</b> to mark the function as volatile.</span></span> <span data-ttu-id="64263-1777"><b>False</b> para marcar la función como no volátil.</span><span class="sxs-lookup"><span data-stu-id="64263-1777"><b>False</b> to mark the function as nonvolatile.</span></span> <span data-ttu-id="64263-1778">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1778">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="64263-p444">Marca como volátil una función definida por el usuario. Las funciones volátiles deben recalcularse cuando tenga lugar un cálculo en cualquier celda de la hoja de cálculo. Las funciones no volátiles solo se recalculan si cambian las variables de entrada. Este método no ejerce ningún efecto si no se encuentra dentro de una función definida por el usuario usada para calcular una celda de una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="64263-p444">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time"><span data-ttu-id="64263-1783">Objeto <b>requerido</b>.</span><span class="sxs-lookup"><span data-stu-id="64263-1783">Required <b>Object</b>.</span></span> <span data-ttu-id="64263-1784">La hora a la que desea que la macro se reanude en formato de fecha de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="64263-1784">The time at which you want the macro to resume in Microsoft Excel date format.</span></span></param>
        <summary><span data-ttu-id="64263-1785">Pausa una macro en ejecución hasta un momento especificado.</span><span class="sxs-lookup"><span data-stu-id="64263-1785">Pauses a running macro until a specified time.</span></span> <span data-ttu-id="64263-1786">Devuelve <b>True</b> si ha llegado la hora especificada.</span><span class="sxs-lookup"><span data-stu-id="64263-1786">Returns <b>True</b> if the specified time has arrived.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="64263-1787">
            <b>Importante:</b>El <b>método Wait</b> suspende toda la actividad de Microsoft Excel y puede impedir que realice otras operaciones en el equipo mientras está en vigor <b>Wait.</b></span><span class="sxs-lookup"><span data-stu-id="64263-1787">
            <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect.</span></span> <span data-ttu-id="64263-1788">No obstante, los procesos en segundo plano, tales como la impresión y el recálculo continúan.</span><span class="sxs-lookup"><span data-stu-id="64263-1788">However, background processes such as printing and recalculation continue.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1789">La propiedad, cuando se establece en True , genera una alerta si un programador intenta crear una nueva función <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> con un nombre de función existente. <b></b></span><span class="sxs-lookup"><span data-stu-id="64263-1789">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span></span> <span data-ttu-id="64263-1790"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1790">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="64263-1791"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="64263-1791"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1792">Devuelve un objeto que representa un rango del que se realiza un seguimiento cuando se vuelve a calcular <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="64263-1792">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1793">Distancia, en puntos, desde el borde izquierdo de la ventana de la aplicación hasta su borde derecho.</span><span class="sxs-lookup"><span data-stu-id="64263-1793">The distance, in points, from the left edge of the application window to its right edge.</span></span> <span data-ttu-id="64263-1794">Si la ventana está minimizada, esta propiedad es de solo lectura y devuelve el ancho del icono de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-1794">If the window is minimized, this property is read-only and returns the width of the window icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1795">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> colección que representa todas las ventanas de todos los libros.</span><span class="sxs-lookup"><span data-stu-id="64263-1795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1796">Esta propiedad devuelve una colección de ventanas, tanto visibles como ocultas.</span><span class="sxs-lookup"><span data-stu-id="64263-1796">This property returns a collection of both visible and hidden windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1797"><b>True</b> si el equipo ejecuta Microsoft Windows para Pen Computing.</span><span class="sxs-lookup"><span data-stu-id="64263-1797"><b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1798">Devuelve o establece el estado de la ventana.</span><span class="sxs-lookup"><span data-stu-id="64263-1798">Returns or sets the state of the window.</span></span> <span data-ttu-id="64263-1799">Lectura y <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" /> escritura.</span><span class="sxs-lookup"><span data-stu-id="64263-1799">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1800">
            <b>XlWindowState</b> puede ser una de estas <b>constantes XlWindowState:</b></span><span class="sxs-lookup"><span data-stu-id="64263-1800">
            <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</span></span></para>
          <para><span data-ttu-id="64263-1801">
            <b>xlMaximized</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1801">
            <b>xlMaximized</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1802">
            <b>xlNormal</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1802">
            <b>xlNormal</b>
          </span></span></para>
          <para><span data-ttu-id="64263-1803">
            <b>xlMinimized</b>
          </span><span class="sxs-lookup"><span data-stu-id="64263-1803">
            <b>xlMinimized</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1804">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> colección que representa todos los libros abiertos.</span><span class="sxs-lookup"><span data-stu-id="64263-1804">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1805">La colección que devuelve la propiedad <b>Workbooks</b> no incluye los complementos abiertos, que son un tipo especial de libros ocultos.</span><span class="sxs-lookup"><span data-stu-id="64263-1805">The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook.</span></span> <span data-ttu-id="64263-1806">Sin embargo, puede devolver un solo complemento abierto si conoce el nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="64263-1806">You can, however, return a single open add-in if you know the file name.</span></span> <span data-ttu-id="64263-1807">Por ejemplo, Workbooks("Oscar.xla") devolverá el complemento abierto denominado "Oscar.xla" como un <b>objeto Workbook.</b></span><span class="sxs-lookup"><span data-stu-id="64263-1807">For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1808">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="64263-1808">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64263-1809">Devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> colección que representa todas las hojas de cálculo del libro activo.</span><span class="sxs-lookup"><span data-stu-id="64263-1809">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="64263-1810">Esta propiedad no devuelve hojas de macros; use la <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> propiedad o la propiedad para devolver esas <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> hojas.</span><span class="sxs-lookup"><span data-stu-id="64263-1810">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
