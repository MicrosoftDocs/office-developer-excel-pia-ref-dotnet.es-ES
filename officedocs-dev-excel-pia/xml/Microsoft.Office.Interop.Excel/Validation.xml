<Type Name="Validation" FullName="Microsoft.Office.Interop.Excel.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64490ccfa07c156fb946aaf6fbcab62bd0310122" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009355" /></Metadata><TypeSignature Language="C#" Value="public interface Validation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Validation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Validation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Validation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002442F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a513a-101">Representa la validación de datos para un rango de hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="a513a-101">Represents data validation for a worksheet range.</span></span></summary>
    <remarks><para><span data-ttu-id="a513a-102">Utilice la <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> propiedad para devolver el objeto <b>Validation</b> .</span><span class="sxs-lookup"><span data-stu-id="a513a-102">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> property to return the <b>Validation</b> object.</span></span></para>
      <para><span data-ttu-id="a513a-103">Use el <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> método para agregar validación de datos a un rango y crear un nuevo objeto <b>Validation.</b></span><span class="sxs-lookup"><span data-stu-id="a513a-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to add data validation to a range and create a new <b>Validation</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Office.Interop.Excel.XlDVType Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add([in]valuetype Microsoft.Office.Interop.Excel.XlDVType Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Type As XlDVType, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDVType" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="a513a-104">Obligatorio <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="a513a-104">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="a513a-105">Tipo de validación.</span><span class="sxs-lookup"><span data-stu-id="a513a-105">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="a513a-106">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-106">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-107">Estilo de alerta de validación.</span><span class="sxs-lookup"><span data-stu-id="a513a-107">The validation alert style.</span></span> <span data-ttu-id="a513a-108">Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constantes: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>o <b>xlValidAlertWarning</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-108">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>, or <b>xlValidAlertWarning</b>.</span></span></param>
        <param name="Operator"><span data-ttu-id="a513a-109">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-110">Operador de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-110">The data validation operator.</span></span> <span data-ttu-id="a513a-111">Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constantes: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>o <b>xlNotEqual</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>, or <b>xlNotEqual</b>.</span></span></param>
        <param name="Formula1"><span data-ttu-id="a513a-112">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-113">Primera parte de la ecuación de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-113">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="a513a-114">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-115">La segunda parte de la validación de datos cuando <paramref name="Operator" /> es <b>xlBetween</b> o <b>xlNotBetween</b> (de lo contrario, se omite este argumento).</span><span class="sxs-lookup"><span data-stu-id="a513a-115">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="a513a-116">Agrega validación de datos al rango especificado.</span><span class="sxs-lookup"><span data-stu-id="a513a-116">Adds data validation to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="a513a-117">El método Add requiere argumentos diferentes, según el tipo de validación, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="a513a-117">The Add method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a513a-118">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-118">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-119">
                <paramref name="Formula1" /> es necesario; <paramref name="Formula2" /> se omite.</span><span class="sxs-lookup"><span data-stu-id="a513a-119">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="a513a-120"><paramref name="Formula1" /> debe contener una expresión que se evalúa como <b>True</b> cuando la entrada de datos es válida y <b>False</b> cuando la entrada de datos no es válida.</span><span class="sxs-lookup"><span data-stu-id="a513a-120"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-121">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-121">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" /> o <paramref name="Formula2" /> se usan.</span><span class="sxs-lookup"><span data-stu-id="a513a-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, or <paramref name="Formula2" /> are used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-123">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-123">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-124">
                <paramref name="Formula1" /> es necesario; <paramref name="Formula2" /> se omite.</span><span class="sxs-lookup"><span data-stu-id="a513a-124">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="a513a-125"><paramref name="Formula1" /> debe contener una lista delimitada por comas de valores o una referencia de hoja de cálculo a esta lista.</span><span class="sxs-lookup"><span data-stu-id="a513a-125"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to this list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b> o <b>xlValidateTime</b></span><span class="sxs-lookup"><span data-stu-id="a513a-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, or <b>xlValidateTime</b></span></span></term>
              <description><span data-ttu-id="a513a-127">Uno de <paramref name="Formula1" /> los dos o debe <paramref name="Formula2" /> especificarse, o ambos pueden especificarse.</span><span class="sxs-lookup"><span data-stu-id="a513a-127">One of either <paramref name="Formula1" /> or <paramref name="Formula2" /> must be specified, or both may be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertStyle">
      <MemberSignature Language="C#" Value="public int AlertStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlertStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlertStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlertStyle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-128">Devuelve el estilo de alerta de validación.</span><span class="sxs-lookup"><span data-stu-id="a513a-128">Returns the validation alert style.</span></span> <span data-ttu-id="a513a-129">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-129">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-130">Utilice el <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> método para establecer el estilo de alerta de un rango.</span><span class="sxs-lookup"><span data-stu-id="a513a-130">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to set the alert style for a range.</span></span> <span data-ttu-id="a513a-131">Si el rango ya tiene validación de datos, utilice <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> el método para cambiar el estilo de alerta.</span><span class="sxs-lookup"><span data-stu-id="a513a-131">If the range already has data validation, use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change the alert style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-132">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la aplicación Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a513a-132">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-133">Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="a513a-133">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a513a-134">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a513a-134">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="a513a-135">Solo <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-135">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-136">La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="a513a-136">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a513a-137">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="a513a-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a513a-138">Elimina el objeto.</span><span class="sxs-lookup"><span data-stu-id="a513a-138">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-139">Devuelve o establece el mensaje de error de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-139">Returns or sets the data validation error message.</span></span> <span data-ttu-id="a513a-140"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-140">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public string ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-141">Devuelve o establece el título del cuadro de diálogo de error asociado a la validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-141">Returns or sets the title of the data-validation error dialog box.</span></span> <span data-ttu-id="a513a-142"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-142">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-143">Devuelve el valor o la expresión correspondiente al formato condicional o a la validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-143">Returns the value or expression associated with the conditional format or data validation.</span></span> <span data-ttu-id="a513a-144">Puede ser un valor constante, un valor de cadena, una referencia de celda o una fórmula.</span><span class="sxs-lookup"><span data-stu-id="a513a-144">Can be a constant value, a string value, a cell reference, or a formula.</span></span> <span data-ttu-id="a513a-145"><b>String</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-145">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-146">Devuelve el valor o la expresión correspondiente a la segunda parte de un formato condicional o validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-146">Returns the value or expression associated with the second part of a conditional format or data validation.</span></span> <span data-ttu-id="a513a-147"><b>String</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-147">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-148">Esta propiedad sólo se usa cuando la propiedad de formato condicional de validación de <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> datos es <b>xlBetween</b> o <b>xlNotBetween</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-148">This property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>.</span></span> <span data-ttu-id="a513a-149">Puede ser un valor constante, un valor de cadena, una referencia de celda o una fórmula.</span><span class="sxs-lookup"><span data-stu-id="a513a-149">It can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreBlank">
      <MemberSignature Language="C#" Value="public bool IgnoreBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreBlank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreBlank As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreBlank { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-150"><b>True</b> si la validación de datos del rango permite valores en blanco.</span><span class="sxs-lookup"><span data-stu-id="a513a-150"><b>True</b> if blank values are permitted by the range data validation.</span></span> <span data-ttu-id="a513a-151"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-151">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-152">Si la <b>propiedad IgnoreBlank</b> es <b>True</b>, los datos de celda se consideran válidos si la celda está en blanco o si una celda a la que hace referencia la <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> propiedad or está en <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> blanco.</span><span class="sxs-lookup"><span data-stu-id="a513a-152">If the <b>IgnoreBlank</b> property is <b>True</b>, cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> or <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> property is blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IMEMode">
      <MemberSignature Language="C#" Value="public int IMEMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IMEMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IMEMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IMEMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IMEMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-153">Devuelve o establece la descripción de las reglas de entrada en idioma japonés.</span><span class="sxs-lookup"><span data-stu-id="a513a-153">Returns or sets the description of the Japanese input rules.</span></span> <span data-ttu-id="a513a-154">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constantes.</span><span class="sxs-lookup"><span data-stu-id="a513a-154">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants.</span></span> <span data-ttu-id="a513a-155">Valor <b>Entero</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-155">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-156">Tenga en cuenta que esta propiedad sólo se puede establecer si se ha instalado y seleccionado una versión de idioma japonés.</span><span class="sxs-lookup"><span data-stu-id="a513a-156">Note that this property can be set only when Japanese language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InCellDropdown">
      <MemberSignature Language="C#" Value="public bool InCellDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InCellDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property InCellDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InCellDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-157"><b>True</b> si la validación de datos muestra una lista desplegable que contiene valores aceptables.</span><span class="sxs-lookup"><span data-stu-id="a513a-157"><b>True</b> if data validation displays a drop-down list that contains acceptable values.</span></span> <span data-ttu-id="a513a-158"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-158">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a513a-159">Esta propiedad se pasa por alto si el tipo de validación no es <b>xlValidateList</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-159">This property is ignored if the validation type isn’t <b>xlValidateList</b>.</span></span></para>
          <para><span data-ttu-id="a513a-160">Utilice el <paramref name="Minimum" /> argumento del objeto or para especificar el rango que contiene datos <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> válidos.</span><span class="sxs-lookup"><span data-stu-id="a513a-160">Use the <paramref name="Minimum" /> argument of the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object to specify the range that contains valid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMessage">
      <MemberSignature Language="C#" Value="public string InputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property InputMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-161">Devuelve o establece el mensaje de entrada de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-161">Returns or sets the data validation input message.</span></span> <span data-ttu-id="a513a-162"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-162">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTitle">
      <MemberSignature Language="C#" Value="public string InputTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-163">Devuelve o establece el título del cuadro de diálogo de entrada asociado a la validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-163">Returns or sets the title of the data-validation input dialog box.</span></span> <span data-ttu-id="a513a-164"><b>String</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-164">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (object Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]object Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Optional Type As Object, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="a513a-165">Obligatorio <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="a513a-165">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="a513a-166">Tipo de validación.</span><span class="sxs-lookup"><span data-stu-id="a513a-166">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="a513a-167">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="a513a-167">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span> <span data-ttu-id="a513a-168">Estilo de alerta de validación.</span><span class="sxs-lookup"><span data-stu-id="a513a-168">The validation alert style.</span></span></param>
        <param name="Operator"><span data-ttu-id="a513a-169">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="a513a-169">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span></span> <span data-ttu-id="a513a-170">Operador de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-170">The data validation operator.</span></span></param>
        <param name="Formula1"><span data-ttu-id="a513a-171">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-172">Primera parte de la ecuación de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-172">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="a513a-173">Optional <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="a513a-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="a513a-174">La segunda parte de la validación de datos cuando <paramref name="Operator" /> es <b>xlBetween</b> o <b>xlNotBetween</b> (de lo contrario, se omite este argumento).</span><span class="sxs-lookup"><span data-stu-id="a513a-174">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="a513a-175">Modifica la validación de datos para un rango.</span><span class="sxs-lookup"><span data-stu-id="a513a-175">Modifies data validation for a range.</span></span></summary>
        <remarks><para><span data-ttu-id="a513a-176">El método <b>Modify</b> requiere diferentes argumentos, que dependen del tipo de validación, como se muestra en la siguiente tabla:</span><span class="sxs-lookup"><span data-stu-id="a513a-176">The <b>Modify</b> method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a513a-177">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-177">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" /> y no se <paramref name="Formula2" /> usan.</span><span class="sxs-lookup"><span data-stu-id="a513a-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, and <paramref name="Formula2" /> are not used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-179">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-179">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-180">
                <paramref name="Formula1" /> es necesario; <paramref name="Formula2" /> se omite.</span><span class="sxs-lookup"><span data-stu-id="a513a-180">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="a513a-181"><paramref name="Formula1" /> debe contener una expresión que se evalúa como <b>True</b> cuando la entrada de datos es válida y <b>False</b> cuando la entrada de datos no es válida.</span><span class="sxs-lookup"><span data-stu-id="a513a-181"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-182">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="a513a-182">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="a513a-183">
                <paramref name="Formula1" /> es necesario; <paramref name="Formula2" /> se omite.</span><span class="sxs-lookup"><span data-stu-id="a513a-183">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="a513a-184"><paramref name="Formula1" /> debe contener una lista delimitada por comas de valores o una referencia de hoja de cálculo a la lista.</span><span class="sxs-lookup"><span data-stu-id="a513a-184"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to the list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a513a-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b> o <b>xlValidateWholeNumber</b></span><span class="sxs-lookup"><span data-stu-id="a513a-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b>, or <b>xlValidateWholeNumber</b></span></span></term>
              <description><span data-ttu-id="a513a-186">
                <paramref name="Formula1" /> o, <paramref name="Formula2" /> o ambos, deben especificarse.</span><span class="sxs-lookup"><span data-stu-id="a513a-186">
                <paramref name="Formula1" /> or <paramref name="Formula2" />, or both, must be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-187">Devuelve el operador del formato condicional o validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-187">Returns the operator for the conditional format or data validation.</span></span> <span data-ttu-id="a513a-188"><b>Integer</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-188">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-189">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="a513a-189">Returns the parent object for the specified object.</span></span> <span data-ttu-id="a513a-190">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-190">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public bool ShowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowError" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-191"><b>True</b> si se muestra un mensaje de error de validación de datos siempre que el usuario escriba datos no válidos.</span><span class="sxs-lookup"><span data-stu-id="a513a-191"><b>True</b> if the data validation error message will be displayed whenever the user enters invalid data.</span></span> <span data-ttu-id="a513a-192"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-192">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInput">
      <MemberSignature Language="C#" Value="public bool ShowInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-193"><b>True</b> si se muestra el mensaje de entrada de validación de datos siempre que el usuario seleccione una celda del rango de validación de datos.</span><span class="sxs-lookup"><span data-stu-id="a513a-193"><b>True</b> if the data validation input message will be displayed whenever the user selects a cell in the data validation range.</span></span> <span data-ttu-id="a513a-194"><b>Boolean</b> de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="a513a-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-195">Devuelve la validación de tipo de datos de un intervalo.</span><span class="sxs-lookup"><span data-stu-id="a513a-195">Returns data type validation for a range.</span></span> <span data-ttu-id="a513a-196">Integer <b>de</b> solo lectura que puede ser una de las constantes de <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> .</span><span class="sxs-lookup"><span data-stu-id="a513a-196">Read-only <b>Integer</b> that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Value { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a513a-197"><b>True</b> si se cumplen todos los criterios de validación (es decir, si el rango contiene datos válidos).</span><span class="sxs-lookup"><span data-stu-id="a513a-197"><b>True</b> if all the validation criteria are met (that is, if the range contains valid data).</span></span> <span data-ttu-id="a513a-198"><b>Booleano</b> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a513a-198">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>