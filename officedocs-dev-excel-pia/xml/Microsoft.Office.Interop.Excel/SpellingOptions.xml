<Type Name="SpellingOptions" FullName="Microsoft.Office.Interop.Excel.SpellingOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b664c52434f8d93eb47ce0675a7bb457e2c7098f" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009859" /></Metadata><TypeSignature Language="C#" Value="public interface SpellingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract SpellingOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.SpellingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Interface SpellingOptions" />
  <TypeSignature Language="C++ CLI" Value="public interface class SpellingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024465-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3b611-101">Representa las distintas opciones de revisión ortográfica de una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="3b611-101">Represents the various spell-checking options for a worksheet.</span></span></summary>
    <remarks><para><span data-ttu-id="3b611-102">Utilice la <see cref="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" /> propiedad del objeto para devolver un objeto <see cref="T:Microsoft.Office.Interop.Excel._Application" /> <b>SpellingOptions</b> .</span><span class="sxs-lookup"><span data-stu-id="3b611-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object to return a <b>SpellingOptions</b> object.</span></span></para>
      <para><span data-ttu-id="3b611-103">Una vez que se devuelve un objeto <b>SpellingOptions,</b> puede usar sus siguientes propiedades para establecer o devolver varias opciones de revisión ortográfica:</span><span class="sxs-lookup"><span data-stu-id="3b611-103">Once a <b>SpellingOptions</b> object is returned, you can use its following properties to set or return various spell-checking options:</span></span></para>
      <list type="bullet">
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict" />
          </description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="ArabicModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlArabicModes ArabicModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlArabicModes ArabicModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicModes As XlArabicModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlArabicModes ArabicModes { Microsoft::Office::Interop::Excel::XlArabicModes get(); void set(Microsoft::Office::Interop::Excel::XlArabicModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlArabicModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-104">Devuelve o establece el modo del corrector ortográfico árabe.</span><span class="sxs-lookup"><span data-stu-id="3b611-104">Returns or sets the mode for the Arabic spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictAlefHamza">
      <MemberSignature Language="C#" Value="public bool ArabicStrictAlefHamza { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictAlefHamza" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictAlefHamza" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictAlefHamza As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictAlefHamza { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-105">Obtiene o establece si el corrector ortográfico usa reglas relativas a las palabras en árabe que comienzan por alef hamza.</span><span class="sxs-lookup"><span data-stu-id="3b611-105">Gets or sets whether the spelling checker uses rules regarding Arabic words beginning with an alef hamza.</span></span></summary>
        <value><span data-ttu-id="3b611-106"><b>true</b> si el corrector ortográfico usa reglas relativas a las palabras en árabe que comienzan por alef hamza; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-106"><b>true</b> if the spelling checker uses rules regarding Arabic words beginning with an alef hamza; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-107">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-107">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-108">
            <b>true</b> si el corrector ortográfico utiliza reglas ortográficas relacionadas con palabras en árabe que comienzan por alef hamza; de lo <b>contrario, false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-108">
            <b>true</b> if the spelling checker uses spelling rules regarding Arabic words beginning with an alef hamza; otherwise <b>false</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictFinalYaa">
      <MemberSignature Language="C#" Value="public bool ArabicStrictFinalYaa { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictFinalYaa" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictFinalYaa" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictFinalYaa As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictFinalYaa { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-109">Obtiene o establece si el corrector ortográfico usa reglas relacionadas con las palabras en árabe que terminan con la letra yaa.</span><span class="sxs-lookup"><span data-stu-id="3b611-109">Gets or sets whether the spelling checker uses rules regarding Arabic words ending with the letter yaa.</span></span></summary>
        <value><span data-ttu-id="3b611-110"><b>true</b> si el corrector ortográfico usa reglas relacionadas con las palabras en árabe que terminan con la letra yaa; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-110"><b>true</b> if the spelling checker uses rules regarding Arabic words ending with the letter yaa; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-111">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-111">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-112">
            <b>true</b> si el corrector ortográfico usa reglas relacionadas con las palabras en árabe que terminan con la letra yaa; de lo <b>contrario, false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-112">
            <b>true</b> if the spelling checker uses rules regarding Arabic words ending with the letter yaa; otherwise <b>false</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictTaaMarboota">
      <MemberSignature Language="C#" Value="public bool ArabicStrictTaaMarboota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictTaaMarboota" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictTaaMarboota" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictTaaMarboota As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictTaaMarboota { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-113">Obtiene o establece si el corrector ortográfico usa reglas para marcar las palabras en árabe que terminan con haa en lugar de taa marboota.</span><span class="sxs-lookup"><span data-stu-id="3b611-113">Gets or sets whether the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota.</span></span></summary>
        <value><span data-ttu-id="3b611-114"><b>true</b> si el corrector ortográfico usa reglas para marcar las palabras en árabe que terminan con haa en lugar de taa marboota; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-114"><b>true</b> if the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-115">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-115">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-116">
            <b>true</b> si el corrector ortográfico usa reglas para marcar las palabras en árabe que terminan con haa en lugar de taa marboota; de lo <b>contrario, false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-116">
            <b>true</b> if the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota; otherwise <b>false</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BrazilReform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPortugueseReform BrazilReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPortugueseReform BrazilReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" />
      <MemberSignature Language="VB.NET" Value="Public Property BrazilReform As XlPortugueseReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPortugueseReform BrazilReform { Microsoft::Office::Interop::Excel::XlPortugueseReform get(); void set(Microsoft::Office::Interop::Excel::XlPortugueseReform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPortugueseReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-117">Obtiene o establece el modo para comprobar la ortografía del portugués brasileño.</span><span class="sxs-lookup"><span data-stu-id="3b611-117">Gets or sets the mode for checking the spelling of Brazilian Portuguese.</span></span></summary>
        <value><span data-ttu-id="3b611-118">Modo para comprobar la ortografía del portugués brasileño.</span><span class="sxs-lookup"><span data-stu-id="3b611-118">The mode for checking the spelling of Brazilian Portuguese.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-119">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-119">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-120">
            <b>Nota:</b>Esta propiedad no establece el modo para comprobar la ortografía del portugués europeo.</span><span class="sxs-lookup"><span data-stu-id="3b611-120">
            <b>Note</b>: This property does not set the mode for checking the spelling of European Portuguese.</span></span> <span data-ttu-id="3b611-121">Para ello, use la <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3b611-121">To do that, use the <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DictLang">
      <MemberSignature Language="C#" Value="public int DictLang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DictLang" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang" />
      <MemberSignature Language="VB.NET" Value="Public Property DictLang As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DictLang { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-122">Selecciona el idioma del diccionario que se utiliza cuando Microsoft Excel realiza comprobaciones ortográficas.</span><span class="sxs-lookup"><span data-stu-id="3b611-122">Selects the dictionary language used when Microsoft Excel performs spelling checks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GermanPostReform">
      <MemberSignature Language="C#" Value="public bool GermanPostReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GermanPostReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform" />
      <MemberSignature Language="VB.NET" Value="Public Property GermanPostReform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GermanPostReform { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-123"><b>True</b> para comprobar la ortografía aplicando las reglas de alemán posteriores a la reforma.</span><span class="sxs-lookup"><span data-stu-id="3b611-123"><b>True</b> to check the spelling of words using the German post-reform rules.</span></span> <span data-ttu-id="3b611-124"><b>False</b> cancela esta característica.</span><span class="sxs-lookup"><span data-stu-id="3b611-124"><b>False</b> cancels this feature.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HebrewModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHebrewModes HebrewModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHebrewModes HebrewModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes" />
      <MemberSignature Language="VB.NET" Value="Public Property HebrewModes As XlHebrewModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHebrewModes HebrewModes { Microsoft::Office::Interop::Excel::XlHebrewModes get(); void set(Microsoft::Office::Interop::Excel::XlHebrewModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHebrewModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-125">Devuelve o establece el modo para el corrector ortográfico de hebreo.</span><span class="sxs-lookup"><span data-stu-id="3b611-125">Returns or sets the mode for the Hebrew spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3b611-126">Una palabra hebrea legítima puede ser una entrada del diccionario básico o cualquier inflexión.</span><span class="sxs-lookup"><span data-stu-id="3b611-126">A legitimate Hebrew word can be a basic dictionary entry or any inflection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCaps">
      <MemberSignature Language="C#" Value="public bool IgnoreCaps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreCaps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreCaps { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-127"><b>False</b> indica a Microsoft Excel que compruebe si hay palabras en mayúsculas; <b>True</b> indica a Excel que ignore las palabras en mayúsculas al usar el corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="3b611-127"><b>False</b> instructs Microsoft Excel to check for uppercase words; <b>True</b> instructs Excel to ignore words in uppercase when using the spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreFileNames">
      <MemberSignature Language="C#" Value="public bool IgnoreFileNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreFileNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreFileNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreFileNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-128"><b>False</b> indica a Microsoft Excel que compruebe si hay direcciones de Internet y archivos; <b>True</b> indica a Excel que ignore las direcciones de Internet y de archivo al usar el corrector ort xml.</span><span class="sxs-lookup"><span data-stu-id="3b611-128"><b>False</b> instructs Microsoft Excel to check for Internet and file addresses; <b>True</b> instructs Excel to ignore Internet and file addresses when using the spell checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMixedDigits">
      <MemberSignature Language="C#" Value="public bool IgnoreMixedDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMixedDigits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMixedDigits As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMixedDigits { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-129"><b>False</b> indica a Microsoft Excel que compruebe si hay dígitos mixtos; <b>True</b> indica a Excel que ignore los dígitos mixtos al revisar la ortografía.</span><span class="sxs-lookup"><span data-stu-id="3b611-129"><b>False</b> instructs Microsoft Excel to check for mixed digits; <b>True</b> instructs Excel to ignore mixed digits when checking spelling.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanCombineAux">
      <MemberSignature Language="C#" Value="public bool KoreanCombineAux { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanCombineAux" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanCombineAux As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanCombineAux { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-130">Cuando está establecido en <b>True</b>, Microsoft Excel combina los verbos auxiliares y adjetivos del coreano al comprobar la ortografía.</span><span class="sxs-lookup"><span data-stu-id="3b611-130">When set to <b>True</b>, Microsoft Excel combines Korean auxiliary verbs and adjectives when spelling is checked.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanProcessCompound">
      <MemberSignature Language="C#" Value="public bool KoreanProcessCompound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanProcessCompound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanProcessCompound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanProcessCompound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-131">Cuando está establecido en <b>True</b>, Microsoft Excel procesa los nombres compuestos del coreano al utilizar el corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="3b611-131">When set to <b>True</b>, this enables Microsoft Excel to process Korean compound nouns when using the spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanUseAutoChangeList">
      <MemberSignature Language="C#" Value="public bool KoreanUseAutoChangeList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanUseAutoChangeList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanUseAutoChangeList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanUseAutoChangeList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-132">Cuando está establecida en <b>True</b>, Microsoft Excel utiliza la lista de cambios automáticos para las palabras del idioma coreano al utilizar el corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="3b611-132">When set to <b>True</b>, this enables Microsoft Excel to use the auto-change list for Korean words when using the spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortugalReform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPortugueseReform PortugalReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPortugueseReform PortugalReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" />
      <MemberSignature Language="VB.NET" Value="Public Property PortugalReform As XlPortugueseReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPortugueseReform PortugalReform { Microsoft::Office::Interop::Excel::XlPortugueseReform get(); void set(Microsoft::Office::Interop::Excel::XlPortugueseReform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPortugueseReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-133">Obtiene o establece el modo para comprobar la ortografía del portugués europeo.</span><span class="sxs-lookup"><span data-stu-id="3b611-133">Gets or sets the mode for checking the spelling of European Portuguese.</span></span></summary>
        <value><span data-ttu-id="3b611-134">Modo para comprobar la ortografía del portugués europeo.</span><span class="sxs-lookup"><span data-stu-id="3b611-134">The mode for checking the spelling of European Portuguese.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-135">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-135">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-136">
            <b>Nota:</b>Esta propiedad no establece el modo para comprobar la ortografía del portugués brasileño.</span><span class="sxs-lookup"><span data-stu-id="3b611-136">
            <b>Note</b>: This property does not set the mode for checking the spelling of Brazilian Portuguese.</span></span> <span data-ttu-id="3b611-137">Para ello, use la <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3b611-137">To do that, use the <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RussianStrictE">
      <MemberSignature Language="C#" Value="public bool RussianStrictE { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RussianStrictE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.RussianStrictE" />
      <MemberSignature Language="VB.NET" Value="Public Property RussianStrictE As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RussianStrictE { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-138">Obtiene o establece si el corrector ortográfico usa reglas relacionadas con las palabras en ruso que contienen el carácter ë.</span><span class="sxs-lookup"><span data-stu-id="3b611-138">Gets or sets whether the spelling checker uses rules regarding Russian words containing the character ë.</span></span></summary>
        <value><span data-ttu-id="3b611-139"><b>true</b> si el corrector ortográfico usa reglas relacionadas con las palabras en ruso que contienen el carácter ë; de lo contrario, <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-139"><b>true</b> if the spelling checker uses rules regarding Russian words containing the character ë; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-140">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-140">Read/write.</span></span></para>
          <para><span data-ttu-id="3b611-141">
            <b>true</b> si el corrector ortográfico usa reglas relacionadas con las palabras en ruso que contienen el carácter ë; de lo <b>contrario, false</b>.</span><span class="sxs-lookup"><span data-stu-id="3b611-141">
            <b>true</b> if the spelling checker uses rules regarding Russian words containing the character ë; otherwise <b>false</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SpanishModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpanishModes SpanishModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpanishModes SpanishModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.SpanishModes" />
      <MemberSignature Language="VB.NET" Value="Public Property SpanishModes As XlSpanishModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpanishModes SpanishModes { Microsoft::Office::Interop::Excel::XlSpanishModes get(); void set(Microsoft::Office::Interop::Excel::XlSpanishModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpanishModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-142">Obtiene o establece el modo para comprobar la ortografía del español.</span><span class="sxs-lookup"><span data-stu-id="3b611-142">Gets or sets the mode for checking the spelling of Spanish.</span></span></summary>
        <value><span data-ttu-id="3b611-143">Modo para comprobar la ortografía del español.</span><span class="sxs-lookup"><span data-stu-id="3b611-143">The mode for checking the spelling of Spanish.</span></span></value>
        <remarks><para><span data-ttu-id="3b611-144">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="3b611-144">Read/write.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SuggestMainOnly">
      <MemberSignature Language="C#" Value="public bool SuggestMainOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuggestMainOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property SuggestMainOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuggestMainOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-145">Cuando se establece en <b>True</b>, indica a Microsoft Excel que sugiera palabras solo del diccionario principal al usar el corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="3b611-145">When set to <b>True</b>, instructs Microsoft Excel to suggest words from only the main dictionary when using the spelling checker.</span></span> <span data-ttu-id="3b611-146"><b>False</b> quita los límites de sugerir palabras solo del diccionario principal al usar el corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="3b611-146"><b>False</b> removes the limits of suggesting words from only the main dictionary when using the spelling checker.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDict">
      <MemberSignature Language="C#" Value="public string UserDict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserDict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict" />
      <MemberSignature Language="VB.NET" Value="Public Property UserDict As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserDict { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b611-147">Indica a Microsoft Excel que cree un diccionario personalizado al que se pueden agregar palabras nuevas al realizar comprobaciones ortográficas en una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="3b611-147">Instructs Microsoft Excel to create a custom dictionary to which new words can be added when performing spelling checks on a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>