<Type Name="_Chart" FullName="Microsoft.Office.Interop.Excel._Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57339bb20d25fcbe71c1c566971bde680079bc66" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20580328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Chart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Chart" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Chart" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Chart" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Chart" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D6-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="47bc1-101">Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47bc1-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="47bc1-102">Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47bc1-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="47bc1-103">De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47bc1-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="47bc1-104">Para obtener más información sobre el objeto COM, vea <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47bc1-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy23 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy23();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-107">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-108">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-110">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-111">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-112">Convierte el gráfico actual en el gráfico activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-112">Makes the current chart the active chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-113">Cuando se usa sin un calificador de objeto, esta propiedad devuelve una <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-113">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="47bc1-114">Cuando se usa con un calificador de objeto, esta propiedad devuelve un objeto <b>Application</b> que representa el creador del objeto especificado (puede usar esta propiedad con un objeto de automatización OLE para devolver la aplicación de ese objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-114">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="47bc1-115">Nombre de archivo de una plantilla de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-115">The file name for a chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-116">Aplica un tipo de gráfico estándar o personalizado a un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-116">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-117">Este método no admite la toma de constantes para diagramas nativos o combinados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-117">This method  does not support taking constants for native or combination charts.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, [in]object TypeName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType, Optional TypeName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="47bc1-118">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-118">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="47bc1-119">Un tipo de gráfico estándar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-119">A standard chart type.</span>
          </span>
        </param>
        <param name="TypeName">
          <span data-ttu-id="47bc1-120">
            <b>Objeto</b> de opcional (sólo se utiliza con un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-120">Optional <b>object</b> (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object).</span>
          </span>
          <span data-ttu-id="47bc1-121">El nombre del gráfico personalizado escriba si <paramref name="ChartType" /> especifica una galería de gráficos personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-121">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-122">Aplica un tipo de gráfico estándar o personalizado a un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-122">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="47bc1-123">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-123">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="47bc1-124">Tipo de etiqueta de datos que se aplica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-124">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="47bc1-125">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-125">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-126">
            <b>True</b> para mostrar la clave de leyenda junto al punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-126">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="47bc1-127">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-127">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="47bc1-128">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-129">
            <b>True</b> si el objeto genera automáticamente el texto adecuado basado en el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-129">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="47bc1-130">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-131">Para el <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> y <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objetos, <b>True</b> si la serie tiene líneas guía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-131">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="47bc1-132">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-133">El nombre de la serie para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-133">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="47bc1-134">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-135">El nombre de categoría para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-135">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="47bc1-136">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-137">El valor del rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-137">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="47bc1-138">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-139">El porcentaje para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-139">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="47bc1-140">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-140">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-141">El tamaño de la burbuja del rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-141">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="47bc1-142">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-143">Separador de la etiqueta de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-143">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-144">Aplica rótulos de datos a un punto, a una serie o a todas las series de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-144">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout([in]int32 Layout, [in]object ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyLayout(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyLayout (Layout As Integer, Optional ChartType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">
          <span data-ttu-id="47bc1-p115">Especifica el tipo de diseño. El tipo de diseño se indica mediante un número comprendido entre 1 y 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p115">Specifies the type of layout.  The type of layout is denoted by a number from 1 to 10.</span>
          </span>
        </param>
        <param name="ChartType">
          <span data-ttu-id="47bc1-147">Tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-147">The type of chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-148">Aplica los diseños mostrados en la cinta de opciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-148">Applies the layouts shown in the ribbon.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p116">Cuando se utiliza un diseño en el tipo de gráfico actual, se aplica al tipo de gráfico un número comprendido entre 1 y 10. También se puede aplicar el diseño de un tipo de gráfico a otro tipo de gráfico. Por ejemplo, puede aplicar los diseños disponibles en un gráfico de líneas a un gráfico de columnas. El diseño sólo agrega los elementos de gráfico que están disponibles para ese tipo concreto de gráfico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p116">When you use a layout on the current chart type, a number from 1 to 10 is applied to the chart type.  You can also apply the layout of one chart type on another chart type.  For example, you can  apply the layouts that are available from a line chart to a column chart.  The layout only adds chart elements that are available for that particular chart type.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-153">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-153">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Area3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Area3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Area3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-154">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos de áreas en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreaGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-155">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-155">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-156">El número del grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-156">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-157">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de área única (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de áreas (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-157">On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat([in]int32 Gallery, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat (Gallery As Integer, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-158">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-158">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.AutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScaling { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-159">
            <b>True</b> si Microsoft Excel ajusta la escala de un gráfico 3D para que sea más cerca en tamaño del gráfico 2D equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-159">
              <b>True</b> if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart.</span>
          </span>
          <span data-ttu-id="47bc1-160">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propiedad debe ser <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-160">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property must be <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes([in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Axes (Optional Type As Object, Optional AxisGroup As XlAxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="47bc1-161">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-162">Especifica el eje a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-162">Specifies the axis to return.</span>
          </span>
          <span data-ttu-id="47bc1-163">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes: <b>xlValue</b>, <b>xlCategory</b>o <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> sólo es válido para gráficos 3D).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-163">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlValue</b>, <b>xlCategory</b>, or <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> is valid only for 3-D charts).</span>
          </span>
        </param>
        <param name="AxisGroup">
          <span data-ttu-id="47bc1-164">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-164">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
          <span data-ttu-id="47bc1-165">Especifica el grupo de ejes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-165">Specifies the axis group.</span>
          </span>
          <span data-ttu-id="47bc1-166">Si se omite este argumento, se usa el grupo principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-166">If this argument is omitted, the primary group is used.</span>
          </span>
          <span data-ttu-id="47bc1-167">Los gráficos 3D tienen un solo grupo de ejes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-167">3-D charts have only one axis group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-168">Devuelve un objeto que representa un solo eje o una colección de ejes del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-168">Returns an object that represents either a single axis or a collection of the axes on the chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BackWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ BackWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-169">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objeto que permite al usuario dar formato por separado al plano posterior de un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the back wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="47bc1-170">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-170">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-171">
            <b>Paredes</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-171">
              <b>Walls</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Bar3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bar3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Bar3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-172">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos de barras en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-172">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-173">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-174">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-174">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-175">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de barras único (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de barras (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-175">On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-176">Devuelve o establece la forma utilizada con el gráfico de columnas o de barras 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-176">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-177">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-177">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryLabelLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CategoryLabelLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryLabelLevel As XlCategoryLabelLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCategoryLabelLevel CategoryLabelLevel { Microsoft::Office::Interop::Excel::XlCategoryLabelLevel get(); void set(Microsoft::Office::Interop::Excel::XlCategoryLabelLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCategoryLabelLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-178">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constante hace referencia al nivel de donde se proceden de los rótulos de categorías.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constant referring to the level of where the category labels are being sourced from.</span>
          </span>
          <span data-ttu-id="47bc1-179">
            <b>Número entero</b> (<b>int</b> en C#) Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-179">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-180">Si hay una jerarquía, 0 hace referencia al máximo nivel de primario, 1 hace referencia a sus elementos secundarios y así sucesivamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-180">If there is a hierarchy, 0 refers to the most parent level, 1 refers to its children, and so on.</span>
            </span>
            <span data-ttu-id="47bc1-181">Por lo que, 0 es igual al primer nivel, el segundo nivel de igual a 1, 2 es igual al tercer nivel, y así sucesivamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-181">So, 0 equals the first level, 1 equals the second level, 2 equals the third level, and so on.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartArea As ChartArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartArea ^ ChartArea { Microsoft::Office::Interop::Excel::ChartArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-182">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object que representa el área de gráfico completa del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-182">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartColor">
      <MemberSignature Language="C#" Value="public object ChartColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartColor { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-183">Devuelve o establece un <b>número entero</b> (<b>int</b> en C#) que representa la combinación de colores para el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-183">Returns or sets an <b>Integer</b> (<b>int</b> in C#) that represents the color scheme for the chart.</span>
          </span>
          <span data-ttu-id="47bc1-184">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-184">Read-write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-185">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-186">El número del grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-186">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-187">Devuelve un objeto object que representa un solo grupo de gráficos (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de todos los grupos de gráficos del gráfico (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-187">Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
          <span data-ttu-id="47bc1-188">La colección devuelta incluye todos los tipos de grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-188">The returned collection includes every type of group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-189">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-189">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-190">El nombre o número del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-190">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="47bc1-191">Este argumento puede ser una matriz si desea especificar más de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-191">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-192">Devuelve un objeto object que representa un único gráfico incrustado (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> objeto) o una colección de todos los gráficos incrustados (un <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> objeto) en la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-192">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-193">Este método no es equivalente a la <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> (propiedad).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-193">This method isn't equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> property.</span>
            </span>
            <span data-ttu-id="47bc1-194">Este método devuelve gráficos incrustados; la propiedad <b>Charts</b> devuelve hojas de gráficos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-194">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span>
            </span>
            <span data-ttu-id="47bc1-195">Usar el <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> propiedad para devolver el objeto <b>Chart</b> de un gráfico incrustado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> property to return the <b>Chart</b> object for an embedded chart.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-196">Devuelve o establece el estilo de gráfico para el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-196">Returns or sets the chart style for the chart.</span>
          </span>
          <span data-ttu-id="47bc1-197">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-197">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-198">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-198">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-199">Para establecer el estilo de gráfico puede utilizar un número comprendido entre 1 y 48.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-199">You can use a number from 1 to 48 to set the chart style.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartTitle As ChartTitle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartTitle ^ ChartTitle { Microsoft::Office::Interop::Excel::ChartTitle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-200">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object que representa el título del gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-200">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-201">Devuelve o establece el tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-201">Returns or sets the chart type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-202">Algunos tipos de gráficos no se pueden utilizar en informes de gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-202">Some chart types aren’t available for PivotChart reports.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard([in]object Source, [in]object Gallery, [in]object Format, [in]object PlotBy, [in]object CategoryLabels, [in]object SeriesLabels, [in]object HasLegend, [in]object Title, [in]object CategoryTitle, [in]object ValueTitle, [in]object ExtraTitle) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChartWizard (Optional Source As Object, Optional Gallery As Object, Optional Format As Object, Optional PlotBy As Object, Optional CategoryLabels As Object, Optional SeriesLabels As Object, Optional HasLegend As Object, Optional Title As Object, Optional CategoryTitle As Object, Optional ValueTitle As Object, Optional ExtraTitle As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="47bc1-203">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-203">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-204">Rango que contiene los datos de origen del nuevo gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-204">The range that contains the source data for the new chart.</span>
          </span>
          <span data-ttu-id="47bc1-205">Si se omite este argumento, Microsoft Excel modificará la hoja de gráfico activo o el gráfico seleccionado en la hoja de cálculo activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-205">If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="47bc1-206">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-206">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="47bc1-207">Tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-207">The chart type.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="47bc1-208">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-208">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-209">Número de opción para los formatos automáticos integrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-209">The option number for the built-in autoformats.</span>
          </span>
          <span data-ttu-id="47bc1-210">Puede ser un número de 1 a 10, según el tipo de galería.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-210">Can be a number from 1 through 10, depending on the gallery type.</span>
          </span>
          <span data-ttu-id="47bc1-211">Si se omite este argumento, Microsoft Excel elige un valor predeterminado basado en el origen de datos y el tipo de galería.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-211">If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="47bc1-212">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-212">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-213">Especifica si los datos de cada serie están en filas o columnas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-213">Specifies whether the data for each series is in rows or columns.</span>
          </span>
          <span data-ttu-id="47bc1-214">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlRows</b> o <b>xlColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-214">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlRows</b> or <b>xlColumns</b>.</span>
          </span>
        </param>
        <param name="CategoryLabels">
          <span data-ttu-id="47bc1-215">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-215">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-216">Un entero que especifica el número de filas o columnas del rango de origen que contienen rótulos de categorías.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-216">An integer specifying the number of rows or columns within the source range that contain category labels.</span>
          </span>
          <span data-ttu-id="47bc1-217">Valores válidos son de 0 (cero) a través de una menor que el número máximo de las categorías o series correspondientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-217">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="SeriesLabels">
          <span data-ttu-id="47bc1-218">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-218">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-219">Un entero que especifica el número de filas o columnas del rango de origen que contienen rótulos de series.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-219">An integer specifying the number of rows or columns within the source range that contain series labels.</span>
          </span>
          <span data-ttu-id="47bc1-220">Valores válidos son de 0 (cero) a través de una menor que el número máximo de las categorías o series correspondientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-220">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="HasLegend">
          <span data-ttu-id="47bc1-221">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-222">
            <b>True</b> para incluir una leyenda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-222">
              <b>True</b> to include a legend.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="47bc1-223">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-224">Texto del título del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-224">The chart title text.</span>
          </span>
        </param>
        <param name="CategoryTitle">
          <span data-ttu-id="47bc1-225">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-225">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-226">Texto del título del eje de categorías.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-226">The category axis title text.</span>
          </span>
        </param>
        <param name="ValueTitle">
          <span data-ttu-id="47bc1-227">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-228">Texto del título del eje de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-228">The value axis title text.</span>
          </span>
        </param>
        <param name="ExtraTitle">
          <span data-ttu-id="47bc1-229">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-230">Título del eje de series en gráficos 3D o el título del segundo eje de valores en gráficos 2D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-230">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-231">Modifica las propiedades del gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-231">Modifies the properties of the given chart.</span>
          </span>
          <span data-ttu-id="47bc1-232">Puede usar este método para aplicar rápidamente formato a un gráfico sin tener que establecer las propiedades por separado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-232">You can use this method to quickly format a chart without setting all the individual properties.</span>
          </span>
          <span data-ttu-id="47bc1-233">Este método no es interactivo y cambia únicamente las propiedades especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-233">This method is non-interactive, and it changes only the specified properties.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-234">Si <paramref name="Source" /> se omite y puede ser la selección no es un gráfico incrustado en la hoja de cálculo activa o la hoja activa no es un gráfico existente, este método genera un error y se produce un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-234">If <paramref name="Source" /> is omitted and either the selection isn't an embedded chart on the active worksheet or the active sheet isn't an existing chart, this method fails and an error occurs.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-235">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-235">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="47bc1-236">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-237">Una cadena que indica el nombre de archivo del diccionario personalizado que se va a examinar si la palabra no se encuentra en el diccionario principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-237">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="47bc1-238">Si se omite este argumento, se usa el diccionario especificado actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-238">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="47bc1-239">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-239">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-240">
            <b>True</b> para que Microsoft Excel omita las palabras que están en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-240">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="47bc1-241">
            <b>False</b> para que Microsoft Excel compruebe las palabras que están en mayúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-241">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="47bc1-242">Si se omite este argumento, se usará la configuración actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-242">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="47bc1-243">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-243">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-244">
            <b>True</b> para que Microsoft Excel muestre una lista de palabras alternativas sugeridas cuando se encuentra un error ortográfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-244">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="47bc1-245">
            <b>False</b> para que Microsoft Excel espere a que el usuario introduzca la ortografía correcta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-245">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="47bc1-246">Si se omite este argumento, se usará la configuración actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-246">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="47bc1-247">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-247">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-248">El idioma del diccionario utilizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-248">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="47bc1-249">Puede ser una de las <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> valores utilizados por el <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-249">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-250">Comprueba la ortografía de un objeto y se muestra el cuadro de diálogo Ortografía</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-250">Checks the spelling of an object and displays the Spelling dialog box</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchColorStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchColorStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchColorStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchColorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchColorStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchColorStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-251">Borra todos los colores en el gráfico especificado que no siguen el estilo de color aplicado al gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-251">Clears all colors on the specified chart that do not follow the color style applied to the chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-252">Use este método para restablecer todos los el gráfico un formato de color para el estilo de color aplicado al gráfico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-252">Use this method to reset all the chart color formatting to the color style applied to the chart.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-253">Borra el formato de los elementos del gráfico y usa los formatos automáticos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-253">Clears the chart elements formatting to automatic.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-254">Use este método para restablecer a automático el formato de los elementos del gráfico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-254">Use this method to reset the chart elements formatting to automatic.</span>
            </span>
            <span data-ttu-id="47bc1-255">Si usa este método en un gráfico, se restablecerá todo el formato (incluidas las invalidaciones).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-255">If you use this method on a chart, all formatting (including overrides) will be reset.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-256">Devuelve el nombre de código para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-256">Returns the code name for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p148">El valor que aparece en la celda situada a la derecha de (Name) en la ventana Propiedades es el nombre de código del objeto seleccionado. En tiempo de diseño, se puede cambiar el nombre de código de un objeto si se cambia este valor. Sin embargo, no se puede cambiar esta propiedad mediante programación en tiempo de ejecución.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p148">The value that you see in the cell to the right of (Name) in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-260">El nombre de código para un objeto se puede usar en lugar de una expresión que devuelve el objeto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-260">The code name for an object can be used in place of an expression that returns the object.</span>
            </span>
            <span data-ttu-id="47bc1-261">Es posible que el nombre de la hoja que sea distinto del nombre de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-261">It’s possible for the sheet name to be different from the code name.</span>
            </span>
            <span data-ttu-id="47bc1-262">Cuando se crea una hoja, el nombre de la hoja y el nombre de código son los mismos, pero al cambiar el nombre de hoja no cambia el nombre de código y, cambiar el nombre de código no cambia el nombre de la hoja.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-262">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name doesn’t change the sheet name.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Column3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Column3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-263">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos de columnas en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-263">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-264">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-265">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-265">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-266">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de una sola columna (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de columnas (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-266">On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="47bc1-267">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-268">La hoja antes de la cual se colocará la hoja copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-268">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="47bc1-269">No puede especificar <paramref name="Before" /> si especifica <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-269">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="47bc1-270">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-270">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-271">La hoja después de la cual se colocará la hoja copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-271">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="47bc1-272">No puede especificar <paramref name="After" /> si especifica <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-272">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-273">Copia la hoja en otro lugar del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-273">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-274">Si no se especifica cualquiera <paramref name="Before" /> o <paramref name="After" />, Microsoft Excel crea un nuevo libro que contiene la hoja copiada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-274">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyChartBuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyChartBuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyChartBuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-275">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-275">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="47bc1-276">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-276">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="47bc1-277">Especifica cómo se debe copiar la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-277">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="47bc1-278">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-278">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="47bc1-279">El formato de la imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-279">The format of the picture.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="47bc1-280">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-280">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="47bc1-281">El tamaño de la imagen copiada cuando el objeto es un gráfico en una hoja de gráfico (no está incrustado en una hoja de cálculo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-281">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-282">Copia el objeto seleccionado en el Portapapeles como una imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-282">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Corners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Corners As Corners" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Corners ^ Corners { Microsoft::Office::Interop::Excel::Corners ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-283">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object que representa las esquinas de un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-283">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="47bc1-284">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-284">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="47bc1-285">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-285">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="47bc1-286">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-286">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="47bc1-287">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-287">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="47bc1-288">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-288">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="47bc1-289">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-289">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="47bc1-290">Este parámetro es solo para Macintosh. No debe utilizarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-290">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-291">Reservado para uso interno. Este miembro es sólo para Macintosh y no debe usarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-291">Reserved for internal use.This member is for Macintosh only and should not be used.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-292">Devuelve una constante en el <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> (enumeración) que indica la aplicación en la que se creó este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-292">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="47bc1-293">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-293">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-294">La propiedad <b>Creator</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-294">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="47bc1-295">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-295">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DataTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataTable ^ DataTable { Microsoft::Office::Interop::Excel::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-296">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object que representa la tabla de datos del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-296">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the chart data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-297">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-297">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteHiddenContent">
      <MemberSignature Language="C#" Value="public void DeleteHiddenContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteHiddenContent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DeleteHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteHiddenContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteHiddenContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3051)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DepthPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property DepthPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DepthPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-298">Devuelve o establece la profundidad de un gráfico 3D como un porcentaje del ancho del gráfico (entre 20 y 2000 por ciento).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-298">Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Deselect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deselect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deselect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-299">Cancela la selección del gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-299">Cancels the selection for the specified chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DisplayBlanksAs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayBlanksAs As XlDisplayBlanksAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayBlanksAs DisplayBlanksAs { Microsoft::Office::Interop::Excel::XlDisplayBlanksAs get(); void set(Microsoft::Office::Interop::Excel::XlDisplayBlanksAs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-300">Devuelve o establece la forma en que se trazan las celdas en blanco en un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-300">Returns or sets the way that blank cells are plotted on a chart.</span>
          </span>
          <span data-ttu-id="47bc1-301">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constantes: <b>xlNotPlotted</b>, <b>xlInterpolated</b>o <b>xlZero</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-301">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <b>xlNotPlotted</b>, <b>xlInterpolated</b>, or <b>xlZero</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoughnutGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-302">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-303">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-303">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-304">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de anillos único (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de anillos (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-304">On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-305">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-305">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-306">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-306">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-p160">Para llamadas con un valor de línea de unión explícitamente establecido, esta propiedad devuelve la distancia vertical, en puntos, desde el lado del cuadro de límite del texto hasta el lugar donde la línea de la llamada se une al cuadro de texto. <b>Single</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p160">For callouts with an explicitly set drop value, this property returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box. Read-only <b>Single</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47bc1-309">Devuelve <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-309">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p161">La distancia se mide desde la parte superior del cuadro de texto, a menos que el valor de la propiedad <b>AutoAttach</b> sea <b>True</b> y el cuadro de texto esté a la izquierda del origen de la línea de la llamada (lugar al que señala la llamada), en cuyo caso la distancia de la línea de unión se mide desde la parte inferior del cuadro de texto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p161">This distance is measured from the top of the text box unless the <b>AutoAttach</b> property is set to <b>True</b> and the text box is to the left of the origin of the callout line (the place that the callout points to), in which case the drop distance is measured from the bottom of the text box. </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-311">Usar el <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> (método) para establecer el valor de esta propiedad.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-311">Use the <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> method to set the value of this property.</span>
            </span>
          </para>
          <para></para>
          <para>
            <span data-ttu-id="47bc1-312">El valor de esta propiedad refleja con exactitud la posición de los datos adjuntos de línea de llamada al cuadro de texto sólo si la llamada ha establecido explícitamente un valor de drop, es decir, si el valor de la <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /><b>propiedad</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-312">The value of this property accurately reflects the position of the callout line attachment to the text box only if the callout has an explicitly set drop value — that is, if the value of the <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> property is <b>msoCalloutDropCustom</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
        <example>
          <para>
            <span data-ttu-id="47bc1-p162">Este ejemplo reemplaza la línea de unión personalizada de la forma uno de myDocument por una de las dos líneas de unión preestablecidas, dependiendo de que el valor de la línea de unión personalizada sea mayor o menor que la mitad del alto del cuadro de texto de la llamada. Para que el ejemplo funcione, la forma uno debe ser una llamada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p162">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="47bc1-p163">Este ejemplo reemplaza la línea de unión personalizada de la forma uno de myDocument por una de las dos líneas de unión preestablecidas, dependiendo de que el valor de la línea de unión personalizada sea mayor o menor que la mitad del alto del cuadro de texto de la llamada. Para que el ejemplo funcione, la forma uno debe ser una llamada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p163">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="47bc1-p164">Este ejemplo reemplaza la línea de unión personalizada de la forma uno de myDocument por una de las dos líneas de unión preestablecidas, dependiendo de que el valor de la línea de unión personalizada sea mayor o menor que la mitad del alto del cuadro de texto de la llamada. Para que el ejemplo funcione, la forma uno debe ser una llamada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p164">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy24" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy24 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy24 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy25" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy25 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy25 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Elevation" />
      <MemberSignature Language="VB.NET" Value="Public Property Elevation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Elevation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-319">Devuelve o establece la elevación de la vista del gráfico 3D en grados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-319">Returns or sets the elevation of the 3-D chart view in degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-320">La elevación del gráfico es el alto en el que se ve el gráfico en grados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-320">The chart elevation is the height at which you view the chart in degrees.</span>
            </span>
            <span data-ttu-id="47bc1-321">Para la mayoría de los tipos de gráficos, el valor predeterminado es 15.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-321">The default is 15 for most chart types.</span>
            </span>
            <span data-ttu-id="47bc1-322">El valor de esta propiedad debe estar comprendido entre -90 y 90, excepto para los gráficos de barras 3D, en los que el valor debe estar entre 0 y 44.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-322">The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="47bc1-323">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-323">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-324">Nombre del objeto, en el que se usan las convenciones de nomenclatura de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-324">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-325">Convierte un nombre de Microsoft Excel en un objeto o un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-325">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export([in]string Filename, [in]object FilterName, [in]object Interactive) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Filename As String, Optional FilterName As Object, Optional Interactive As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="47bc1-326">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-326">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="47bc1-327">El nombre del archivo exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-327">The name of the exported file.</span>
          </span>
        </param>
        <param name="FilterName">
          <span data-ttu-id="47bc1-328">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-328">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-329">El nombre, independiente del lenguaje, del filtro de imagen, tal como aparece en el Registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-329">The language-independent name of the graphic filter as it appears in the registry.</span>
          </span>
        </param>
        <param name="Interactive">
          <span data-ttu-id="47bc1-330">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-330">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-331">
            <b>True</b> para mostrar el cuadro de diálogo que contiene las opciones específicas del filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-331">
              <b>True</b> to display the dialog box that contains the filter-specific options.</span>
          </span>
          <span data-ttu-id="47bc1-332">Si este argumento es <b>False</b>, Microsoft Excel utiliza los valores predeterminados para el filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-332">If this argument is <b>False</b>, Microsoft Excel uses the default values for the filter.</span>
          </span>
          <span data-ttu-id="47bc1-333">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-333">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-334">Exporta el gráfico con un formato de imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-334">Exports the chart in a graphic format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="47bc1-335">Tipo del formato de archivo al que exportar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-335">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="47bc1-336">El nombre de archivo del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-336">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="47bc1-337">Puede incluir una ruta de acceso completa o short_Excel2007 guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-337">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="47bc1-338">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-338">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="47bc1-339">Especifica la calidad del archivo publicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-339">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="47bc1-340">
            <b>True</b> para que se incluyan las propiedades del documento; de lo contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-340">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="47bc1-341">
            <b>True</b> para omitir las áreas de impresión establecidas al realizar la publicación; de lo contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-341">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="47bc1-p172">Número de la página en la que comienza la publicación. Si no se especifica este argumento, la publicación empieza por el principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p172">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="47bc1-p173">Número de la última página que se va a publicar. Si no se especifica este argumento, la publicación finaliza en la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p173">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="47bc1-346">
            <b>True</b> para mostrar el archivo en el visor una vez publicado; en caso contrario, <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-346">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="47bc1-347">Puntero a la clase FixedFormatExt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-347">Pointer to the FixedFormatExt class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-348">Exporta a un archivo con el formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-348">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p174">Este método también admite la inicialización de un complemento para exportar un archivo a un formato de archivo fijo. Por ejemplo, Excel realizará la conversión del formato de archivo si están instalados los convertidores necesarios. Normalmente, el usuario es quien inicia la conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p174">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Floor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Floor As Floor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Floor ^ Floor { Microsoft::Office::Interop::Excel::Floor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-352">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object que representa el plano inferior del gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-352">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullSeriesCollection">
      <MemberSignature Language="C#" Value="public object FullSeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FullSeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.FullSeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FullSeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3047)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-353">El número indizado de los datos filtrados a objeto <b>Series</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-353">The indexed number of the filtered out <b>Series</b> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-354">Permite recuperar la filtrada serie especificado por el argumento Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-354">Enables retrieving the filtered out series specified by the Index argument.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-355">Objetos 
            <b>series</b> en filas o columnas ocultas no aparecen en la colección de series actual a menos que el usuario ha habilitado la opción <b>Mostrar datos en filas y columnas ocultas</b> en el cuadro de diálogo Seleccionar datos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-355">
                <b>Series</b> objects in hidden rows or columns do not appear in the current series collection unless the user has enabled the <b>Show data in hidden rows and columns</b> option in the Select Data dialog.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.GapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property GapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GapDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-356">Devuelve o establece la distancia entre la serie de datos en un gráfico 3D como un porcentaje del ancho del marcador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-356">Returns or sets the distance between the data series in a 3-D chart as a percentage of the marker width.</span>
          </span>
          <span data-ttu-id="47bc1-357">El valor de la propiedad debe ser entre 0 y 500.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-357">The value of this property must be between 0 and 500.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement([in]int32 x, [in]int32 y, [in]int32&amp; ElementID, [in]int32&amp; Arg1, [in]int32&amp; Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetChartElement (x As Integer, y As Integer, ByRef ElementID As Integer, ByRef Arg1 As Integer, ByRef Arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetChartElement(int x, int y, int % ElementID, int % Arg1, int % Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="47bc1-358">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-358">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="47bc1-359">Coordenada X del elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-359">The X coordinate of the chart element.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="47bc1-360">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-360">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="47bc1-361">Coordenada Y del elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-361">The Y coordinate of the chart element.</span>
          </span>
        </param>
        <param name="ElementID">
          <span data-ttu-id="47bc1-362">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-362">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="47bc1-363">Cuando se devuelve el método, este argumento contiene el <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> valor del elemento de gráfico en las coordenadas especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-363">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span>
          </span>
          <span data-ttu-id="47bc1-364">Si desea más información, vea la sección Comentarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-364">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="47bc1-365">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-365">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="47bc1-366">Cuando el método finalice, el argumento contendrá información relativa al elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-366">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="47bc1-367">Si desea más información, vea la sección Comentarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-367">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="47bc1-368">
            <b>Integer</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-368">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="47bc1-369">Cuando el método finalice, el argumento contendrá información relativa al elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-369">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="47bc1-370">Si desea más información, vea la sección Comentarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-370">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-p181">Devuelve información acerca del elemento de gráfico situado en las coordenadas X e Y especificadas. Este método tiene la particularidad de que sólo se especifican los valores de los dos primeros argumentos. Microsoft Excel rellena el resto de los argumentos y el código debe examinar sus valores al finalizar el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p181">Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-374">El valor de <paramref name="ElementID" /> después de que el método devuelve determina si <paramref name="Arg1" /> y <paramref name="Arg2" /> contienen cualquier información, tal como se muestra en la siguiente tabla.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-374">The value of <paramref name="ElementID" /> after the method returns determines whether <paramref name="Arg1" /> and <paramref name="Arg2" /> contain any information, as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="47bc1-375">
                  <b>xlAxis</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-375">
                    <b>xlAxis</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-376">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-376">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-377">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-377">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-378">
                  <b>xlAxisTitle</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-378">
                    <b>xlAxisTitle</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-379">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-379">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-380">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-380">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-381">
                  <b>xlDisplayUnitLabel</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-381">
                    <b>xlDisplayUnitLabel</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-382">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-382">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-383">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-383">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-384">
                  <b>xlMajorGridlines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-384">
                    <b>xlMajorGridlines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-385">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-385">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-386">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-386">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-387">
                  <b>xlMinorGridlines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-387">
                    <b>xlMinorGridlines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-388">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-388">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-389">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-389">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-390">
                  <b>xlPivotChartDropZone</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-390">
                    <b>xlPivotChartDropZone</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-391">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-391">DropZoneType</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-392">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-392">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-393">
                  <b>xlPivotChartFieldButton</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-393">
                    <b>xlPivotChartFieldButton</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-394">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-394">DropZoneType</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-395">PivotFieldIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-395">PivotFieldIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-396">
                  <b>xlDownBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-396">
                    <b>xlDownBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-397">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-397">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-398">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-398">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-399">
                  <b>xlDropLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-399">
                    <b>xlDropLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-400">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-400">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-401">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-401">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-402">
                  <b>xlHiLoLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-402">
                    <b>xlHiLoLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-403">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-403">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-404">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-404">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-405">
                  <b>xlRadarAxisLabels</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-405">
                    <b>xlRadarAxisLabels</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-406">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-406">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-407">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-407">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-408">
                  <b>xlSeriesLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-408">
                    <b>xlSeriesLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-409">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-409">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-410">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-410">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-411">
                  <b>xlUpBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-411">
                    <b>xlUpBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-412">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-412">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-413">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-413">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-414">
                  <b>xlChartArea</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-414">
                    <b>xlChartArea</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-415">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-415">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-416">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-416">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-417">
                  <b>xlChartTitle</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-417">
                    <b>xlChartTitle</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-418">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-418">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-419">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-419">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-420">
                  <b>xlCorners</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-420">
                    <b>xlCorners</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-421">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-421">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-422">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-422">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-423">
                  <b>xlDataTable</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-423">
                    <b>xlDataTable</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-424">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-424">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-425">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-425">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-426">
                  <b>xlFloor</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-426">
                    <b>xlFloor</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-427">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-427">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-428">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-428">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-429">
                  <b>xlLegend</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-429">
                    <b>xlLegend</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-430">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-430">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-431">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-431">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-432">
                  <b>xlNothing</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-432">
                    <b>xlNothing</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-433">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-433">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-434">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-434">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-435">
                  <b>xlPlotArea</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-435">
                    <b>xlPlotArea</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-436">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-436">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-437">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-437">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-438">
                  <b>xlWalls</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-438">
                    <b>xlWalls</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-439">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-439">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-440">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-440">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-441">
                  <b>xlDataLabel</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-441">
                    <b>xlDataLabel</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-442">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-442">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-443">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-443">PointIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-444">
                  <b>xlErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-444">
                    <b>xlErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-445">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-445">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-446">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-446">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-447">
                  <b>xlLegendEntry</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-447">
                    <b>xlLegendEntry</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-448">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-448">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-449">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-449">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-450">
                  <b>xlLegendKey</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-450">
                    <b>xlLegendKey</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-451">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-451">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-452">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-452">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-453">
                  <b>xlSeries</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-453">
                    <b>xlSeries</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-454">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-454">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-455">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-455">PointIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-456">
                  <b>xlShape</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-456">
                    <b>xlShape</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-457">ShapeIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-457">ShapeIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-458">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-458">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-459">
                  <b>xlTrendline</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-459">
                    <b>xlTrendline</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-460">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-460">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-461">TrendLineIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-461">TrendLineIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-462">
                  <b>xlXErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-462">
                    <b>xlXErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-463">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-463">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-464">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-464">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-465">
                  <b>xlYErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-465">
                    <b>xlYErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-466">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-466">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="47bc1-467">Ninguno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-467">None</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="47bc1-468">En la siguiente tabla se describe el significado de <paramref name="Arg1" /> y <paramref name="Arg2" /> después de que el método devuelve.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-468">The following table describes the meaning of <paramref name="Arg1" /> and <paramref name="Arg2" /> after the method returns.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="47bc1-469">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-469">AxisIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-470">Especifica si el eje es principal o secundaria.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-470">Specifies whether the axis is primary or secondary.</span>
                </span>
                <span data-ttu-id="47bc1-471">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constantes: <b>xlPrimary</b> o <b>xlSecondary</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants: <b>xlPrimary</b> or <b>xlSecondary</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-472">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-472">AxisType</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-473">Especifica el tipo de eje.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-473">Specifies the axis type.</span>
                </span>
                <span data-ttu-id="47bc1-474">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes: <b>xlCategory</b>, <b>xlSeriesAxis</b>o <b>xlValue</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-474">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlCategory</b>, <b>xlSeriesAxis</b>, or <b>xlValue</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-475">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-475">DropZoneType</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-476">Especifica el tipo de zona de colocación: columna, datos, página o campo de fila.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-476">Specifies the drop zone type: column, data, page, or row field.</span>
                </span>
                <span data-ttu-id="47bc1-477">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constantes: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>o <b>xlRowField</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-477">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constants: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>, or <b>xlRowField</b>.</span>
                </span>
                <span data-ttu-id="47bc1-478">Las constantes de campo de columna y fila especifican los campos de serie y de categoría respectivamente.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-478">The column and row field constants specify the series and category fields respectively.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-479">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-479">GroupIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-480">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección para un grupo de gráficos.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-480">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection for a specific chart group.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-481">PivotFieldIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-481">PivotFieldIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-482">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> colección para una columna (serie), datos, página o campo de fila (categoría).</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-482">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection for a specific column (series), data, page, or row (category) field.</span>
                </span>
                <span data-ttu-id="47bc1-483">-1 si el tipo de zona de la colocación es <b>xlDataField</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-483">-1 if the drop zone type is <b>xlDataField</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-484">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-484">PointIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-485">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.Points" /> colección para un punto determinado dentro de una serie.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-485">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection for a specific point within a series.</span>
                </span>
                <span data-ttu-id="47bc1-486">Un valor de -1 indica que están seleccionados todos los puntos de datos.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-486">A value of –1 indicates that all data points are selected.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-487">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-487">SeriesIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-488">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.Series" /> colección para una serie dada.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-488">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection for a specific series.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-489">ShapeIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-489">ShapeIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-490">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección para una forma dada.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-490">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection for a specific shape.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="47bc1-491">TrendlineIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-491">TrendlineIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="47bc1-492">Especifica el desplazamiento en el <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> colección para una línea de tendencia dada de una serie.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-492">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection for a specific trendline within a series.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-493">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-493">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-494">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-494">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public object HasAxis[object Index1, object Index2] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasAxis(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAxis(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasAxis[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); void set(System::Object ^ Index1, System::Object ^ Index2, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="47bc1-495">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-495">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-496">El tipo de eje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-496">The axis type.</span>
          </span>
          <span data-ttu-id="47bc1-497">Ejes de series se aplican sólo a los gráficos 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-497">Series axes apply only to 3-D charts.</span>
          </span>
          <span data-ttu-id="47bc1-498">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-498">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="47bc1-499">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-499">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-500">El grupo de ejes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-500">The axis group.</span>
          </span>
          <span data-ttu-id="47bc1-501">Los gráficos 3D sólo tienen un conjunto de ejes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-501">3-D charts have only one set of axes.</span>
          </span>
          <span data-ttu-id="47bc1-502">Puede ser una de las <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-502">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-503">Devuelve o establece información acerca de los ejes existentes en el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-503">Returns or sets which axes exist on the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-504">Microsoft Excel puede crear o eliminar ejes si se cambia el tipo de gráfico o la <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> (propiedad).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-504">Microsoft Excel may create or delete axes if you change the chart type or the <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasDataTable" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-505">
            <b>True</b> si el gráfico tiene una tabla de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-505">
              <b>True</b> if the chart has a data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHiddenContent">
      <MemberSignature Language="C#" Value="public bool HasHiddenContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHiddenContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasHiddenContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasHiddenContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasLegend" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLegend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLegend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-506">
            <b>True</b> si el gráfico tiene una leyenda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-506">
              <b>True</b> if the chart has a legend.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasPivotFields" />
      <MemberSignature Language="VB.NET" Value="Public Property HasPivotFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPivotFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-507">
            <b>True</b> si se muestran los controles de gráfico dinámico en el informe de gráfico dinámico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-507">
              <b>True</b> if the PivotChart controls are displayed on the specified PivotChart report.</span>
          </span>
          <span data-ttu-id="47bc1-508">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-508">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="47bc1-509">Para un gráfico normal, esta propiedad siempre devuelve <b>False</b> y no se puede establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-509">For a regular chart, this property always returns <b>False</b> and cannot be set.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property HasTitle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasTitle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-510">
            <b>True</b> si el eje o el gráfico tiene un título visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-510">
              <b>True</b> if the axis or chart has a visible title.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-511">Título de un eje está representado por un <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> objeto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-511">An axis title is represented by an <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-512">Un título de gráfico está representado por un <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> objeto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-512">A chart title is represented by a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HeightPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property HeightPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HeightPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-513">Devuelve o establece el alto de un gráfico 3D como un porcentaje del ancho del gráfico (entre 5 y 500 por ciento).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-513">Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-514">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> colección que representa los hipervínculos del rango u hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-514">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-515">Devuelve el número de índice del objeto contenido en el conjunto de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-515">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-516">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-516">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Legend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legend As Legend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Legend ^ Legend { Microsoft::Office::Interop::Excel::Legend ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-517">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object que representa la leyenda del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-517">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Line3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Line3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-518">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos de líneas en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-518">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-519">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-519">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-520">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-520">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-521">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de línea única (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de líneas (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-521">On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-522">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-522">Reserved for internal use.</span>
          </span>
          <span data-ttu-id="47bc1-523">f</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-523">f</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-p192">El número de índice del elemento de texto a establecer o devolver. Si este argumento se omite, se devuelve o establece la lista completa como una matriz de cadenas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p192">The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-p193">Devuelve o establece los elementos de texto de un cuadro de lista o de un cuadro combinado como una matriz de cadenas de caracteres, o devuelve y establece un único elemento de texto. Si no hay elementos en la lista, devuelve un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p193">Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47bc1-528">Variant</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-528">Variant</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-529">Al establecer esta propiedad borra cualquier rango especificado por el <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> (propiedad).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-529">Setting this property clears any range specified by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
        <example>
          <para>
            <span data-ttu-id="47bc1-p194">En este ejemplo se establecen los elementos de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p194">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="47bc1-p195">En este ejemplo se establece el elemento cuatro de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p195">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="47bc1-p196">En este ejemplo se establecen los elementos de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p196">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="47bc1-p197">En este ejemplo se establece el elemento cuatro de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p197">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="47bc1-p198">En este ejemplo se establecen los elementos de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p198">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="47bc1-p199">En este ejemplo se establece el elemento cuatro de un cuadro de lista de la hoja de cálculo uno. Si Shapes(2) no hace referencia a un cuadro de lista, se devuelve un error.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p199">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location([in]valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, [in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Location (Where As XlChartLocation, Optional Name As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where">
          <span data-ttu-id="47bc1-542">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-542">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          </span>
          <span data-ttu-id="47bc1-543">Lugar al que se desplaza el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-543">Where to move the chart.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="47bc1-544">
            <b>Objeto</b>de opcional; requerido si <paramref name="Where" /> es <b>xlLocationAsObject</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-544">Optional <b>Object</b>; required if <paramref name="Where" /> is <b>xlLocationAsObject</b>.</span>
          </span>
          <span data-ttu-id="47bc1-545">El nombre de la hoja donde el gráfico será incrustado si <paramref name="Where" /> es <b>xlLocationAsObject</b> o el nombre de la nueva hoja si <paramref name="Where" /> es <b>xlLocationAsNewSheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-545">The name of the sheet where the chart will be embedded if <paramref name="Where" /> is <b>xlLocationAsObject</b> or the name of the new sheet if <paramref name="Where" /> is <b>xlLocationAsNewSheet</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-546">Desplaza el gráfico a otro lugar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-546">Moves the chart to a new location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-547">Representa un encabezado de correo electrónico de un documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-547">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="47bc1-548">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-548">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-549">La hoja antes de la cual se colocará la hoja que se ha movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-549">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="47bc1-550">No puede especificar <paramref name="Before" /> si especifica <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-550">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="47bc1-551">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-552">La hoja después de la cual se colocará la hoja que se ha movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-552">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="47bc1-553">No puede especificar <paramref name="After" /> si especifica <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-553">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-554">Desplaza la hoja a otro lugar del libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-554">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-555">Si no se especifica cualquiera <paramref name="Before" /> o <paramref name="After" />, Microsoft Excel crea un nuevo libro que contiene la hoja que se ha movido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-555">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-556">Devuelve o establece el nombre del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-556">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-557">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa la hoja o celda siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-557">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the next sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-558">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-559">Nombre o número del objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-559">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-560">Devuelve un objeto object que representa un único objeto OLE (un <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) o una colección de todos los objetos OLE (un <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> colección) en el gráfico o la hoja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-560">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-561">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-561">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-562">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-562">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-563">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-563">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-564">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-564">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-565">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-565">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-566">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object que contiene todos los ajustes de configuración de página para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-566">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-567">Devuelve el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-567">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="47bc1-568">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-568">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-569">Especifica la información del gráfico para pegar si hay un gráfico en el Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-569">Specifies the chart information to paste if a chart is on the Clipboard.</span>
          </span>
          <span data-ttu-id="47bc1-570">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constantes: <b>xlFormats</b>, <b>xlFormulas</b>o <b>xlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-570">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <b>xlFormats</b>, <b>xlFormulas</b>, or <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="47bc1-571">El valor predeterminado es <b>xlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-571">The default value is <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="47bc1-572">Si no hay datos que no sea un gráfico en el Portapapeles, no se puede usar este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-572">If there’s data other than a chart on the Clipboard, this argument cannot be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-573">Pega los datos de gráfico que contiene el Portapapeles en el gráfico indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-573">Pastes chart data from the Clipboard into the specified chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-574">Este método cambia la selección actual.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-574">This method changes the current selection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-575">Devuelve o establece la perspectiva de la vista del gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-575">Returns or sets the perspective for the 3-D chart view.</span>
          </span>
          <span data-ttu-id="47bc1-576">Debe estar comprendido entre 0 y 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-576">Must be between 0 and 100.</span>
          </span>
          <span data-ttu-id="47bc1-577">Esta propiedad se omite si la <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propiedad es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-577">This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-578">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-578">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Pie3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pie3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Pie3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-579">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos circulares en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-579">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-580">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-580">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-581">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-581">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-582">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos circulares único (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos circulares (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-582">On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PivotLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotLayout As PivotLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLayout ^ PivotLayout { Microsoft::Office::Interop::Excel::PivotLayout ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-583">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object que representa la ubicación de los campos en un informe de tabla dinámica y la colocación de los ejes en un informe de gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-583">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-584">Si el gráfico especificado no es un informe de gráfico dinámico, el valor de esta propiedad será <b>Nothing</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-584">If the chart you specify isn’t a PivotChart report, the value of this property is <b>Nothing</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotArea As PlotArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PlotArea ^ PlotArea { Microsoft::Office::Interop::Excel::PlotArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-585">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object que representa el área de trazado de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-585">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotBy" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotBy As XlRowCol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRowCol PlotBy { Microsoft::Office::Interop::Excel::XlRowCol get(); void set(Microsoft::Office::Interop::Excel::XlRowCol value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-586">Devuelve o establece la forma en que se utilizan las columnas o filas como series de datos en el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-586">Returns or sets the way columns or rows are used as data series on the chart.</span>
          </span>
          <span data-ttu-id="47bc1-587">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlColumns</b> o <b>xlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-587">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
          <span data-ttu-id="47bc1-588">Para los informes de gráfico dinámico, esta propiedad es de sólo lectura y siempre devuelve <b>xlColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-588">For PivotChart reports, this property is read-only and always returns <b>xlColumns</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotVisibleOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotVisibleOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PlotVisibleOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-589">
            <b>True</b> si sólo se trazan las celdas visibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-589">
              <b>True</b> if only visible cells are plotted.</span>
          </span>
          <span data-ttu-id="47bc1-590">
            <b>False</b> si se trazan las celdas visibles como ocultas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-590">
              <b>False</b> if both visible and hidden cells are plotted.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-591">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa la hoja o celda anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-591">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the previous sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-592">Obtiene el número de páginas de comentarios que se imprimirán para el gráfico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-592">Gets the number of comment pages that will be printed for the current chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-593">El número de páginas de comentarios que se imprimirán para el gráfico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-593">The number of comment pages that will be printed for the current chart.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-594">Solo lectura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-594">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-595">Debido a que los gráficos y hojas de gráficos no admiten comentarios, la <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> objeto siempre devolverá cero.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-595">Because charts and chart sheets do not support comments, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> object will always return zero.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="47bc1-596">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-596">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-597">El número de la página en la que se va a iniciar la impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-597">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="47bc1-598">Si se omite este argumento, la impresión comienza al principio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-598">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="47bc1-599">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-599">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-600">El número de la última página a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-600">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="47bc1-601">Si se omite este argumento, la impresión finaliza con la última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-601">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="47bc1-602">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-603">El número de copias que se va a imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-603">The number of copies to print.</span>
          </span>
          <span data-ttu-id="47bc1-604">Si se omite este argumento, se imprime una copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-604">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="47bc1-605">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-605">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-606">
            <b>True</b> para que Microsoft Excel invoque la vista preliminar antes de imprimir el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-606">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="47bc1-607">
            <b>False</b> (o se omite) para imprimir el objeto inmediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-607">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="47bc1-608">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-609">Establece el nombre de la impresora activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-609">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="47bc1-610">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-610">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-611">
            <b>True</b> para imprimir en un archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-611">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="47bc1-612">Si <paramref name="PrToFileName" /> no se especifica, Microsoft Excel solicita al usuario que escriba el nombre del archivo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-612">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="47bc1-613">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-614">
            <b>True</b> para intercalar múltiples copias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-614">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="47bc1-615">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-615">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-616">Si <paramref name="PrintToFile" /> está establecida en <b>True</b>, este argumento especifica el nombre del archivo que desea imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-616">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-617">Imprime el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-617">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-618">"Páginas" en las descripciones de <paramref name="From" /> y <paramref name="To" /> hace referencia a las páginas impresas, no total de páginas de la hoja o libro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-618">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages— not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-619">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-619">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="47bc1-620">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-620">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-621">
            <b>True</b> para habilitar los cambios realizados en el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-621">
              <b>True</b> to enable changes to the chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-622">Muestra una vista preliminar del objeto tal como aparecería impreso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-622">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="47bc1-623">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-623">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-624">Una cadena que especifica una contraseña entre mayúsculas y minúsculas para la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-624">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="47bc1-625">Si se omite este argumento, puede desproteger la hoja de cálculo o el libro sin utilizar una contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-625">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="47bc1-626">De lo contrario, debe especificar la contraseña para desproteger la hoja de cálculo o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-626">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="47bc1-627">Si olvida la contraseña, no puede desproteger la hoja de cálculo o el libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-627">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="47bc1-628">Es una buena idea para mantener una lista de las contraseñas y sus nombres de documento correspondientes en un lugar seguro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-628">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="47bc1-629">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-629">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-630">
            <b>True</b> para proteger las formas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-630">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="47bc1-631">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-631">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="47bc1-632">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-632">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-633">
            <b>True</b> para proteger el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-633">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="47bc1-634">Para obtener un gráfico, esto protege todo el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-634">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="47bc1-635">Para una hoja de cálculo, protege las celdas bloqueadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-635">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="47bc1-636">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-636">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="47bc1-637">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-637">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-638">
            <b>True</b> para proteger los escenarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-638">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="47bc1-639">Este argumento sólo es válido para las hojas de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-639">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="47bc1-640">El valor predeterminado es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-640">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="47bc1-641">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-642">
            <b>True</b> para proteger la interfaz de usuario, pero no las macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-642">
              <b>True</b> to protect the user interface, but not macros.</span>
          </span>
          <span data-ttu-id="47bc1-643">Si se omite este argumento, la protección se aplica tanto a las macros como a la interfaz de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-643">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-644">Protege un gráfico para que no se pueda modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-644">Protects a chart so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p224">[!NOTA] Use contraseñas seguras que combinen letras mayúsculas y minúsculas, números y símbolos. Las contraseñas que no son seguras no contienen una combinación de estos elementos. Contraseña segura: Y6dh!et5. Contraseña no segura: House27. Use una contraseña segura que pueda recordar para no tener que anotarla.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p224">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-650">
            <b>True</b> si el contenido de la hoja está protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-650">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="47bc1-651">Esto protege todo el gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-651">This protects the entire chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectData" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-652">
            <b>True</b> si el usuario no puede modificar las fórmulas de series.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-652">
              <b>True</b> if series formulas cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-653">
            <b>True</b> si las formas están protegidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-653">
              <b>True</b> if shapes are protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-654">
            <b>True</b> si el formato del gráfico no se puede modificar el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-654">
              <b>True</b> if chart formatting cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-655">Cuando esta propiedad es <b>True</b>, el comando objeto en el menú Formato está deshabilitado y no se pueden ser agregados, mover, cambia el tamaño o eliminar los elementos del gráfico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-655">When this property is <b>True</b>, the Object command on the Format menu is disabled and chart elements cannot be added, moved, resized, or deleted.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectGoalSeek" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectGoalSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectGoalSeek { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-656">
            <b>True</b> si el usuario no puede modificar los datos del gráfico los puntos con acciones del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-656">
              <b>True</b> if the user cannot modify chart data points with mouse actions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-657">
            <b>True</b> si se activa la protección de sólo interfaz de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-657">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="47bc1-658">Para activar la protección de la interfaz de usuario, use la <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> método con el <paramref name="UserInterfaceOnly" /> argumento se establece en <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-658">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-659">
            <b>True</b> si no se pueden seleccionar los elementos del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-659">
              <b>True</b> if chart elements cannot be selected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-660">Si esta propiedad es <b>True</b>, no será posible agregar formas al gráfico ni ocurrirán eventos Click ni DoubleClick en los elementos del gráfico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-660">When this property is <b>True</b>, shapes cannot be added to the chart, and the Click and DoubleClick events for chart elements don’t occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-661">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-661">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-662">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-662">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-663">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos radiales único (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos radiales (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-663">On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-664">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-664">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-665">Actualiza la memoria caché de la <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> o <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-665">Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property RightAngleAxes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RightAngleAxes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-666">
            <b>True</b> si los ejes del gráfico están en ángulo recto, independientemente de la rotación de gráfico o la elevación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-666">
              <b>True</b> if the chart axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
          <span data-ttu-id="47bc1-667">Se aplica sólo a 3D de líneas, columnas y los gráficos de barras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-667">Applies only to 3-D line, column, and bar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-668">Si esta propiedad es <b>True</b>, el <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> propiedad se omite.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-668">If this property is <b>True</b>, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> property is ignored.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Rotation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-669">Devuelve o establece el giro de la vista del gráfico 3D (la rotación del área de trazado alrededor del eje z en grados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-669">Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees).</span>
          </span>
          <span data-ttu-id="47bc1-670">El valor de esta propiedad debe ser entre 0 y 360, excepto para los gráficos de barras 3D, donde el valor debe ser de 0 a 44.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-670">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span>
          </span>
          <span data-ttu-id="47bc1-671">El valor predeterminado es 20.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-671">The default value is 20.</span>
          </span>
          <span data-ttu-id="47bc1-672">Se aplica solamente a gráficos 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-672">Applies only to 3-D charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="47bc1-673">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-673">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-674">Una cadena que indica el nombre del archivo que se guarde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-674">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="47bc1-675">Puede incluir una ruta de acceso completa; Si no lo hace, Microsoft Excel guarda el archivo en la carpeta actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-675">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="47bc1-676">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-676">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-677">El formato de archivo que se utilizará al guardar el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-677">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="47bc1-678">Para obtener una lista de opciones válidas, vea el <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-678">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="47bc1-679">Para un archivo existente, el formato predeterminado es el último formato de archivo especificado; para un nuevo archivo, el valor predeterminado es el formato de la versión de Excel que se utiliza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-679">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="47bc1-680">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-680">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-681">Cadena que distingue entre mayúsculas y minúsculas (no más de 15 caracteres) y que indica que se aplicará la protección con contraseña al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-681">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="47bc1-682">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-682">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-683">Una cadena que indica la contraseña contra escritura de este archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-683">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="47bc1-684">Si se guarda un archivo con la contraseña y la contraseña no se proporciona cuando se abre el archivo, se abre el archivo como de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-684">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="47bc1-685">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-685">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-686">
            <b>True</b> para mostrar un mensaje cuando se abre el archivo en el que se recomienda que el archivo se abra en modo de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-686">
              <b>True</b> to display a message when the file is opened, recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="47bc1-687">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-687">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-688">
            <b>True</b> para crear un archivo de copia de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-688">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="47bc1-689">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-690">
            <b>True</b> para agregar este libro a la lista de archivos utilizados recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-690">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="47bc1-691">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-691">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="47bc1-692">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-692">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-693">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-693">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="47bc1-694">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-695">No se usa en la versión en inglés de EE.UU. de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-695">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="47bc1-696">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-697">
            <b>True</b> guarda los archivos en el idioma de Microsoft Excel (incluyendo la configuración del panel de control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-697">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="47bc1-698">
            <b>False</b> (valor predeterminado) guarda los archivos en el lenguaje de Visual Basic para aplicaciones (que normalmente es inglés de Estados Unidos, a menos que el proyecto VBA donde se ejecuta <b>Workbooks.Open</b> desde un proyecto de VBA XL5/95 internacionalizado anterior).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-698">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where <b>Workbooks.Open</b> is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-699">Guarda los cambios del gráfico o de la hoja de cálculo en un archivo diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-699">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="47bc1-700">Nombre de la plantilla de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-700">The name of the chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-701">Guarda una plantilla de gráfico personalizada en la lista de plantillas de gráfico disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-701">Saves a custom chart template to the list of available chart templates.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p240">De forma predeterminada, este método guarda el gráfico activo en el directorio de plantillas de gráficos del usuario. Si se especifica una dirección UNC o URL, en su lugar el gráfico se guardará en la ubicación especificada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p240">By default, this method saves the active chart to the user's chart template directory.  If a UNC or URL is specified, the chart will be saved to the specified location instead.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-704">Devuelve el <see cref="T:Microsoft.Office.Core.Scripts" /> colección, que contiene <see cref="T:Microsoft.Office.Core.Script" /> objetos que representan bloques de secuencia de comandos o código en el documento especificado cuando se guarda como una página Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-704">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-705">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-705">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="47bc1-706">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-706">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-707">Objeto que se va a reemplazar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-707">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-708">Selecciona el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-708">Selects the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-709">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-709">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-710">Nombre o número de la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-710">The name or number of the series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-711">Devuelve un objeto object que representa una sola serie (un <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objeto) o una colección de todas las series (una <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> colección) en el gráfico o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-711">Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesNameLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SeriesNameLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property SeriesNameLevel As XlSeriesNameLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSeriesNameLevel SeriesNameLevel { Microsoft::Office::Interop::Excel::XlSeriesNameLevel get(); void set(Microsoft::Office::Interop::Excel::XlSeriesNameLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSeriesNameLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-712">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constante hace referencia al nivel de donde se proceden de los nombres de serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-712">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constant referring to the level of where the series names are being sourced from.</span>
          </span>
          <span data-ttu-id="47bc1-713">
            <b>Número entero</b> (<b>int</b> en C#) Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-713">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="47bc1-714">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-714">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="47bc1-715">Nombre del archivo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-715">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-716">Establece el gráfico de fondo para una hoja de cálculo o un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-716">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetDefaultChart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultChart(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="47bc1-717">Especifica el nombre de la plantilla de gráfico predeterminada que se va a usar al crear nuevos gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-717">Specifies the name of the default chart template that will be used when creating new charts.</span>
          </span>
          <span data-ttu-id="47bc1-718">Este nombre puede ser una cadena que designa un gráfico en la Galería para una plantilla definida por el usuario o puede ser una constante especial <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> para especificar una plantilla de gráfico integrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-718">This name can be a string naming a chart in the gallery for a user-defined template or it can be a special constant <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> to specify a built-in chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-719">Especifica el nombre de la plantilla del gráfico que utiliza Microsoft Excel para crear nuevos gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-719">Specifies the name of the  chart template that Microsoft Excel uses when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement([in]valuetype Microsoft.Office.Core.MsoChartElementType Element) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetElement (Element As MsoChartElementType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetElement(Microsoft::Office::Core::MsoChartElementType Element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element">
          <span data-ttu-id="47bc1-720">Especifica el tipo de elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-720">Specifies the chart element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-721">Conjuntos de elementos de gráfico de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-721">Sets chart elements on a chart.</span>
          </span>
          <span data-ttu-id="47bc1-722">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-722">Read/write.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-723">Para gráficos, los siguientes comandos en la ficha Diseño corresponden a la <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> método:</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-723">For charts, the following commands in the Layout tab correspond to the <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> method:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="47bc1-724">Todos los del grupo Etiquetas.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-724">Everything in the Labels group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="47bc1-725">Todos los del grupo Ejes.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-725">Everything in the Axes group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="47bc1-726">Todos los del grupo Análisis.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-726">Everything in the Analysis group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="47bc1-727">Botones Área de trazado, Cuadro Gráfico y Plano inferior del gráfico.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="47bc1-727">PlotArea, Chart Wall, and Chart Floor buttons.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
          <para>
            <span data-ttu-id="47bc1-728">
              <b>MsoChartElementType</b> es una enumeración de constantes que hacen referencia a todos los comandos anteriores.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-728">
                <b>MsoChartElementType</b> is an enumeration of constants that refer to all of the above commands.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData([in]class Microsoft.Office.Interop.Excel.Range Source, [in]object PlotBy) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSourceData (Source As Range, Optional PlotBy As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="47bc1-729">Requiere <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-729">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="47bc1-730">El rango que contiene los datos de origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-730">The range that contains the source data.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="47bc1-731">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-731">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-732">Especifica el modo de trazar los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-732">Specifies the way the data is to be plotted.</span>
          </span>
          <span data-ttu-id="47bc1-733">Puede ser cualquiera de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlColumns</b> o <b>xlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-733">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-734">Establece el rango que contiene los datos de origen del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-734">Sets the source data range for the chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-735">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object que representa todas las formas de la hoja de cálculo u hoja de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-735">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="47bc1-736">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-736">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAllFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAllFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-737">Obtiene o establece si se debe mostrar todos los botones de campo de un gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-737">Gets or sets whether to display all field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-738">
            <b>true</b> si todos los botones en un gráfico dinámico de campo se deben mostrar; en caso contrario, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-738">
              <b>true</b> if all field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-739">Lectura y escritura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-739">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-740">Establecer el <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> propiedad en <b>true</b> para mostrar todos los botones de campo del gráfico dinámico especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-740">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property to <b>true</b> to display all field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="47bc1-741">Establezca la propiedad en <b>false</b> para ocultar todos los botones de campo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-741">Set the property to <b>false</b> to hide all field buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-742">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> propiedad se corresponde con el comando Ocultar todo en la lista desplegable de botones de campo de la ficha analizar, que está disponible cuando se selecciona un gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-742">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property corresponds to the Hide All command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAxisFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAxisFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-743">Obtiene o establece si se debe mostrar botones de campo del eje de un gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-743">Gets or sets whether to display axis field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-744">
            <b>true</b> si los botones de campo del eje de un gráfico dinámico se deben mostrar; en caso contrario, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-744">
              <b>true</b> if axis field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-745">Lectura y escritura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-745">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-746">Establecer el <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> propiedad en <b>true</b> para mostrar botones de campo del eje del gráfico dinámico especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-746">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property to <b>true</b> to display axis field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="47bc1-747">Establezca la propiedad en <b>false</b> para ocultar los botones.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-747">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-748">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> propiedad se corresponde con el comando Mostrar botones de campo del eje de la lista desplegable de botones de campo de la ficha analizar, que está disponible cuando se selecciona un gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-748">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property corresponds to the Show Axis Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowDataLabelsOverMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDataLabelsOverMaximum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDataLabelsOverMaximum { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-749">Devuelve o establece si se deben mostrar los rótulos de datos cuando el valor es mayor que el valor máximo en el eje de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-749">Returns or sets whether to show the data labels when the value is greater than the  maximum value on the value axis.</span>
          </span>
          <span data-ttu-id="47bc1-750">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-750">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-751">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-751">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p253">Si cambia el eje de valores de tal forma que sea menor que el tamaño de los puntos de datos, puede utilizar esta propiedad para establecer si se deben mostrar los rótulos de datos. Esta propiedad sólo se aplica a gráficos 2D.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p253">If you change the value axis in such a way that it became  smaller than the size of the data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLegendFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLegendFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-754">Obtiene o establece si se debe mostrar botones de campo de leyenda de un gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-754">Gets or sets whether to display legend field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-755">
            <b>true</b> si los botones de campo de leyenda de un gráfico dinámico se deben mostrar; en caso contrario, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-755">
              <b>true</b> if legend field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-756">Lectura y escritura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-756">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-757">Establecer el <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> propiedad en <b>true</b> para mostrar los botones de campo de leyenda del gráfico dinámico especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-757">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property to <b>true</b> to display legend field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="47bc1-758">Establezca la propiedad en <b>false</b> para ocultar los botones.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-758">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-759">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> propiedad se corresponde con el comando Mostrar botones de campo de leyenda en la lista desplegable de botones de campo de la ficha analizar, que está disponible cuando se selecciona un gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-759">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property corresponds to the Show Legend Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReportFilterFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReportFilterFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-760">Obtiene o establece si se debe mostrar los botones de campo de filtro de informe en un gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-760">Gets or sets whether to display the report filter field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-761">
            <b>true</b> si los botones de campo de filtro de informe en un gráfico dinámico se deben mostrar; en caso contrario, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-761">
              <b>true</b> if the report filter field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-762">Lectura y escritura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-762">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-763">Establecer el <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> propiedad en <b>true</b> para mostrar los botones de campo de filtro de informe en el gráfico dinámico especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-763">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property to <b>true</b> to display the Report Filter Field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="47bc1-764">Establezca la propiedad en <b>false</b> para ocultar los botones.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-764">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-765">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> propiedad se corresponde con el comando Mostrar botones de campo de filtro de informe en la lista desplegable de botones de campo de la ficha analizar, que está disponible cuando se selecciona un gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-765">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property corresponds to the Show Report Filter Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValueFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValueFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-766">Obtiene o establece si se debe mostrar los botones de campo de valor de un gráfico dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-766">Gets or sets whether to display the value field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47bc1-767">
            <b>true</b> si el campo de valor los botones en un gráfico dinámico se deben mostrar; en caso contrario, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-767">
              <b>true</b> if the value field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-768">Lectura y escritura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-768">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-769">Establecer el <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> propiedad en <b>true</b> para mostrar los botones de campo de valor en el gráfico dinámico especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-769">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property to <b>true</b> to display the Value Field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="47bc1-770">Establezca la propiedad en <b>false</b> para ocultar el botón.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-770">Set the property to <b>false</b> to hide the button.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="47bc1-771">El <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> propiedad se corresponde con el comando Mostrar botones de campo de valor de la lista desplegable de botones de campo de la ficha analizar, que está disponible cuando se selecciona un gráfico dinámico.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-771">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property corresponds to the Show Value Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="C#" Value="public bool ShowWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-772">
            <b>True</b> si el gráfico incrustado se muestra en una ventana independiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-772">
              <b>True</b> if the embedded chart is displayed in a separate window.</span>
          </span>
          <span data-ttu-id="47bc1-773">El <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto que se utiliza con esta propiedad debe hacer referencia a un gráfico incrustado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-773">The <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object used with this property must refer to an embedded chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SideWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ SideWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-774">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objeto que permite al usuario dar formato por separado al plano lateral de un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the side wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="47bc1-775">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-775">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Walls" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeWithWindow">
      <MemberSignature Language="C#" Value="public bool SizeWithWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeWithWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SizeWithWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeWithWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SizeWithWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-776">
            <b>True</b> si Microsoft Excel cambia el tamaño del gráfico para que coincida con el tamaño de la ventana de la hoja de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-776">
              <b>True</b> if Microsoft Excel resizes the chart to match the size of the chart sheet window.</span>
          </span>
          <span data-ttu-id="47bc1-777">
            <b>False</b> si el tamaño del gráfico no está unido al tamaño de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-777">
              <b>False</b> if the chart size isn't attached to the window size.</span>
          </span>
          <span data-ttu-id="47bc1-778">Sólo se aplica a hojas de gráficos (no se aplica a los gráficos incrustados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-778">Applies only to chart sheets (doesn't apply to embedded charts).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-779">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-779">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SubType" />
      <MemberSignature Language="VB.NET" Value="Public Property SubType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubType { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-780">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-780">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SurfaceGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SurfaceGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ SurfaceGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-781">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa el grupo de gráficos de superficie de un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-781">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-782">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> objeto para un gráfico o una hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-782">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="47bc1-783">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-783">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-784">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-784">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="47bc1-785">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-785">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-786">Una cadena que representa la contraseña distingue mayúsculas de minúsculas a utilizar para desproteger la hoja o libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-786">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="47bc1-787">Si la hoja o el libro no está protegido con una contraseña, se omite este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-787">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="47bc1-788">Si se omite este argumento en una hoja que está protegida con una contraseña, se le pedirá la contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-788">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="47bc1-789">Si se omite este argumento para un libro que está protegido con una contraseña, se produce un error en el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-789">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-p261">Elimina la protección de una hoja o de un libro. Este método no tiene efecto si la hoja o el libro no están protegidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-p261">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-p262">Si olvida la contraseña, no se podrá desproteger la hoja de cálculo ni el libro. Es conveniente guardar en un lugar seguro una lista de las contraseñas y nombres de los documentos correspondientes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-p262">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-794">Determina si el objeto es visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-794">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Walls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Walls As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ Walls { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-795">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objeto que representa los planos laterales de un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="47bc1-796">Esta propiedad no se aplica a los gráficos circulares 3D.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47bc1-796">This property doesn't apply to 3-D pie charts.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.WallsAndGridlines2D" />
      <MemberSignature Language="VB.NET" Value="Public Property WallsAndGridlines2D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WallsAndGridlines2D { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47bc1-797">
            <b>True</b> si se trazan líneas de división en dos dimensiones en un gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-797">
              <b>True</b> if gridlines are drawn two-dimensionally on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XYGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="47bc1-798">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-798">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="47bc1-799">Especifica el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-799">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47bc1-800">En un gráfico 2D, devuelve un objeto object que representa un grupo de gráficos de dispersión único (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) o una colección de los grupos de gráficos de dispersión (un <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47bc1-800">On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>