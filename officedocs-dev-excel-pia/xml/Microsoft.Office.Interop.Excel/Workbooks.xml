<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1de09-101">Una colección de todos los <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objetos que están actualmente abiertos en la aplicación Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1de09-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="1de09-102">Usar el <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> (propiedad) para devolver la colección de <b>libros</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="1de09-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="1de09-103">Usar el <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> (método) para crear un nuevo libro vacío y agregarlo a la colección.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1de09-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="1de09-104">Usar el <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> (método) para abrir un archivo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1de09-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="1de09-105">Para obtener más información acerca del uso de un solo objeto <b>Workbook</b> , vea el <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span>
        <span class="sxs-lookup">
          <span data-stu-id="1de09-105">For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="1de09-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="1de09-107">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>
          <span data-ttu-id="1de09-108">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>
          <span data-ttu-id="1de09-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-109">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">
          <span data-ttu-id="1de09-110">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-111">Determina cómo se crea el nuevo libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-111">Determines how the new workbook is created.</span>
          </span>
          <span data-ttu-id="1de09-112">Si este argumento es una cadena que especifica el nombre de un archivo de Microsoft Excel existente, el nuevo libro se crea con el archivo especificado como una plantilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-112">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span>
          </span>
          <span data-ttu-id="1de09-113">Si este argumento es una constante, el nuevo libro contiene una sola hoja del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-113">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span>
          </span>
          <span data-ttu-id="1de09-114">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constantes: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>o <b>xlWBATWorksheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span>
          </span>
          <span data-ttu-id="1de09-115">Si se omite este argumento, Microsoft Excel crea un libro nuevo con un número de hojas en blanco (la propiedad <b>SheetsInNewWorkbook</b> establece el número de hojas).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-115">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-116">Crea un nuevo libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-116">Creates a new workbook.</span>
          </span>
          <span data-ttu-id="1de09-117">El nuevo libro se convierte en el libro activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-117">The new workbook becomes the active workbook.</span>
          </span>
          <span data-ttu-id="1de09-118">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1de09-119">Si el <paramref name="Template" /> argumento especifica un archivo, el nombre de archivo puede incluir una ruta de acceso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-119">If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1de09-120">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="1de09-121">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-122">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-122">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-123">Nombre del archivo que se desea desproteger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-123">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-p105">
            <b>True</b> si Microsoft Excel puede desproteger un libro específico de un servidor. Valor <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-p105">
              <b>True</b> if Microsoft Excel can check out a specified workbook from a server. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-126">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-126">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-127">Nombre del archivo que se desea desproteger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-127">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-128">Copia el libro especificado de un servidor a un equipo local para su edición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-128">Copies the specified workbook from a server to a local computer for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1de09-129">Cierra el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-129">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="1de09-130">Cerrar un libro mediante el método <b>Close</b> no ejecuta ninguna macro Auto_Close en el libro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-130">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span>
            </span>
            <span data-ttu-id="1de09-131">Usar el <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> (método) para ejecutar las automático cerrar las macros.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-131">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1de09-132">Devuelve el número de objetos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-132">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="1de09-133">
            <b>Integer</b> de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-133">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1de09-134">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-134">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="1de09-135">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="1de09-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="1de09-137">La propiedad <b>Creator</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-137">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="1de09-138">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-138">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="1de09-139">
            <b>Objeto</b>requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-139">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-140">Nombre o número de índice del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-140">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-141">Devuelve un solo objeto de una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-141">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-142">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-142">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-143">El nombre de archivo del libro que se va a abrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-143">The file name of the workbook to be opened.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="1de09-144">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-144">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-145">Especifica que se actualizan los vínculos de la forma en el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-145">Specifies the way links in the file are updated.</span>
          </span>
          <span data-ttu-id="1de09-146">Si se omite este argumento, se pide al usuario para especificar cómo se actualizan los vínculos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-146">If this argument is omitted, the user is prompted to specify how links will be updated.</span>
          </span>
          <span data-ttu-id="1de09-147">De lo contrario, este argumento es uno de los valores enumerados en la siguiente tabla. Si Microsoft Excel se abre un archivo en WKS, WK1 o WK3 formato y el <paramref name="UpdateLinks" /> argumento es 2, Microsoft Excel genera gráficos a partir de los gráficos adjuntos al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-147">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span>
          </span>
          <span data-ttu-id="1de09-148">Si el argumento es 0, no se crean gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-148">If the argument is 0, no charts are created.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="1de09-149">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-150">True para abrir el libro en modo de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-150">True to open the workbook in read-only mode.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="1de09-151">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-151">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-152">Si Microsoft Excel está abriendo un archivo de texto, este argumento especifica el carácter delimitador, tal como se muestra en la siguiente tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-152">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1de09-153">Si se omite este argumento, se usa el delimitador actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-153">If this argument is omitted, the current delimiter is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="1de09-154">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-154">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-155">Una cadena que contiene la contraseña requerida para abrir un libro protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-155">A string that contains the password required to open a protected workbook.</span>
          </span>
          <span data-ttu-id="1de09-156">Si se omite este argumento y el libro requiere una contraseña, se pide al usuario la contraseña.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-156">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="1de09-157">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-158">Una cadena que contiene la contraseña requerida para escribir en un libro protegido contra escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-158">A string that contains the password required to write to a write-reserved workbook.</span>
          </span>
          <span data-ttu-id="1de09-159">Si se omite este argumento y el libro requiere una contraseña, se le pedirá al usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-159">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span>
          </span>
        </param>
        <param name="IgnoreReadOnlyRecommended">
          <span data-ttu-id="1de09-160">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-161">
            <b>True</b> para que Microsoft Excel no muestre el mensaje de solo lectura recomendada (si el libro se guardó mediante la opción <b>Recomendado solo lectura</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-161">
              <b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="1de09-162">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-162">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-163">Si el archivo es un archivo de texto, este argumento indica dónde se originó (de modo que las páginas de códigos y carro retorno y avance de línea (CR/LF) se puedan asignar correctamente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-163">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span>
          </span>
          <span data-ttu-id="1de09-164">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes: <b>xlMacintosh</b>, <b>xlWindows</b>o <b>xlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-164">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="1de09-165">Si se omite este argumento, se usa el sistema operativo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-165">If this argument is omitted, the current operating system is used.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="1de09-166">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-166">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-167">Si el archivo es un archivo de texto y el argumento <b>Format</b> es 6, este argumento es una cadena que especifica el carácter que se usará como el delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-167">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span>
          </span>
          <span data-ttu-id="1de09-168">Por ejemplo, use Chr (9) para tabulaciones, use "," para comas, ";" para punto y coma, o utilice un carácter personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-168">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span>
          </span>
          <span data-ttu-id="1de09-169">Se utiliza sólo el primer carácter de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-169">Only the first character of the string is used.</span>
          </span>
        </param>
        <param name="Editable">
          <span data-ttu-id="1de09-170">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-171">Si el archivo es un complemento de Microsoft Excel 4.0, este argumento es <b>True</b> para abrir el complemento para que sea una ventana visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-171">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span>
          </span>
          <span data-ttu-id="1de09-172">Si este argumento es <b>False</b> o se omite, el complemento se abre como oculto, y no se puede hacer visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-172">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span>
          </span>
          <span data-ttu-id="1de09-173">Esta opción no se aplica a los complementos creados en Microsoft Excel 5.0 o posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-173">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span>
          </span>
          <span data-ttu-id="1de09-174">Si el archivo es una plantilla de Excel, use <b>True</b> para abrir la plantilla especificada para su edición o <b>False</b> para abrir un nuevo libro basado en la plantilla especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-174">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span>
          </span>
          <span data-ttu-id="1de09-175">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-175">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="1de09-176">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-177">Si no se puede abrir el archivo en modo de lectura y escritura, este argumento es <b>True</b> para agregar el archivo a la lista de notificación de archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-177">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span>
          </span>
          <span data-ttu-id="1de09-178">Microsoft Excel abra el archivo como de sólo lectura, sondea la lista de notificación de archivos y, a continuación, notificar al usuario cuando el archivo esté disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-178">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span>
          </span>
          <span data-ttu-id="1de09-179">Si este argumento es <b>False</b> o se omite, no se solicita notificación y se producirá un error si se intenta abrir un archivo no disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-179">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span>
          </span>
        </param>
        <param name="Converter">
          <span data-ttu-id="1de09-180">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-180">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-181">El índice del primer convertidor de archivos para probar al abrir el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-181">The index of the first file converter to try when opening the file.</span>
          </span>
          <span data-ttu-id="1de09-182">El convertidor de archivos especificado se intenta en primer lugar; Si este convertidor no reconoce el archivo, se intentan todos los demás convertidores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-182">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span>
          </span>
          <span data-ttu-id="1de09-183">El índice del convertidor está formado por los números de fila de los convertidores que devuelve la <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> (propiedad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-183">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="1de09-184">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-185">
            <b>True</b> para agregar este libro a la lista de archivos utilizados recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-185">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="1de09-186">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-186">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="1de09-187">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-187">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-188">
            <b>True</b> guarda los archivos en el idioma de Microsoft Excel (incluyendo la configuración del panel de control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-188">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="1de09-189">
            <b>False</b> (valor predeterminado) guarda los archivos en el lenguaje de Visual Basic para aplicaciones (VBA) (que normalmente es inglés de Estados Unidos, a menos que el proyecto VBA donde se ejecuta Workbooks.Open desde un proyecto de VBA XL5/95 internacionalizado anterior).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-189">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <param name="CorruptLoad">
          <span data-ttu-id="1de09-190">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-190">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-191">Puede ser una de las siguientes constantes: <b>xlNormalLoad</b>, <b>xlRepairFile</b>y <b>xlExtractData</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-191">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span>
          </span>
          <span data-ttu-id="1de09-192">El comportamiento predeterminado si no se especifica ningún valor es normalmente normal, pero puede ser la carga o seguros para la recuperación si Excel ya ha intentado abrir el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-192">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span>
          </span>
          <span data-ttu-id="1de09-193">El primer intento es normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-193">The first attempt is normal.</span>
          </span>
          <span data-ttu-id="1de09-194">Si Excel deja de funcionar al abrir el archivo, el segundo intento es la carga de prueba de errores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-194">If Excel stops operating while opening the file, the second attempt is safe load.</span>
          </span>
          <span data-ttu-id="1de09-195">Si Excel nuevo deja de funcionar, el siguiente intento es la recuperación de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-195">If Excel again stops operating, the next attempt is data recovery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-196">Abre un libro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-196">Opens a workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1de09-197">De forma predeterminada, las macros están habilitadas al abrir archivos mediante programación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-197">By default, macros are enabled when opening files programmatically.</span>
            </span>
            <span data-ttu-id="1de09-198">Usar el <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> (propiedad) para establecer el modo de seguridad de macro usado al abrir archivos mediante programación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-198">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-199">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-199">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-200">Cadena de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-200">The connection string.</span>
          </span>
        </param>
        <param name="CommandText">
          <span data-ttu-id="1de09-201">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-202">Texto del comando de la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-202">The command text of the query.</span>
          </span>
        </param>
        <param name="CommandType">
          <span data-ttu-id="1de09-203">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-203">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-204">El tipo de comando de la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-204">The command type of the query.</span>
          </span>
          <span data-ttu-id="1de09-205">Están disponibles los siguientes tipos de comandos: de forma predeterminada, SQL y tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-205">The following command types are available: Default, SQL, and Table.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="1de09-206">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-207">El fondo de la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-207">The background of the query.</span>
          </span>
        </param>
        <param name="ImportDataAs">
          <span data-ttu-id="1de09-208">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-208">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-209">Determina el formato de la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-209">Determines the format of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-210">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto que representa una base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-210">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-211">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-211">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-212">Especifica el nombre de archivo del archivo de texto que se debe abrir y redistribuir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-212">Specifies the file name of the text file to be opened and parsed.</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="1de09-213">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-214">Especifica el origen del archivo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-214">Specifies the origin of the text file.</span>
          </span>
          <span data-ttu-id="1de09-215">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes: <b>xlMacintosh</b>, <b>xlWindows</b>o <b>xlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-215">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="1de09-216">Además, esto podría ser un entero que representa el número de página de código de la página de códigos deseada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-216">Additionally, this could be an integer representing the code page number of the desired code page.</span>
          </span>
          <span data-ttu-id="1de09-217">Por ejemplo, "1256" especificaría que la codificación del archivo de texto de origen es árabe (Windows).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-217">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span>
          </span>
          <span data-ttu-id="1de09-218">Si se omite este argumento, el método usa la configuración actual de la opción origen del archivo en el <b>Asistente para importar texto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-218">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span>
          </span>
        </param>
        <param name="StartRow">
          <span data-ttu-id="1de09-219">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-219">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-220">El número de fila en la que se va a iniciar el análisis de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-220">The row number at which to start parsing text.</span>
          </span>
          <span data-ttu-id="1de09-221">El valor predeterminado es 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-221">The default value is 1.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="1de09-222">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-222">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-223">Especifica el formato de columna de los datos en el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-223">Specifies the column format of the data in the file.</span>
          </span>
          <span data-ttu-id="1de09-224">Puede ser uno de los siguientes <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constantes: <b>xlDelimited</b> o <b>xlFixedWidth</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-224">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span>
          </span>
          <span data-ttu-id="1de09-225">Si no se especifica este argumento, Microsoft Excel intenta determinar el formato de columna cuando se abre el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-225">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="1de09-226">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-226">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="1de09-227">Especifica el calificador de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-227">Specifies the text qualifier.</span>
          </span>
          <span data-ttu-id="1de09-228">Puede ser una de estas <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constantes. <b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-228">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="1de09-229">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-230">
            <b>True</b> para que los delimitadores consecutivos se consideran uno solo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-230">
              <b>True</b> to have consecutive delimiters considered one delimiter.</span>
          </span>
          <span data-ttu-id="1de09-231">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-231">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="1de09-232">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-232">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-233">True para que el carácter de tabulación como delimitador (<paramref name="DataType" /> debe ser <b>xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-233">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="1de09-234">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-234">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="1de09-235">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-235">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-236">
            <b>True</b> para que el carácter de punto y coma como delimitador (<paramref name="DataType" /> debe ser <b>xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-236">
              <b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="1de09-237">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-237">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="1de09-238">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-238">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-239">
            <b>True</b> para que el carácter de coma como delimitador (<paramref name="DataType" /> debe ser <b>xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-239">
              <b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="1de09-240">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-240">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="1de09-241">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-241">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-242">
            <b>True</b> para que el carácter espacio como delimitador (<paramref name="DataType" /> debe ser <b>xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-242">
              <b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="1de09-243">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-243">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="1de09-244">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-244">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-245">
            <b>True</b> para que el carácter especificado por el <paramref name="OtherChar" /> argumento como delimitador (<paramref name="DataType" /> debe ser <b>xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-245">
              <b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="1de09-246">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-246">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="1de09-247">Opcional <b>objeto</b> (obligatorio si <paramref name="Other" /> es <b>True</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-247">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="1de09-248">Especifica el delimitador de carácter cuándo <paramref name="Other" /> es <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-248">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="1de09-249">Si hay más de un carácter se especifica, que se utiliza sólo el primer carácter de la cadena; se omiten los caracteres restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="1de09-250">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-250">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          </span>
          <span data-ttu-id="1de09-251">Una matriz que contiene información de análisis para columnas de datos individuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-251">An array containing parse information for individual columns of data.</span>
          </span>
          <span data-ttu-id="1de09-252">La interpretación depende del valor de <paramref name="DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-252">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="1de09-253">Cuando se delimitan los datos, este argumento es una matriz de matrices de dos elementos, con cada matriz de dos elementos que especifica las opciones de conversión para una columna en particular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-253">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="1de09-254">El primer elemento es el número de columna (basado en 1) y el segundo elemento es una de las constantes<b>xlColumnDataType que</b> especifican cómo se analiza la columna. <b>xlGeneralFormat</b> General<b>xlTextFormat</b> texto<b>xlMDYFormat</b> MDA fecha<b>xlDMYFormat</b> DMA fecha<b>xlYMDFormat</b> AMD fecha<b>xlMYDFormat</b> MYD fecha<b>xlDYMFormat</b> DAM fecha<b>xlYDMFormat</b> adm fecha<b>xlEMDFormat</b> fecha EMD <b>xlSkipColumn</b> Skip ColumnYou puede utilizar <b>xlEMDFormat</b> únicamente si ha instalado y seleccionado la compatibilidad con idioma taiwanés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-254">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span>
          </span>
          <span data-ttu-id="1de09-255">La constante <b>xlEMDFormat</b> especifica que se usan las fechas de era taiwanés. Los especificadores de columna pueden estar en cualquier orden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-255">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="1de09-256">Si no hay ningún especificador de columna para una columna en particular en los datos de entrada, la columna se analiza con la configuración General. <b>Notas</b> Si se especifica que una columna se omitirán, debe declarar explícitamente el tipo de todas las columnas restantes o los datos no se analizan correctamente. Si no hay una fecha reconocible en los datos, la celda se formato como una fecha en la hoja de cálculo, incluso si el valor de la columna es General.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-256">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span>
          </span>
          <span data-ttu-id="1de09-257">Además, si se especifica uno de los formatos de fecha anteriores para una columna y los datos no contienen una fecha reconocible, el formato de celda en la hoja de cálculo será General.If el origen de datos tiene columnas de ancho fijo, el primer elemento de cada matriz de dos elementos Especifica la posición del carácter inicial en la columna (como un entero; un carácter 0 (cero) es el primer carácter).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-257">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="1de09-258">El segundo elemento de la matriz de dos elementos especifica la opción de análisis de la columna como un número entre 0 y 9, que se enumeran en la tabla anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="1de09-259">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-259">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-260">Diseño visual del texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-260">The visual layout of the text.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="1de09-261">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-261">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-262">El separador decimal que utiliza Microsoft Excel al reconocer los números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-262">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="1de09-263">El valor predeterminado es la configuración del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-263">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="1de09-264">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-265">Miles separador que utiliza Excel al reconocer los números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-265">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="1de09-266">El valor predeterminado es la configuración del sistema. En la siguiente tabla se muestra los resultados de importar texto a Excel con diferentes opciones de importación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-266">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span>
          </span>
          <span data-ttu-id="1de09-267">Los resultados numéricos se muestran en la columna más a la derecha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-267">Numeric results are displayed in the rightmost column.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="1de09-268">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-268">Optional <b>Object</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="1de09-269">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-269">Optional <b>Object</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-270">Carga y redistribuye un archivo de texto como un libro nuevo con una sola hoja que contiene los datos de archivo de texto redistribuidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-270">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="1de09-271">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-271">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="1de09-272">Nombre del archivo que se desea abrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-272">The name of the file to open.</span>
          </span>
        </param>
        <param name="Stylesheets">
          <span data-ttu-id="1de09-273">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-273">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-274">Un valor único o una matriz de valores que especifiquen qué instrucciones de procesamiento de hoja de estilo de transformación XSL (XSLT) que se debe aplicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-274">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span>
          </span>
        </param>
        <param name="LoadOption">
          <span data-ttu-id="1de09-275">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="1de09-276">Especifica cómo abre Excel el archivo de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-276">Specifies how Excel opens the XML data file.</span>
          </span>
          <span data-ttu-id="1de09-277">Puede ser una de estas <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constantes:<b>xlXmlLoadImportToList</b> coloca el contenido del archivo de datos XML en una lista XML. <b>xlXmlLoadMapXml</b> Muestra el esquema del archivo de datos XML en el panel de tareas <b>Estructura XML</b> . <b>xlXmlLoadOpenXml</b> Se abre el archivo de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-277">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span>
          </span>
          <span data-ttu-id="1de09-278">El contenido del archivo que se van a reducir. <b>xlXmlLoadPromptUser</b> Solicita al usuario que elija cómo abrir el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-278">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1de09-279">Se abre un archivo de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-279">Opens an XML data file.</span>
          </span>
          <span data-ttu-id="1de09-280">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-280">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="1de09-281">Funciones de XML, salvo para guardar archivos en el formato de hoja de cálculo XML, sólo están disponibles en Microsoft Office Professional Edition 2003 y Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1de09-281">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1de09-p153">Devuelve el objeto primario del objeto especificado. Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1de09-p153">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>