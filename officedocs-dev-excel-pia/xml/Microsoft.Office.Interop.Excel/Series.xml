<Type Name="Series" FullName="Microsoft.Office.Interop.Excel.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bf5d873dc8f258078c4b08af2de06bdc1a91315" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20574833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Series" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Series" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Series" />
  <TypeSignature Language="VB.NET" Value="Public Interface Series" />
  <TypeSignature Language="C++ CLI" Value="public interface class Series" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8a37-101">Representa una serie de un gráfico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8a37-101">Represents a series in a chart.</span>
      </span>
      <span data-ttu-id="d8a37-102">El objeto <b>Series</b> es un miembro de la <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> colección.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8a37-102">The <b>Series</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="d8a37-103">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-104">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa la aplicación Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="d8a37-105">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-105">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCustomType(Microsoft::Office::Interop::Excel::XlChartType ChartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="d8a37-106">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-106">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="d8a37-107">Un tipo de gráfico estándar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-107">A standard chart type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-108">Aplica un tipo de gráfico estándar o personalizado a una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-108">Applies a standard or custom chart type to a series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="d8a37-109">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-109">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="d8a37-110">Tipo de etiqueta de datos que se aplica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-110">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="d8a37-111">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-112">
            <b>True</b> para mostrar la clave de leyenda junto al punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-112">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="d8a37-113">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-113">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="d8a37-114">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-115">
            <b>True</b> si el objeto genera automáticamente el texto adecuado basado en el contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-115">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="d8a37-116">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-116">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-117">Para el <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> y <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objetos, <b>True</b> si la serie tiene líneas guía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-117">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="d8a37-118">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-119">El nombre de la serie para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-119">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="d8a37-120">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-121">El nombre de categoría para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="d8a37-122">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-123">El valor del rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="d8a37-124">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-125">El porcentaje para el rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-125">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="d8a37-126">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-127">El tamaño de la burbuja del rótulo de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-127">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="d8a37-128">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-129">Separador de la etiqueta de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-129">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-130">Aplica rótulos de datos a un punto, a una serie o a todas las series de un gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-130">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p114">
            <b>True</b> si una imagen se aplica al final del punto o a todos los puntos de la serie. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p114">
              <b>True</b> if a picture is applied to the end of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p115">
            <b>True</b> si una imagen se aplica a la parte delantera del punto o a todos los puntos de la serie. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p115">
              <b>True</b> if a picture is applied to the front of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p116">
            <b>True</b> si una imagen se aplica a los lados del punto o a todos los puntos de la serie. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p116">
              <b>True</b> if a picture is applied to the sides of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.AxisGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisGroup As XlAxisGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAxisGroup AxisGroup { Microsoft::Office::Interop::Excel::XlAxisGroup get(); void set(Microsoft::Office::Interop::Excel::XlAxisGroup value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAxisGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-137">Devuelve el grupo de la serie o grupo de gráficos especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-137">Returns the group for the specified chart group or series.</span>
          </span>
          <span data-ttu-id="d8a37-138">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-138">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-139">
            <para>Para gráficos 3D, es válido solo <b>xlPrimary</b> .</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-139">
              <para>For 3-D charts, only <b>xlPrimary</b> is valid.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-140">Devuelve o establece la forma utilizada con el gráfico de columnas o de barras 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-140">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
          <span data-ttu-id="d8a37-141">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-141">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-142">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object que representa el borde del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-142">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleSizes">
      <MemberSignature Language="C#" Value="public object BubbleSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BubbleSizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BubbleSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleSizes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BubbleSizes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-143">Devuelve o establece un valor de tipo string que hace referencia a las celdas de la hoja de cálculo que contiene los datos de tamaño del gráfico de burbujas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-143">Returns or sets a string that refers to the worksheet cells containing the size data for the bubble chart.</span>
          </span>
          <span data-ttu-id="d8a37-144">Se aplica sólo a los gráficos de burbujas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-144">Applies only to bubble charts.</span>
          </span>
          <span data-ttu-id="d8a37-145">Lectura/Escritura <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-145">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-146">
            <para>Cuando se devuelve la referencia de celda, devolverá una cadena que describe las celdas en notación de estilo A1. Para establecer el tamaño de datos del gráfico de burbujas, debe usar la notación de estilo R1.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-146">
              <para>When you return the cell reference, it will return a string describing the cells in A1-style notation. To set the size data for the bubble chart, you must use R1-style notation.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-147">Devuelve o establece el tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-147">Returns or sets the chart type.</span>
          </span>
          <span data-ttu-id="d8a37-148">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-148">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-149">
            <para>Algunos tipos de gráficos no están disponibles para informes de gráfico dinámico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-149">
              <para>Some chart types aren’t available for PivotChart reports.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-150">Borra el formato del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-150">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-151">Copia el objeto al Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-151">Copies the object to the Clipboard.</span>
          </span>
          <span data-ttu-id="d8a37-152">Copia una imagen del punto o la serie en el Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-152">Copies a picture of the point or series to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-153">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-153">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="d8a37-154">Si el objeto se creó en Microsoft Excel, esta propiedad devuelve la cadena XCEL, que es equivalente al número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-154">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="d8a37-155">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-155">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-156">Propiedad de <para>el <b>creador</b> está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-156">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabels">
      <MemberSignature Language="C#" Value="public object DataLabels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataLabels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataLabels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d8a37-157">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-158">Número de la etiqueta de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-158">The number of the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-159">Devuelve un objeto object que representa un único rótulo de datos (un <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> objeto) o una colección de todos los rótulos de datos para la serie (un <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-159">Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="d8a37-160">
            <para>Si la serie tiene la opción de <b>Mostrar valor</b> activada para los rótulos de datos, la colección devuelta puede contener hasta un rótulo por cada punto. Las etiquetas de datos pueden ser activadas o desactivado para puntos individuales de la serie.</para>
            <para>Si la serie está en un gráfico de áreas y tiene activada la opción <b>Mostrar rótulo</b> para los rótulos de datos, la colección devuelta contiene sólo un rótulo, que es la etiqueta de la serie de área.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-160">
              <para>If the series has the <b>Show Value</b> option turned on for the data labels, the returned collection can contain up to one label for each point. Data labels can be turned on or off for individual points in the series.</para>
              <para>If the series is on an area chart and has the <b>Show Label</b> option turned on for the data labels, the returned collection contains only a single label, which is the label for the area series.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-161">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-161">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="d8a37-162">
            <para>Al eliminar un objeto <b>Point</b> o <b>LegendKey</b> elimina toda la serie.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-162">
              <para>Deleting a <b>Point</b> or <b>LegendKey</b> object deletes the entire series.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBar">
      <MemberSignature Language="C#" Value="public object ErrorBar (Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, Microsoft.Office.Interop.Excel.XlErrorBarType Type, object Amount, object MinusValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ErrorBar([in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarType Type, [in]object Amount, [in]object MinusValues) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorBar (Direction As XlErrorBarDirection, Include As XlErrorBarInclude, Type As XlErrorBarType, Optional Amount As Object, Optional MinusValues As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlErrorBarDirection" />
        <Parameter Name="Include" Type="Microsoft.Office.Interop.Excel.XlErrorBarInclude" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlErrorBarType" />
        <Parameter Name="Amount" Type="System.Object" />
        <Parameter Name="MinusValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="d8a37-163">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-163">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          </span>
          <span data-ttu-id="d8a37-164">Dirección de las barras de error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-164">The error bar direction.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="d8a37-165">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-165">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          </span>
          <span data-ttu-id="d8a37-166">Partes de las barras de error que se han de incluir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-166">The error bar parts to include.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="d8a37-167">Requiere <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-167">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          </span>
          <span data-ttu-id="d8a37-168">Tipo de las barras de error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-168">The error bar type.</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="d8a37-169">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-169">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-170">La cuantía de error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-170">The error amount.</span>
          </span>
          <span data-ttu-id="d8a37-171">Usado para cuantías de error positivas cuando <paramref name="Type" /> es <b>xlErrorBarTypeCustom</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-171">Used for only the positive error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <param name="MinusValues">
          <span data-ttu-id="d8a37-172">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-172">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-173">La cuantía de error negativa cuando <paramref name="Type" /> es <b>xlErrorBarTypeCustom</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-173">The negative error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-174">Aplica barras de error a la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-174">Applies error bars to the series.</span>
          </span>
          <span data-ttu-id="d8a37-175">
            <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-175">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorBars ErrorBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorBars ErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorBars As ErrorBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorBars ^ ErrorBars { Microsoft::Office::Interop::Excel::ErrorBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-176">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object que representa las barras de error para la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-176">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object that represents the error bars for the series.</span>
          </span>
          <span data-ttu-id="d8a37-177">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-177">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-178">Devuelve o establece el valor de expansión de un sector del gráfico circular o gráfico de anillos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-178">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span>
          </span>
          <span data-ttu-id="d8a37-179">Devuelve 0 (cero) si no hay ninguna expansión (el vértice del sector está en el centro del círculo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-179">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span>
          </span>
          <span data-ttu-id="d8a37-180">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-180">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-181">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objeto que contiene las propiedades de la forma o el gráfico especificado del formato de relleno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-181">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="d8a37-182">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-182">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-183">Devuelve el <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-183">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="d8a37-184">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-184">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-185">Devuelve o establece la fórmula del objeto en notación de estilo A1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-185">Returns or sets the object's formula in A1-style notation.</span>
          </span>
          <span data-ttu-id="d8a37-186">
            <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-186">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-187">
            <para>Esta propiedad no está disponible para orígenes de datos OLAP.</para>
            <para>Si la celda contiene una constante, esta propiedad devuelve la constante. Si la celda está vacía, esta propiedad <b>Formula</b> devuelve una cadena vacía. Si la celda contiene una fórmula, la propiedad <b>Formula</b> devuelve la fórmula como una cadena en el mismo formato que se mostrará en la barra de fórmulas (incluido el signo igual).</para>
            <para>Si se establece el valor o la fórmula de una celda en una fecha, Microsoft Excel comprueba si esa celda ya tiene el formato con uno de los formatos numéricos de fecha u hora. Si no, Microsoft Excel cambia el formato de número para el formato de número predeterminado de fecha corta.</para>
            <para>Si el rango tiene una o dos dimensiones, puede establecer la fórmula en una matriz de Visual Basic de las mismas dimensiones. De forma similar, puede colocar la fórmula en una matriz de Visual Basic.</para>
            <para>Establecer la fórmula para un rango de varias celdas rellena todas las celdas del rango con la fórmula.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-187">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public string FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-188">Devuelve o establece la fórmula del objeto mediante referencias de estilo A1 en el idioma del usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-188">Returns or sets the formula for the object using A1-style references in the language of the user.</span>
          </span>
          <span data-ttu-id="d8a37-189">
            <b>Cadena</b> de lectura y escritura</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-189">Read/write <b>String</b></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-190">
            <para>Si la celda contiene una constante, esta propiedad devuelve esa constante. Si la celda está vacía, la propiedad devuelve una cadena vacía. Si la celda contiene una fórmula, la propiedad devuelve la fórmula como una cadena, en el mismo formato en el que se mostraría en la barra de fórmulas (incluido el signo igual).</para>
            <para>Si se establece el valor o la fórmula de una celda en una fecha, Microsoft Excel comprueba si esa celda ya tiene el formato con uno de los formatos numéricos de fecha u hora. Si no, se cambia el formato de número para el formato de número predeterminado de fecha corta.</para>
            <para>Si el rango tiene una o dos dimensiones, puede establecer la fórmula en una matriz de Visual Basic de las mismas dimensiones. De forma similar, puede colocar la fórmula en una matriz de Visual Basic.</para>
            <para>Si define la fórmula de un rango de varias celdas rellena todas las celdas del rango con la fórmula.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-190">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public string FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-191">Devuelve o establece la fórmula para el objeto mediante la notación de estilo F1C1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-191">Returns or sets the formula for the object using R1C1-style notation.</span>
          </span>
          <span data-ttu-id="d8a37-192">
            <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-192">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-193">
            <para>Si la celda contiene una constante, esta propiedad devuelve la constante. Si la celda está vacía, la propiedad devuelve una cadena vacía. Si la celda contiene una fórmula, la propiedad devuelve la fórmula como una cadena, en el mismo formato en el que se mostraría en la barra de fórmulas (incluido el signo igual).</para>
            <para>Si se establece el valor o la fórmula de una celda en una fecha, Microsoft Excel comprueba si esa celda ya tiene el formato con uno de los formatos numéricos de fecha u hora. Si no, se cambia el formato de número para el formato de número predeterminado de fecha corta.</para>
            <para>Si el rango tiene una o dos dimensiones, puede establecer la fórmula en una matriz de Visual Basic de las mismas dimensiones. De forma similar, puede colocar la fórmula en una matriz de Visual Basic.</para>
            <para>Si define la fórmula de un rango de varias celdas rellena todas las celdas del rango con la fórmula.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-193">
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public string FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1Local { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p137">Devuelve o establece la fórmula para el objeto, mediante la notación de estilo F1C1 en el idioma del usuario. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p137">Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-196">
            <para>Si la celda contiene una constante, esta propiedad devuelve esa constante. Si la celda está vacía, la propiedad devuelve una cadena vacía. Si la celda contiene una fórmula, la propiedad devuelve la fórmula como una cadena, en el mismo formato en el que se mostraría en la barra de fórmulas (incluido el signo igual).</para>
            <para>Si se establece el valor o la fórmula de una celda en una fecha, Microsoft Excel comprueba si esa celda ya tiene el formato con uno de los formatos numéricos de fecha u hora. Si no, se cambia el formato de número para el formato de número predeterminado de fecha corta.</para>
            <para>Si el rango tiene una o dos dimensiones, puede establecer la fórmula en una matriz de Visual Basic de las mismas dimensiones. De forma similar, puede colocar la fórmula en una matriz de Visual Basic.</para>
            <para>Si define la fórmula de un rango de varias celdas rellena todas las celdas del rango con la fórmula.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-196">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p138">
            <b>True</b> si la serie tiene aspecto tridimensional. Sólo se aplica a gráficos de burbujas. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p138">
              <b>True</b> if the series has a three-dimensional appearance. Applies only to bubble charts. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabels">
      <MemberSignature Language="C#" Value="public bool HasDataLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasDataLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p139">
            <b>True</b> si la serie tiene etiqueta de datos. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p139">
              <b>True</b> if the series has data labels. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrorBars">
      <MemberSignature Language="C#" Value="public bool HasErrorBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public Property HasErrorBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrorBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-202">
            <b>True</b> si la serie tiene barras de error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-202">
              <b>True</b> if the series has error bars.</span>
          </span>
          <span data-ttu-id="d8a37-203">Esta propiedad no está disponible para gráficos 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-203">This property isn’t available for 3-D charts.</span>
          </span>
          <span data-ttu-id="d8a37-204">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-204">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLeaderLines">
      <MemberSignature Language="C#" Value="public bool HasLeaderLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasLeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLeaderLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLeaderLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p141">
            <b>True</b> si la serie tiene líneas guía. <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p141">
              <b>True</b> if the series has leader lines. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-207">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object que representa el interior del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-207">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColor">
      <MemberSignature Language="C#" Value="public int InvertColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-208">Obtiene o establece el color de relleno para los puntos de datos negativos en una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-208">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8a37-209">El color de relleno para los puntos de datos negativos de una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-209">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="d8a37-210">
            <para>Lectura y escritura.</para>
            <para>El <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> (propiedad) le permite establecer el color de relleno para los puntos de datos negativos como numérico específico, hexadecimal, octal o valor de color RGB. Para establecer el valor como un valor RBG, use la función de Visual Basic <b>RGB</b> . En lugar de usar el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> (propiedad), puede usar el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> (propiedad), que usa un conjunto de valores enteros desde la paleta de colores actual más sencillas.</para>
            <para>Para el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />propiedad surta efecto, la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objeto también debe establecerse en <b>true</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-210">
              <para>Read/write.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property enables you to set the fill color for negative data points as a specific numeric, hexadecimal, octal, or RGB color value. To set the value as an RBG value, use the Visual Basic <b>RGB</b> function. Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, which uses a simpler set of integer values from the current color palette.</para>
              <para>For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColorIndex">
      <MemberSignature Language="C#" Value="public int InvertColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColorIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-211">Obtiene o establece el color de relleno para los puntos de datos negativos en una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-211">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8a37-212">El color de relleno para los puntos de datos negativos de una serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-212">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="d8a37-213">
            <para>Lectura y escritura.</para>
            <para>El <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> (propiedad) le permite establecer el color de relleno para los puntos de datos negativos como un valor de índice de color desde 0 a 56. En lugar de usar el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> (propiedad), puede usar el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> (propiedad), que le permite establecer el color como específico numérico, valor hexadecimal, octal, o el valor de color RGB.</para>
            <para>Para el <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> propiedad surta efecto, la <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objeto también debe establecerse en <b>true</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-213">
              <para>Read/write.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property enables you to set the fill color for negative data points as a color index value from 0 to 56. Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, which enables you to set the color as a specific numeric, hexadecimal, octal, or RGB color value.</para>
              <para>For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p142">Es <b>True</b> si Microsoft Excel invierte el diseño del elemento cuando éste corresponde a un número negativo. Valor <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p142">
              <b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFiltered">
      <MemberSignature Language="C#" Value="public bool IsFiltered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFiltered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.IsFiltered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFiltered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFiltered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-216">Esta configuración controla si la serie se ha filtrado del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-216">This setting controls whether the series has been filtered out from the chart.</span>
          </span>
          <span data-ttu-id="d8a37-217">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-217">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="d8a37-218">
            <b>Boolean</b> (<b>bool</b> en C#) Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-218">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-219">
            <para>Cuando un usuario filtra una serie, la serie de modificadores de la propiedad <b>IsFiltered</b> en <b>True</b>y la serie se transfiere fuera de su elemento primario <b>SeriesCollection</b>. Sin embargo, esa serie sigue aún en su elemento primario <b>FullSeriesCollection</b>. Al realizar una copia de la serie en un filtros del usuario, se inserta en su lugar original en el <b>SeriesCollection</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-219">
              <para>When a user filters out a series, the series <b>IsFiltered</b> property switches to <b>True</b>, and the series is transferred out of its parent <b>SeriesCollection</b>. However, that series still remains in its parent <b>FullSeriesCollection</b>. When a user filters the series back in, it is inserted back in its original place in the <b>SeriesCollection</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaderLines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LeaderLines LeaderLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LeaderLines LeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.LeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaderLines As LeaderLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LeaderLines ^ LeaderLines { Microsoft::Office::Interop::Excel::LeaderLines ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LeaderLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p144">Devuelve un objeto <b>LeaderLines</b> que representa las líneas guía de la serie. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p144">Returns a <b>LeaderLines</b> object that represents the leader lines for the series. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-222">Devuelve o establece el color de fondo del marcador como un valor RGB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-222">Returns or sets the marker background color as an RGB value.</span>
          </span>
          <span data-ttu-id="d8a37-223">Se aplica solamente a gráficos de líneas, dispersión y radiales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-223">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="d8a37-224">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-224">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-225">Devuelve o establece el color de fondo del marcador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-225">Returns or sets the marker background color.</span>
          </span>
          <span data-ttu-id="d8a37-226">Se aplica solamente a gráficos de líneas, dispersión y radiales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-226">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="d8a37-227">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-227">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-228">Devuelve o establece el color de primer plano del marcador como un valor RGB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-228">Returns or sets the foreground color of the marker as an RGB value.</span>
          </span>
          <span data-ttu-id="d8a37-229">Se aplica solamente a gráficos de líneas, dispersión y radiales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-229">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="d8a37-230">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-230">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-231">Devuelve o establece el color de primer plano del marcador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-231">Returns or sets the marker foreground color.</span>
          </span>
          <span data-ttu-id="d8a37-232">Se aplica solamente a gráficos de líneas, dispersión y radiales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-232">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="d8a37-233">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-233">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-234">Devuelve o establece el tamaño del marcador de datos en puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-234">Returns or sets the data-marker size in points.</span>
          </span>
          <span data-ttu-id="d8a37-235">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-235">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-236">Devuelve o establece el estilo del marcador de un punto o una serie en un gráfico de líneas, de dispersión o radial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-236">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span>
          </span>
          <span data-ttu-id="d8a37-237">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-237">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p151">Devuelve o establece el nombre del objeto. <b>String</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p151">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-240">
            <para>La siguiente tabla muestran valores de ejemplo de la propiedad <b>Name</b> y las propiedades relacionadas dados un origen de datos OLAP con el nombre único "[Europe]. [France]. [Paris] "y el nombre de un origen de datos no OLAP con el elemento"Paris".</para>
            <list type="table">
              <item>
                <term>
                  <b>Título</b>
                </term>
                <description>París</description>
                <description>París</description>
              </item>
              <item>
                <term>
                  <b>nombre</b>
                </term>
                <description>[Europe]. [ Francia]. [Paris] (solo lectura)</description>
                <description>París</description>
              </item>
              <item>
                <term>
                  <b>SourceName</b>
                </term>
                <description>[Europe]. [ Francia]. [Paris] (solo lectura)</description>
                <description>(Igual que el valor de la propiedad SQL, sólo lectura)</description>
              </item> El 
              <term><b>valor</b></term>de 
            <item><description>[Europe]. [ Francia]. [Paris] (solo lectura)</description><description>París</description></item></list>
            <para>Cuando se especifica un índice en la <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> colección, puede usar la sintaxis que se muestra en la siguiente tabla.</para> expresión de 
          <list type="table"><item><term>. PivotItems ("[Europe]. [ Francia]. [Paris] ")</term><description>expresión. PivotItems("Paris")</description></item></list><para>cuando se usa el <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> (propiedad) a un miembro específico de una colección de referencia, puede usar el nombre de índice de texto, tal como se muestra en la siguiente tabla.</para><list type="table"><item><term>[Europe]. [ Francia]. [Paris]</term><description>París</description></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-240">
              <para>The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>
                    <b>Caption</b>
                  </term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>Name</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>SourceName</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>
                    <b>Value</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p152">Devuelve el objeto primario correspondiente al objeto especificado. Sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p152">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-243">Pega una imagen del Portapapeles como marcador en la serie seleccionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-243">Pastes a picture from the Clipboard as the marker on the selected series.</span>
          </span>
          <span data-ttu-id="d8a37-244">Este método se puede usar en la columna, barra, línea o radiales y establece la <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> propiedad en <b>xlMarkerStylePicture</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-244">This method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-245">Devuelve o establece la manera en que se muestran las imágenes en un gráfico de columnas o de barras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-245">Returns or sets the way pictures are displayed on a column or bar picture chart.</span>
          </span>
          <span data-ttu-id="d8a37-246">Lectura y escritura <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-246">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-247">Devuelve o establece la unidad de cada imagen del gráfico si el <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> propiedad está establecida en <b>xlScale</b> (si no, esta propiedad se omite).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-247">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <b>xlScale</b> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="d8a37-248">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-248">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-249">Devuelve o establece la unidad de cada imagen del gráfico si el <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> propiedad está establecida en <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (si no, esta propiedad se omite).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-249">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="d8a37-250">Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-250">Read/Write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8a37-251">
            <b>Double</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-251">
              <b>Double</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotColorIndex">
      <MemberSignature Language="C#" Value="public int PlotColorIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotColorIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-252">Obtiene un valor de índice que se usa internamente para asociar el formato de una serie con los elementos del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-252">Gets an index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8a37-253">Un valor de índice que se usa internamente para asociar el formato de una serie con los elementos del gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-253">An index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="d8a37-254">
            <para>De sólo lectura.</para>
            <para>Esta propiedad se usa internamente en Excel y no está pensada para ser llamada desde el código.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-254">
              <para>Read-only.</para>
              <para>This property is used internally by Excel and is not intended to be called from your code.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotOrder">
      <MemberSignature Language="C#" Value="public int PlotOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-255">Devuelve o establece el orden de trazado de la serie seleccionada en el grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-255">Returns or sets the plot order for the selected series within the chart group.</span>
          </span>
          <span data-ttu-id="d8a37-256">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-256">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-257">
            <para>Se puede establecer el orden de trazado sólo dentro de un grupo de gráficos (no se puede establecer el orden de trazado para todo el gráfico si tiene más de un tipo de gráfico). Un grupo de gráficos es una colección de series con el mismo tipo de gráfico.</para>
            <para>Cambiar el orden de trazado de una serie de hará que el orden de trazado de las demás series del grupo de gráficos que se puede ajustar según sea necesario.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-257">
              <para>You can set plot order only within a chart group (you cannot set the plot order for the entire chart if you have more than one chart type). A chart group is a collection of series with the same chart type.</para>
              <para>Changing the plot order of one series will cause the plot orders of the other series in the chart group to be adjusted as necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public object Points (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Points([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Points (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d8a37-258">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-258">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-259">El nombre o número del punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-259">The name or number of the point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-260">Devuelve un objeto object que representa un solo punto (un <see cref="T:Microsoft.Office.Interop.Excel.Point" /> objeto) o una colección de todos los puntos (un <see cref="T:Microsoft.Office.Interop.Excel.Points" /> colección) de la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-260">Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) in the series.</span>
          </span>
          <span data-ttu-id="d8a37-261">Solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-261">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-262">Selecciona el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-262">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="d8a37-263">
            <para>Para seleccionar una celda o un rango de celdas, use el método <b>Select</b> . Para hacer que la celda activa de una sola celda, use la <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> método.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-263">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-264">
            <b>True</b> si la fuente es una fuente de sombra o si el objeto tiene una sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-264">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="d8a37-265">
            <b>Boolean</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-265">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smooth">
      <MemberSignature Language="C#" Value="public bool Smooth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Smooth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Smooth" />
      <MemberSignature Language="VB.NET" Value="Public Property Smooth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Smooth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-p161">Es <b>True</b> si el suavizado de curvas está activado para el gráfico de líneas o de dispersión. Se aplica únicamente a los gráficos de líneas y de dispersión. Lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-p161">
              <b>True</b> if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trendlines">
      <MemberSignature Language="C#" Value="public object Trendlines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trendlines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trendlines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d8a37-269">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-269">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="d8a37-270">Nombre o número de la línea de tendencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-270">The name or number of the trendline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a37-271">Devuelve un objeto object que representa una sola línea de tendencia (un <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> objeto) o una colección de todas las líneas de tendencia (un <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> colección) para la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-271">Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) for the series.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-272">Devuelve o establece el tipo de gráfico o serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-272">Returns or sets the chart or series type.</span>
          </span>
          <span data-ttu-id="d8a37-273">
            <b>Integer</b> de lectura y escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-273">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public object Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Values" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Values { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-274">Devuelve o establece una colección de todos los valores de la serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-274">Returns or sets a collection of all the values in the series.</span>
          </span>
          <span data-ttu-id="d8a37-275">Esto puede ser un rango de una hoja de cálculo o una matriz de valores de constante, pero no una combinación de ambos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-275">This can be a range on a worksheet or an array of constant values, but not a combination of both.</span>
          </span>
          <span data-ttu-id="d8a37-276">Lectura/Escritura <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-276">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-277">
            <para>Informes para gráfico dinámico, esta propiedad es de sólo lectura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-277">
              <para>For PivotChart reports, this property is read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValues">
      <MemberSignature Language="C#" Value="public object XValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.XValues" />
      <MemberSignature Language="VB.NET" Value="Public Property XValues As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XValues { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a37-278">Devuelve o establece una matriz de valores para una serie de gráficos de x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-278">Returns or sets an array of x values for a chart series.</span>
          </span>
          <span data-ttu-id="d8a37-279">Se puede establecer la propiedad <b>XValues</b> en un rango de una hoja de cálculo o en una matriz de valores, pero no puede ser una combinación de ambos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-279">The <b>XValues</b> property can be set to a range on a worksheet or to an array of values, but it cannot be a combination of both.</span>
          </span>
          <span data-ttu-id="d8a37-280">Lectura/Escritura <b>Objeto</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-280">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="d8a37-281">
            <para>Informes de gráfico dinámico de para esta propiedad es de sólo lectura.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a37-281">
              <para>For PivotChart reports this property is read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>