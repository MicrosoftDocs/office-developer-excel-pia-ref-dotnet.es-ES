<Type Name="Databar" FullName="Microsoft.Office.Interop.Excel.Databar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5af0ef6023d3a14611c655e4cb96ffc4b3bf17c5" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50005652" /></Metadata><TypeSignature Language="C#" Value="public interface Databar" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Databar" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Databar" />
  <TypeSignature Language="VB.NET" Value="Public Interface Databar" />
  <TypeSignature Language="C++ CLI" Value="public interface class Databar" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024496-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="be15f-p101">Representa una regla de formato condicional de barra de datos. Aplicar una barra de datos a un rango ayuda a ver el valor de una celda en relación con otras celdas.</span><span class="sxs-lookup"><span data-stu-id="be15f-p101">Represents a data bar conditional formating rule. Applying a data bar to a range helps you see the value of a cell relative to other cells.</span></span></summary>
    <remarks><para><span data-ttu-id="be15f-103">Todos los objetos de formato condicional están contenidos dentro de un objeto <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> de colección, que es un elemento secundario de una <see cref="T:Microsoft.Office.Interop.Excel.Range" /> colección.</span><span class="sxs-lookup"><span data-stu-id="be15f-103">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="be15f-104">Puede crear una regla de formato de barra de datos mediante el <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método o el método de la <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> colección.</span><span class="sxs-lookup"><span data-stu-id="be15f-104">You can create a data bar formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span></para>
      <para><span data-ttu-id="be15f-105">Las propiedades y las propiedades del objeto se usan para establecer los valores de la barra más corta y la barra más <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> larga de un rango de <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-105">You use the <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> and <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> properties of the <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object to set the values of the shortest bar and longest bar of a range of data.</span></span> <span data-ttu-id="be15f-106">Estas propiedades devuelven un objeto, en el que puede especificar cómo se evalúan <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> los umbrales.</span><span class="sxs-lookup"><span data-stu-id="be15f-106">These properites return a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object, in which you can specify how the thresholds are evaluated.</span></span></para>
      <para> </para></remarks>
    <example><para><span data-ttu-id="be15f-107">El ejemplo siguiente crea un rango de datos y después aplica una barra de datos al rango.</span><span class="sxs-lookup"><span data-stu-id="be15f-107">The following example creates a range of data and then applies a data bar to the range.</span></span> <span data-ttu-id="be15f-108">Observe que, puesto que hay un valor muy bajo y un valor muy alto en el rango, los valores intermedios tienen barras de datos de un largo similar.</span><span class="sxs-lookup"><span data-stu-id="be15f-108">You will notice that because there is an extremely low and high value in the range, the middle values have data bars that are of similiar length.</span></span> <span data-ttu-id="be15f-109">Para desambiguar los valores intermedios, el código de ejemplo usa el objeto para cambiar la forma en que los umbrales se <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> evalúan a percentiles.</span><span class="sxs-lookup"><span data-stu-id="be15f-109">To disambiguate the middle values, the sample code uses the <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object to change how the thresholds are evaluated to percentiles.</span></span></para></example>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-110">Cuando se usa sin un calificador de objeto, esta propiedad devuelve un  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objeto que representa el Microsoft Office de Excel.</span><span class="sxs-lookup"><span data-stu-id="be15f-110">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="be15f-111">Cuando se utiliza con un calificador de objeto, esta propiedad devuelve un objeto <b>Application</b> que representa al creador del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="be15f-111">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="be15f-112">Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-112">Read-only.</span></span></summary>
        <value><span data-ttu-id="be15f-113"><b>Aplicación</b> (vea más arriba)</span><span class="sxs-lookup"><span data-stu-id="be15f-113"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="be15f-114">Puede utilizar esta propiedad con un objeto de automatización OLE para devolver la aplicación de dicho objeto.</span><span class="sxs-lookup"><span data-stu-id="be15f-114">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-115">Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que especifica el rango de celdas al que se aplica la regla de formato.</span><span class="sxs-lookup"><span data-stu-id="be15f-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisColor">
      <MemberSignature Language="C#" Value="public object AxisColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AxisColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AxisColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AxisColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-116">Obtiene el color del eje de las celdas con formato condicional como barras de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-116">Gets the color of the axis for cells with conditional formatting as data bars.</span></span></summary>
        <value><span data-ttu-id="be15f-117">Color del eje de las celdas con formato condicional como barras de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-117">The color of the axis for cells with conditional formatting as data bars.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-118">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-118">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisPosition">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisPosition As XlDataBarAxisPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarAxisPosition AxisPosition { Microsoft::Office::Interop::Excel::XlDataBarAxisPosition get(); void set(Microsoft::Office::Interop::Excel::XlDataBarAxisPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarAxisPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-119">Obtiene o establece la posición del eje de las barras de datos especificadas por una regla de formato condicional.</span><span class="sxs-lookup"><span data-stu-id="be15f-119">Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.</span></span></summary>
        <value><span data-ttu-id="be15f-120">Posición del eje de las barras de datos especificadas por una regla de formato condicional.</span><span class="sxs-lookup"><span data-stu-id="be15f-120">The position of the axis of the data bars specified by a conditional formatting rule.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-121">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="be15f-121">Read/write.</span></span></para>
          <para><span data-ttu-id="be15f-122">El eje de las barras de datos solo se muestra cuando la propiedad es o , y cuando hay valores negativos en el intervalo de valores especificado con una regla de formato condicional de barra <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> de <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" /> datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-122">The axis for data bars is displayed only when the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is either <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" />, and when there are negative values in the range of values specified with a data bar conditional formatting rule.</span></span> <span data-ttu-id="be15f-123">El valor predeterminado de la <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> propiedad es <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> .</span><span class="sxs-lookup"><span data-stu-id="be15f-123">The default value for the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BarBorder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataBarBorder BarBorder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataBarBorder BarBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarBorder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarBorder As DataBarBorder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataBarBorder ^ BarBorder { Microsoft::Office::Interop::Excel::DataBarBorder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataBarBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-124">Obtiene un objeto que especifica el borde de una barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-124">Gets an object that specifies the border of a data bar.</span></span></summary>
        <value><span data-ttu-id="be15f-125">Objeto que especifica el borde de una barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-125">An object that specifies the border of a data bar.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-126">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-126">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BarColor">
      <MemberSignature Language="C#" Value="public object BarColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BarColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BarColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-127">Devuelve un objeto que puede usar para modificar el color de las barras en un formato condicional <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> de barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to modify the color of the bars in a data bar conditional format.</span></span></summary>
        <value><span data-ttu-id="be15f-128"><b>Objeto</b></span><span class="sxs-lookup"><span data-stu-id="be15f-128"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarFillType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" />
      <MemberSignature Language="VB.NET" Value="Public Property BarFillType As XlDataBarFillType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarFillType BarFillType { Microsoft::Office::Interop::Excel::XlDataBarFillType get(); void set(Microsoft::Office::Interop::Excel::XlDataBarFillType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarFillType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-129">Obtiene o establece cómo se rellena una barra de datos con color.</span><span class="sxs-lookup"><span data-stu-id="be15f-129">Gets or sets how a data bar is filled with color.</span></span></summary>
        <value><span data-ttu-id="be15f-130">Especifica cómo se rellena con color una barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-130">Specifies how a data bar is filled with color.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-131">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="be15f-131">Read/write.</span></span></para>
          <para><span data-ttu-id="be15f-132">El valor predeterminado de la <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> propiedad es <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" /> .</span><span class="sxs-lookup"><span data-stu-id="be15f-132">The default value of the <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-133">Devuelve una constante de la <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeración que indica la aplicación en la que se creó este objeto.</span><span class="sxs-lookup"><span data-stu-id="be15f-133">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="be15f-134">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-134">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="be15f-135">Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="be15f-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="be15f-136">La propiedad está diseñada para usarse en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> caracteres.</span><span class="sxs-lookup"><span data-stu-id="be15f-136">The <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="be15f-137">Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</span><span class="sxs-lookup"><span data-stu-id="be15f-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be15f-138">Elimina el objeto de reglas de formato condicional especificado.</span><span class="sxs-lookup"><span data-stu-id="be15f-138">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public int Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Direction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-139">Obtiene o establece la dirección en la que se muestra la barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-139">Gets or sets the direction the databar is displayed.</span></span></summary>
        <value><span data-ttu-id="be15f-140">Dirección en la que se muestra la barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-140">The direction the databar is displayed.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-141">Lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="be15f-141">Read/write.</span></span></para>
          <para><span data-ttu-id="be15f-142">Puede ser uno de los <see cref="T:Microsoft.Office.Interop.Excel.Constants" /> siguientes: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" /> , <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (de izquierda a derecha) o <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (de derecha a izquierda).</span><span class="sxs-lookup"><span data-stu-id="be15f-142">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.Constants" />: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />, <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (left-to-right), or <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (right-to-left).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-143">Devuelve o establece un valor <b>String</b> que representa una fórmula que determina los valores a los que se aplicará el conjunto de iconos.</span><span class="sxs-lookup"><span data-stu-id="be15f-143">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span></span></summary>
        <value><span data-ttu-id="be15f-144"><b>Cadena</b></span><span class="sxs-lookup"><span data-stu-id="be15f-144"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-p109">Esta propiedad es útil para limitar el rango de valores que mostrará el formato condicional. Un escenario típico es cuando se tiene un rango de números que contiene valores positivos y negativos. Quizás desee crear más de un formato condicional para este rango de números: uno para los valores positivos y otro para los valores negativos.</span><span class="sxs-lookup"><span data-stu-id="be15f-p109">This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MaxPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MaxPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MaxPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-148">Devuelve un objeto que especifica cómo se evalúa la barra más larga <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> para un formato condicional de barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-148">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /></value>
        <remarks><para><span data-ttu-id="be15f-149">Puede especificar el tipo y el valor de la evaluación mediante el uso de <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> las propiedades <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> y.</span><span class="sxs-lookup"><span data-stu-id="be15f-149">You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MinPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MinPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MinPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-150">Devuelve un objeto que especifica cómo se evalúa la barra más corta para un formato condicional <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> de barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-150">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /></value>
        <remarks><para><span data-ttu-id="be15f-151">Puede especificar el tipo y el valor de la evaluación mediante el uso de <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> las propiedades <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> y.</span><span class="sxs-lookup"><span data-stu-id="be15f-151">You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="be15f-152">Rango al que se aplicará esta regla de formato.</span><span class="sxs-lookup"><span data-stu-id="be15f-152">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="be15f-153">Establece el rango de celdas al que se aplica esta regla de formato.</span><span class="sxs-lookup"><span data-stu-id="be15f-153">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="be15f-154">El rango debe estar en el estilo de referencia A1 y estar totalmente contenido en la hoja principal de la <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> colección.</span><span class="sxs-lookup"><span data-stu-id="be15f-154">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="be15f-155">Puede incluir un operador de rango (dos puntos), de intersección (espacio) o de unión (coma).</span><span class="sxs-lookup"><span data-stu-id="be15f-155">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="be15f-156">También se pueden usar signos de dólar, pero no se tendrán en cuenta.</span><span class="sxs-lookup"><span data-stu-id="be15f-156">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="be15f-157">Asimismo, se puede utilizar un nombre definido local en cualquier parte del rango, pero debe estar en el lenguaje de la macro.</span><span class="sxs-lookup"><span data-stu-id="be15f-157">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeBarFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.NegativeBarFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativeBarFormat As NegativeBarFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::NegativeBarFormat ^ NegativeBarFormat { Microsoft::Office::Interop::Excel::NegativeBarFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.NegativeBarFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-158">Obtiene el objeto asociado a una regla de formato condicional de barra <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-158">Gets the <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span></span></summary>
        <value><span data-ttu-id="be15f-159">Objeto <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> asociado a una regla de formato condicional de barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-159">The <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span></span></value>
        <remarks><para><span data-ttu-id="be15f-160">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-161">Devuelve el objeto primario del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="be15f-161">Returns the parent object for the specified object.</span></span> <span data-ttu-id="be15f-162">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-162">Read-only.</span></span></summary>
        <value><span data-ttu-id="be15f-163"><b>Objeto</b></span><span class="sxs-lookup"><span data-stu-id="be15f-163"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMax">
      <MemberSignature Language="C#" Value="public int PercentMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMax" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMax" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-164">Devuelve o establece un <b>valor de</b> tipo Integer que especifica la longitud de la barra de datos más larga como un porcentaje del ancho de la celda.</span><span class="sxs-lookup"><span data-stu-id="be15f-164">Returns or sets a <b>Integer</b> value that specifies the length of the longest data bar as a percentage of cell width.</span></span></summary>
        <value><span data-ttu-id="be15f-165"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="be15f-165"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-166">El valor debe ser un número entero comprendido entre 0 y 100.</span><span class="sxs-lookup"><span data-stu-id="be15f-166">The value must be a whole number between 0 and 100.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMin">
      <MemberSignature Language="C#" Value="public int PercentMin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMin" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMin { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-167">Devuelve o establece un <b>valor de</b> tipo Integer que especifica la longitud de la barra de datos más corta como un porcentaje del ancho de la celda.</span><span class="sxs-lookup"><span data-stu-id="be15f-167">Returns or sets a <b>Integer</b> value that specifies the length of the shortest data bar as a percentage of cell width.</span></span></summary>
        <value><span data-ttu-id="be15f-168"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="be15f-168"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-169">El valor debe ser un número entero comprendido entre 0 y 100.</span><span class="sxs-lookup"><span data-stu-id="be15f-169">The value must be a whole number between 0 and 100.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-p112">Devuelve o establece el valor de prioridad de la regla de formato condicional. La prioridad determina el orden de evaluación cuando existen varias reglas de formato condicional en una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-p112">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="be15f-172"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="be15f-172"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-p113">Cuando se establece la prioridad, el valor debe ser un número entero positivo entre 1 y el número total de reglas de formato condicional en la hoja de cálculo. La prioridad debe ser un valor único para todas las reglas de la hoja, por lo que si se cambia la prioridad para la regla de formato condicional especificada, es posible que varíe el valor de prioridad de las demás reglas en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-p113">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-175">Devuelve un valor <b>Boolean</b> que indica si el formato condicional se aplica a un gráfico de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="be15f-175">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="be15f-176">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-176">Read-only.</span></span></summary>
        <value><span data-ttu-id="be15f-177"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="be15f-177"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-178">Devuelve o establece una de las constantes de la enumeración, que determina el ámbito del formato condicional cuando se aplica <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> a un gráfico de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="be15f-178">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="be15f-179">El valor predeterminado es <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> , que establece el ámbito mediante la <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="be15f-179">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be15f-180">Establece el valor de prioridad para esta regla de formato condicional en "1" para que se evalúe antes que todas las demás reglas en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-180">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="be15f-181">Cuando se tienen varias reglas de formato condicional en una hoja de cálculo, si la regla no se estableció previamente como "prioridad 1", este método hará que la prioridad de todas las demás reglas existentes en la hoja de cálculo aumente en uno.</span><span class="sxs-lookup"><span data-stu-id="be15f-181">When you have multiple conditional formatting rules  in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para><span data-ttu-id="be15f-182">
            <b>Nota:</b>Los niveles de prioridad para las reglas de formato condicional se aplican en el nivel de hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-182">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be15f-183">Establece el orden de evaluación para esta regla de formato condicional de modo que se evalúe después que todas las demás reglas en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-183">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="be15f-184">El valor real de la prioridad será igual al número total de reglas de formato condicional de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-184">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="be15f-185">Cuando se tengan varias reglas de formato condicional en una hoja de cálculo, este método hará que la prioridad de las reglas que tenían un valor de prioridad mayor que el de esta regla aumente en uno.</span><span class="sxs-lookup"><span data-stu-id="be15f-185">When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para><span data-ttu-id="be15f-186">
            <b>Nota:</b>Los niveles de prioridad para las reglas de formato condicional se aplican en el nivel de hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="be15f-186">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValue">
      <MemberSignature Language="C#" Value="public bool ShowValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ShowValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-187">Devuelve o establece un valor <b>Boolean</b> que especifica si se muestra el valor de la celda en caso de que se aplique al rango el formato condicional de barra de datos.</span><span class="sxs-lookup"><span data-stu-id="be15f-187">Returns or sets a <b>Boolean</b> value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.</span></span></summary>
        <value><span data-ttu-id="be15f-188"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="be15f-188"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-189">Devuelve o establece un valor <b>Boolean</b> que determina si se deben evaluar reglas adicionales de formato en la celda si la regla actual da como resultado <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="be15f-189">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="be15f-190"><b>Valor booleano</b></span><span class="sxs-lookup"><span data-stu-id="be15f-190"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-191">Para mantener la compatibilidad con versiones anteriores, el valor predeterminado para esta propiedad es <b>False</b>, que corresponde al comportamiento opuesto de una regla de formato creada en la interfaz del usuario.</span><span class="sxs-lookup"><span data-stu-id="be15f-191">To support backward compatibility, the default value for this property is <b>False</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be15f-192">Devuelve una de las constantes de la <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeración, que especifica el tipo de formato condicional.</span><span class="sxs-lookup"><span data-stu-id="be15f-192">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="be15f-193">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be15f-193">Read-only.</span></span></summary>
        <value><span data-ttu-id="be15f-194"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="be15f-194"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="be15f-195">Esta propiedad siempre devolverá un <b>valor entero</b> de "4", que es equivalente a <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" /> .</span><span class="sxs-lookup"><span data-stu-id="be15f-195">This property will always return a <b>Integer</b> value of "4", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>