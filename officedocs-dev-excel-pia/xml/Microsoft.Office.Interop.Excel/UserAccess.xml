<Type Name="UserAccess" FullName="Microsoft.Office.Interop.Excel.UserAccess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbd39fb1f38835efe39fe6d5eb2e5786a179eb1c" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587202" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UserAccess" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UserAccess" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.UserAccess" />
  <TypeSignature Language="VB.NET" Value="Public Interface UserAccess" />
  <TypeSignature Language="C++ CLI" Value="public interface class UserAccess" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002446D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="031c2-101">Representa el acceso del usuario correspondiente a un rango protegido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="031c2-101">Represents the user access for a protected range.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="031c2-102">
        <para>Usar el <see cref="M:Microsoft.Office.Interop.Excel.UserAccessList.Add(System.String,System.Boolean)" /> (método) o el <see cref="P:Microsoft.Office.Interop.Excel.UserAccessList.Item(System.Object)" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.UserAccessList" /> colección para devolver un objeto <b>UserAccess</b> .</para>
        <para>Cuando haya obtenido un objeto <b>UserAccess</b> , puede determinar si se permite el acceso para un rango determinado en una hoja de cálculo, utilizando el <see cref="P:Microsoft.Office.Interop.Excel.UserAccess.AllowEdit" /> (propiedad).</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="031c2-102">
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.UserAccessList.Add(System.String,System.Boolean)" /> method or the <see cref="P:Microsoft.Office.Interop.Excel.UserAccessList.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.UserAccessList" /> collection to return a <b>UserAccess</b> object.</para>
          <para>Once a <b>UserAccess</b> object is returned, you can determine if access is allowed for a particular range in a worksheet, using the <see cref="P:Microsoft.Office.Interop.Excel.UserAccess.AllowEdit" /> property.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.UserAccess.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="031c2-103">
            <b>True</b> si el usuario dispone de acceso al rango especificado de una hoja de cálculo protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="031c2-103">
              <b>True</b> if the user is allowed access to the specified range on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.UserAccess.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="031c2-104">Elimina el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="031c2-104">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.UserAccess.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="031c2-105">Devuelve el nombre del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="031c2-105">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="031c2-106">
            <para>La siguiente tabla muestran valores de ejemplo de la propiedad <b>Name</b> y las propiedades relacionadas dados un origen de datos con el nombre único "[Europe]. [France]. [Paris] "y el nombre de un origen de datos no OLAP con el elemento"Paris".</para>
            <list type="table">
              <item>
                <term>
                  <b>Título</b>
                </term>
                <description>París</description>
                <description>París</description>
              </item>
              <item>
                <term>
                  <b>nombre</b>
                </term>
                <description>[Europe]. [ Francia]. [Paris] (solo lectura)</description>
                <description>París</description>
              </item>
              <item>
                <term>
                  <b>SourceName</b>
                </term>
                <description>[Europe]. [ Francia]. [Paris] (solo lectura)</description>
                <description>(Igual que el valor de la propiedad SQL, sólo lectura)</description>
              </item> El 
              <term><b>valor</b></term>de 
            <item><description>[Europe]. [ Francia]. [Paris] (solo lectura)</description><description>París</description></item></list>
            <para>Cuando se especifica un índice en la <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> colección, puede usar la sintaxis que se muestra en la siguiente tabla.</para> expresión de 
          <list type="table"><item><term>. PivotItems ("[Europe]. [ Francia]. [Paris] ")</term><description>expresión. PivotItems("Paris")</description></item></list><para>cuando se usa el <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> (propiedad) a un miembro específico de una colección de referencia, puede usar el nombre de índice de texto, tal como se muestra en la siguiente tabla.</para><list type="table"><item><term>[Europe]. [ Francia]. [Paris]</term><description>París</description></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="031c2-106">
              <para>The following table shows example values of the <b>Name</b> property and related properties given an  data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>
                    <b>Caption</b>
                  </term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>Name</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>SourceName</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>
                    <b>Value</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>