<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22837717535384f6c1e41513e3e32b7efde41769" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20576226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c6e8b-101">Contiene los métodos y las propiedades que se aplican a la síntesis de voz.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6e8b-101">Contains methods and properties that pertain to speech.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="c6e8b-102">
        <para>Usar el <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> (propiedad) de la <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto para devolver un objeto <b>Speech</b> .</para>
        <para>Cuando haya obtenido un objeto <b>Speech</b> , puede usar el <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> método del objeto <b>Speech</b> para reproducir el contenido de una cadena.</para>
        <para>
          <b>Nota</b>: no hay una característica de voz en el árbol de configuración correspondiente a Dictation y comando &amp; Control que no tiene que estar instalado.</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c6e8b-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object to return a <b>Speech</b> object.</para>
          <para>Once a <b>Speech</b> object is returned, you can use the <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> method of the <b>Speech</b> object to play back the contents of a string.</para>
          <para>
            <b>Note</b>: There is a speech feature in the setup tree that pertains to Dictation and Command &amp; Control that does not have to be installed.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6e8b-103">Devuelve o establece el orden en el que se dirá las celdas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-103">Returns or sets the order in which the cells will be spoken.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="c6e8b-104">
            <para>El valor de la propiedad <b>Direction</b> es un <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constante.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-104">
              <para>The value of the <b>Direction</b> property is an <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constant.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="c6e8b-105">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-105">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="c6e8b-106">Texto que se va a decir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-106">The text to be spoken.</span>
          </span>
        </param>
        <param name="SpeakAsync">
          <span data-ttu-id="c6e8b-107">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c6e8b-108">
            <b>True</b> hará que el <paramref name="Text" /> se diga de forma asíncrona (el método no esperará para la <paramref name="Text" /> se digan por).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-108">
              <b>True</b> will cause the <paramref name="Text" /> to be spoken asynchronously (the method will not wait for the <paramref name="Text" /> to be spoken).</span>
          </span>
          <span data-ttu-id="c6e8b-109">
            <b>False</b> hace que el <paramref name="Text" /> se diga de forma sincrónica (el método espera a que el <paramref name="Text" /> se digan por antes de continuar).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-109">
              <b>False</b> will cause the <paramref name="Text" /> to be spoken synchronously (the method waits for the <paramref name="Text" /> to be spoken before continuing).</span>
          </span>
          <span data-ttu-id="c6e8b-110">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-110">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="SpeakXML">
          <span data-ttu-id="c6e8b-111">
            <b>Boolean</b> opcional. </span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-111">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="c6e8b-112">
            <b>True</b> hará que el <paramref name="Text" /> se interpreta como XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-112">
              <b>True</b> will cause the <paramref name="Text" /> to be interpreted as XML.</span>
          </span>
          <span data-ttu-id="c6e8b-113">
            <b>False</b> hace que el <paramref name="Text" /> para que no se interprete como XML, por lo que las etiquetas XML se leen no interpreta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-113">
              <b>False</b> will cause the <paramref name="Text" /> not to be interpreted as XML, so any XML tags will be read and not interpreted.</span>
          </span>
          <span data-ttu-id="c6e8b-114">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-114">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Purge">
          <span data-ttu-id="c6e8b-115">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c6e8b-116">
            <b>True</b> hará que la síntesis de voz actual y el texto que se purgarán antes en el búfer <paramref name="Text" /> se habla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-116">
              <b>True</b> will cause current speech to be terminated and any buffered text to be purged before <paramref name="Text" /> is spoken.</span>
          </span>
          <span data-ttu-id="c6e8b-117">
            <b>False</b> no hará que la síntesis de voz actual y no depurará el texto del búfer antes de <paramref name="Text" /> se habla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-117">
              <b>False</b> will not cause the current speech to be terminated and will not purge the buffered text before <paramref name="Text" /> is spoken.</span>
          </span>
          <span data-ttu-id="c6e8b-118">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-118">The default is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6e8b-119">Microsoft Excel reproduce la cadena de texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-119">Microsoft Excel plays back the specified text string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6e8b-120">Microsoft Excel admite un modo donde la celda activa se dirá cuando se presiona la tecla ENTRAR o cuando se termina la celda activa está editando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-120">Microsoft Excel supports a mode where the active cell will be spoken when the ENTER key is pressed or when the active cell is finished being edited.</span>
          </span>
          <span data-ttu-id="c6e8b-121">Al establecer la propiedad <b>SpeakCellOnEnter</b> en <b>True</b> se activará este modo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-121">Setting the <b>SpeakCellOnEnter</b> property to <b>True</b> will turn this mode on.</span>
          </span>
          <span data-ttu-id="c6e8b-122">
            <b>False</b> desactiva este modo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6e8b-122">
              <b>False</b> turns this mode off.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>